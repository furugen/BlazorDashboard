{"version":3,"sources":["webpack://InfragisticsBlazor/./ig/igniteui-maps/ImagesChangedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapResizeBehavior.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapBackgroundTilingMode.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-xy-triangulating-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/XamGeographicMap.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBaseView.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-marker-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMarkerSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsImageryStyle.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-sub-domains-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SubDomainsCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsMapImageryView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicContourLineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ArcGISOnlineMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-core-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicHighDensityScatterSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicPolylineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicProportionalSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorVerticalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorHorizontalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/XamGeographicMap_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/CustomMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileGeneratorMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicTileSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/HostSeriesView.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-images-changed-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapSeriesHost_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapSeriesHost.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-series-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBase_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-image-tiles-ready-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImageTilesReadyEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-base-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBase.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileSeries_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileSeries.ts"],"names":["ImagesChangedEventArgs","$t","$","MapResizeBehavior","MapResizeBehavior_$type","MapBackgroundTilingMode","MapBackgroundTilingMode_$type","IgcGeographicXYTriangulatingSeriesComponent","super","this","_implementation","_observedAttributesIgcGeographicXYTriangulatingSeriesComponent","names","i","length","value","_triangulationDataSource","updateTriangulationDataSource","_cachedTriangulationDataSource","onTriangulationDataSourceImportCompleted","bind","importCompleted","source","s","e","dataSource","getPointData","trianglesSource","getTriangleData","p5","v","p3","p2","p8","qa","qc","IgcGeographicMarkerSeriesComponent","_attached","_flushQueuedAttributes","_observedAttributesIgcGeographicMarkerSeriesComponent","_a","p4","p1","qj","qx","qy","qi","qv","qw","GeographicMarkerSeries","a","pt","propertyUpdated","qh","b","c","propertyName","qk","q1","q0","d","lt","$$p","q2","q3","px","p0","qm","sl","g","BingMapsImageryStyle","IgCollection","list","add","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","BingMapsImageryStyle_$type","ObservableCollection$1","_rest","specialize","k","subDomains","ap","tilePath","actualTilePath","actualSubDomains","cultureName","GeographicMapImagery","BingMapsTileSource","_pendingBingRequest_","_isInitialized","bz","bq","b0","by","getResponseCompleted","bp","m","actualBingImageryRestUri","cc","bb","cm","ba","co","cl","isInitialized","bv","isDeferredLoad","cp","string","apiKey","bingImageryRestUri","Uri","isWellFormedUriString","imageryStyle","url_","submit","data_","resourceSets_","JSON","parse","resourceSets","resources_","resources","imageUrl_","subDomains_","List$1","imageUrlSubdomains","aj","cq","cj","o","l","f","collectionChanged","ci","n","DependencyProperty","PropertyMetadata","_subDomains","_actualSubDomains","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","_inner","clear","requestMapSettings","registerCons","register","$type","as","q","gp","Defaults","b2","ql","rc","qo","ri","qs","triangulationStatusChanged","ab","py","ScatterContourSeries","type","qn","rb","mk","lo","qp","cn","q9","o1","o2","gi","ValueBrushScale","ContourValueResolver","_triangulationStatusChanged","_triangulationStatusChanged_wrapped","_observedAttributesIgcGeographicContourLineSeriesComponent","_isElementRegistered","registerElement","htmlTagName","dw","externalObject","_createFromInternal","_stylingContainer","_styling","name","baseResult","findByName","fillScale","actualFillScale","valueResolver","container","component","parent","_inStyling","ev","outerArgs","_provideImplementation","beforeTriangulationStatusChanged","ArcGISOnlineTileSource","bu","bt","_pendingTokenRequest_","_pendingMapServerRequest_","userToken","getResponseCompleted_MapServerResponse","getResponseCompleted_TokenResponse","mapServerUriProperty","h","cf","oldValue","newValue","userNameProperty","passwordProperty","userTokenProperty","isMapPublicProperty","b8","tokenGenerationEndPoint","substr","refererUri","defaultTokenTimeout","userName","password","mapServerUri","isMapPublic","token","tileInfo","levelOfDetail","lods","b9","cd","cg","ce","ch","acquireNewToken","contentSeries","actualSeries","_series","_dataSource","_seriesAdapter","_disconnected","_defaultTooltips","_imageTilesReady","_imageTilesReady_wrapped","ensureStylablePatched","Object","getPrototypeOf","_renderer","document","DataChartStylingDefaults","_container","createElement","updateRoot","setStyleProperty","nativeElement","_wrapper","chart","_chart","series","owner","_provideRenderer","provideData","parentElement","_ensureDefaultTooltip","_ensureTooltipCreated","provideContainer","MutationObserver","mutation","updateContentChildren","observe","childList","addSizeWatcher","notifyContainerResized","_height","style","height","_width","width","legend","undefined","_innerColl","addListener","sender","action","NotifyCollectionChangedAction","Add","addManualItem","newItems","item","Remove","removeManualItemAt","oldStartingIndex","Replace","insertManualItem","newStartingIndex","Reset","clearManualItems","destroy","XamGeographicMap","bindData","currSeries","children","push","notifyContentChanged","onDetachedFromUI","onAttachedToUI","classList","appendChild","rootWrapper","getNativeElement","display","afterContentInit","isRegistered","cr","create","onContentReady","_onDefaultTooltipsReady","createTooltip","ele","wrapper","updateToolTip","hideToolTip","showDefaultTooltip","self","isSubContent","removeChild","context","backgroundContent","_observedAttributesIgcGeographicMapComponent","s5","sy","s2","su","s4","s3","u0","uo","sn","sp","ea","ta","s9","s6","xAxis","yAxis","iv","us","geographic","getZoomRectFromGeoRect","zoomWindow","t4","worldRect","t3","getZoomFromGeographicRect","extraPixelPadding","up","northWest","southEast","getZoomFromGeographicPoints","windowRect","uu","pixelCoordinate","ug","geographicCoordinate","uh","ui","tr","tz","f4","f5","deferredRefresh","td","t6","imageTilesReady","beforeImageTilesReady","HostSeriesView","HighDensityScatterSeries","rx","r1","qg","qe","qd","eh","p7","q8","p6","sv","rl","cb","gk","aq","os","al","ox","ak","GeographicMapSeriesHost","progressiveLoadStatusChanged","p9","raisePropertyChanged","qb","currentStatus","ck","set_ez","Color","_progressiveLoadStatusChanged","_progressiveLoadStatusChanged_wrapped","_observedAttributesIgcGeographicHighDensityScatterSeriesComponent","d1","beforeProgressiveLoadStatusChanged","GeographicShapeSeriesBaseView","r6","p","q5","t0","r8","st","tf","ro","sw","sf","qz","so","tw","r5","tx","r7","GeographicShapeSeriesBase","styleShape","q4","ScatterPolygonSeries","rm","r3","r4","rn","sm","si","Brush","DataTemplate","CollisionAvoidanceType","MarkerFillMode","MarkerOutlineMode","Style","DeviceUtils","MarkerType","StyleSelector","_styleShape","_styleShape_wrapped","_observedAttributesIgcGeographicShapeSeriesComponent","d3","fill","ensureShapeStyle","stroke","strokeThickness","NaN","opacity","beforeStyleShape","sk","q7","ScatterPolylineSeries","_observedAttributesIgcGeographicPolylineSeriesComponent","d4","sx","rs","s1","rq","ur","u9","u3","uy","rg","uf","uq","uw","re","uv","rd","q6","assigningScatterStyle","assigningScatterMarkerStyle","BubbleSeries","cu","cv","cw","cx","cy","cz","ra","r2","rw","rf","BrushScale","ScatterItemSearchMode","SizeScale","_assigningScatterStyle","_assigningScatterStyle_wrapped","_assigningScatterMarkerStyle","_assigningScatterMarkerStyle_wrapped","_observedAttributesIgcGeographicProportionalSymbolSeriesComponent","c1","radiusScale","beforeAssigningScatterStyle","beforeAssigningScatterMarkerStyle","rh","ScatterSeries","_observedAttributesIgcGeographicSymbolSeriesComponent","VerticalLinearScaler","au","ai","Rect","isEmpty","getMercatorUnscaledValue","top","getMercatorScaledValue1","values_","Array","isArray","w","x","y","z","aa","j","r","t","u","af","ac","ah","ag","Math","sin","log","ll","lk","am","getMercatorScaledValue3","exp","asin","HorizontalLinearScaler","left","SeriesViewer","tc","s8","uj","sq","ss","um","s7","s0","ul","empty","uk","bottom","$ret","NumericXAxis","bh","mr","NumericYAxis","tu","t1","k8","provideRenderer","sz","fv","fy","l_op_Inequality","nb","b5","right","sg","ScalerParams","un","ef","intersect","ei","e0","clearTileCache","ee","mg","t2","r0","oi","sb","floor","ceil","abs","dx","Tuple$2","g0","MathUtil","mv","m6","n6","ty","t5","n5","min","b7","m7","isHorizontalWrappingEnabled","b6","tv","deferralHandler","fu","geographicMap","fr","tt","fs","l7","e3","oh","od","k9","ImageTilesReadyEventArgs","fo","fw","fx","ItfConverter","itemsSource","triangulationSource","points","triangles","ny","no","n4","kw","setTimeout","window","oc","ChartVisualData","axes","add1","count","hj","contentArea","RectData","centralArea","plotArea","uz","IMapRenderDeferralHandler","Control","an","propertyChanged","imagesChanged","cancellingImage","downloadingImage","ao","a5","a4","a3","a2","bf","referer","bj","userAgent","av","bg","geographicMapProperty","a7","bs","ut","_opacity","a8","XamMultiScaleImage","a9","bn","Size","b1","b3","a6","qt","pr","ps","GeographicScatterAreaSeriesView","rk","qr","SeriesViewerView","fn","fz","fp","ts","el","BrushCollection","du","be","ae","bd","dv","remove","ft","fd","fe","_stroke","bc","OpenStreetMapTileSource","tilePathProperty","setTilePathUrl","br","qu","ScatterAreaSeries","ColorScale","_getTileImageUri","_getTileImageUri_wrapped","getTileImageUri","beforeGetTileImageUri","TileGeneratorTileSource","uri","toString","split","parseInt","tileGenerator","cancelTile","img_","image","getTile","deferAction","src","url","ITileGenerator","TileSeries","_observedAttributesIgcGeographicTileSeriesComponent","tileImagery","_observedAttributesIgcGeographicScatterAreaSeriesComponent","c9","colorScale","actualColorScale","_observedAttributesIgcTileSeriesComponent","IgcGeographicMapModule","createImplementation","onImplementationCreated","_imagesChanged","_imagesChanged_wrapped","_cancellingImage","_cancellingImage_wrapped","_downloadingImage","_downloadingImage_wrapped","beforeImagesChanged","beforeCancellingImage","beforeDownloadingImage","jf","hn","hasMarkers","hostedSeries_","createFromInternal","Prefix","Postfix","kt","pu","ax","ay","hp","g9","g7","ga","pb","pk","pl","pm","pn","f6","o7","o9","pc","gb","o8","f7","pa","f9","g4","f3","hl","nr","kp","lw","po","hc","kz","hf","actualWindowRectChanged","pz","ca","hs_","v_","_visibility","visibility","expectFunctions","gh","hs","b4","at","pv","v2_","l6","_coercionMethods","coercionMethods","ky","kq","bx","ar","pq","hd","en","oo","or","IgcGeographicMapSeriesHostComponent","_observedAttributesIgcGeographicMapSeriesHostComponent","dr","memberPathName","world","hk","skipUnknowns","useInterpolation","f8","mouse","animate","assigningShapeStyle","assigningShapeMarkerStyle","qq","ext_","IgcImageTilesReadyEventArgs","IgcGeographicShapeSeriesBaseComponent","_currData","_onImportCompleted","_assigningShapeStyle","_assigningShapeStyle_wrapped","_assigningShapeMarkerStyle","_assigningShapeMarkerStyle_wrapped","_observedAttributesIgcGeographicShapeSeriesBaseComponent","_shapeDataSource","updateShapeDataSource","_databaseSource","data","_cachedShapeDataSource","onShapeDataSourceImportCompleted","shapefileSource","databaseSource","dataBind","shapefileDataSource","beforeAssigningShapeStyle","beforeAssigningShapeMarkerStyle","ShapeSeriesBase","sj","se","de","le","dd","da","dh","sh","lg","df","gz","dg","mt","l8","getViewInfo","e8","a1","ry","ko","db","ShapeSeriesViewBase","c7","di","GeometryGroup","c8","c3","get2DCanvasContext","RenderingContext","CanvasViewRenderer","setAttribute","dc","clip","round"],"mappings":"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","file":"igniteui-webcomponents-maps.6e4d5eeace810ddbcae3.bundle.js","sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImagesChangedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImagesChangedEventArgs, 'ImagesChangedEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapResizeBehavior {\r\n\t/**\r\n\t * Indicates that the map should decide the desired resize mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will attempt to keep the top left position static during resize.\r\n\t */\r\n\tMaintainTopLeftPosition = 1,\r\n\t/**\r\n\t * Map will attempt to keep the center position static during resize.\r\n\t */\r\n\tMaintainCenterPosition = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapResizeBehavior_$type = markEnum('MapResizeBehavior', 'Auto,0|MaintainTopLeftPosition,1|MaintainCenterPosition,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapBackgroundTilingMode {\r\n\t/**\r\n\t * Indicates that the map should decide the desired tiling mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will not wrap tiles around the origin.\r\n\t */\r\n\tNonWrapped = 1,\r\n\t/**\r\n\t * Map will wrap tiles around the origin.\r\n\t */\r\n\tWrapped = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapBackgroundTilingMode_$type = markEnum('MapBackgroundTilingMode', 'Auto,0|NonWrapped,1|Wrapped,2');\r\n\r\n\r\n","import { IgRect } from \"igniteui-core/IgRect\"\r\nimport { IgSize } from \"igniteui-core/IgSize\"\r\nimport { IgPoint } from \"igniteui-core/IgPoint\"\r\nimport { IgDataTemplate } from \"igniteui-core/IgDataTemplate\"\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-core/componentUtil\";\r\nimport { IgcTriangulationDataSource } from \"igniteui-core/igc-triangulation-data-source\";\r\nimport { IEnumerable } from \"igniteui-core/type\";\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\n\r\n/**\r\n * Base class for geographic series which triangulate XY data prior to rendering.\r\n*/\r\nexport abstract class IgcGeographicXYTriangulatingSeriesComponent extends IgcGeographicMapSeriesHostComponent {\r\n\r\n\r\n    public get i(): GeographicXYTriangulatingSeries {\r\n        return this._implementation;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private static _observedAttributesIgcGeographicXYTriangulatingSeriesComponent: string[] = null;\r\n    static get observedAttributes() {\r\n        if (IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent == null) {\r\n            let names = getAllPropertyNames(IgcGeographicXYTriangulatingSeriesComponent);\r\n            for (let i = 0; i < names.length; i++) {\r\n                names[i] = toSpinal(names[i]);\r\n            }\r\n            IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent = names;\r\n        }\r\n        return IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent;\r\n    }\r\n\r\n    private _triangulationDataSource: string;\r\n\t/**\r\n\t * Gets or sets the string path specifying the location of the Itf file.\r\n\t*/\r\n    set triangulationDataSource(value: string) {\r\n        this._triangulationDataSource = value;\r\n        this.updateTriangulationDataSource();\r\n    }\r\n    get triangulationDataSource(): string {\r\n        return this._triangulationDataSource;\r\n    }\r\n\r\n    private _cachedTriangulationDataSource: IgcTriangulationDataSource;\r\n    private updateTriangulationDataSource() {\r\n        if (this._cachedTriangulationDataSource == null) {\r\n            this._cachedTriangulationDataSource = new IgcTriangulationDataSource();\r\n            this.onTriangulationDataSourceImportCompleted = this.onTriangulationDataSourceImportCompleted.bind(this);\r\n            this._cachedTriangulationDataSource.importCompleted = this.onTriangulationDataSourceImportCompleted;\r\n        }\r\n\r\n       \tthis._cachedTriangulationDataSource.source = this._triangulationDataSource;\r\n    }\r\n\r\n    private onTriangulationDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedTriangulationDataSource.getPointData();\r\n        this.trianglesSource = <any[]><any>this._cachedTriangulationDataSource.getTriangleData();\r\n    }\r\n\r\n\t\t/**\r\n\t * The name of the property from which to extract the Longitude for each item in the ItemsSource.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.p5 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.p5 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to extract the Latitude for each item in the ItemsSource.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.p3 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.p3 = v;\r\n\t}\r\n\t/**\r\n\t * The source of triangulation data.\r\n\t * This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.\r\n\t*/\r\n\tget trianglesSource() : any[] {\r\n\t\treturn (this.i.p2 as any) as any[];\r\n\t}\r\n\tset trianglesSource(v: any[]) {\r\n\t                                        this.i.p2 = (v as any) as IEnumerable;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath1() : string {\r\n\t\treturn (this.i.p8 as string);\r\n\t}\r\n\tset triangleVertexMemberPath1(v: string) {\r\n\t\tthis.i.p8 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath2() : string {\r\n\t\treturn (this.i.qa as string);\r\n\t}\r\n\tset triangleVertexMemberPath2(v: string) {\r\n\t\tthis.i.qa = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath3() : string {\r\n\t\treturn (this.i.qc as string);\r\n\t}\r\n\tset triangleVertexMemberPath3(v: string) {\r\n\t\tthis.i.qc = v;\r\n\t}\r\n\r\n    \r\n\r\n    \r\n\r\n\t\r\n\r\n    \r\n\r\n    //@@ZoneRunner\r\n    \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nexport {XamGeographicMap} from \"./XamGeographicMap_combined\"\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nexport {GeographicShapeSeriesBaseView} from \"./GeographicShapeSeriesBase_combined\"\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Base class for creating marker series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMarkerSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMarkerSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicMarkerSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMarkerSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.p3;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.p3 = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.p3));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.p4 as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.p4 = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.p4);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.p2;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.p2 = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.p2));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.p1;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.p1 = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.p1));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.qj as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.qj = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.qx);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.qx = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.qx));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.qy);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.qy = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.qy));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the maximum number of markerItems displayed by the current series.\r\n\t * If more than the specified number of markerItems are visible, the series will automatically\r\n\t * choose a representative set.\r\n\t*/\r\n\tget maximumMarkers() : number {\r\n\t\treturn (this.i.p5 as number);\r\n\t}\r\n\tset maximumMarkers(v: number) {\r\n\t\tthis.i.p5 = +v;\r\n\t                                        this._a(\"maximumMarkers\", this.i.p5);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.qi as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.qi = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.qv);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.qv = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.qv));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.qw);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.qw = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.qw));\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, Type, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, typeGetValue, markType, markDep, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMarkerSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicMarkerSeries, 'GeographicMarkerSeries', (<any>GeographicMapSeriesHost).$);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tlet a = this.pt;\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.qh));\r\n\t}\r\n\tm2(): DataTemplate {\r\n\t\treturn this.qi;\r\n\t}\r\n\tov(): Brush {\r\n\t\treturn this.qv;\r\n\t}\r\n\tow(): Brush {\r\n\t\treturn this.qw;\r\n\t}\r\n\tfv(): number {\r\n\t\treturn this.p4;\r\n\t}\r\n\tprivate qh(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.pt);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualMarkerTemplate\") {\r\n\t\t\tthis.qi = c.qk;\r\n\t\t} else if (b.propertyName == \"ActualMarkerOutline\") {\r\n\t\t\tthis.qw = c.q1;\r\n\t\t} else if (b.propertyName == \"ActualMarkerBrush\") {\r\n\t\t\tthis.qv = c.q0;\r\n\t\t}\r\n\t}\r\n\tp3: MarkerType;\r\n\tp4: number;\r\n\tp2: MarkerOutlineMode;\r\n\tp1: MarkerFillMode;\r\n\tqj: DataTemplate;\r\n\tqx: Brush;\r\n\tqy: Brush;\r\n\tp5: number;\r\n\tqi: DataTemplate;\r\n\tqv: Brush;\r\n\tqw: Brush;\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicMarkerSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.pt).q2 = this.qx;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.pt).q3 = this.qy;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.pt).px = this.p2;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.pt).pt = this.p1;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[9]:\r\n\t\t\t(<ScatterBase>this.pt).p0 = this.p3;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[7]:\r\n\t\t\t(<ScatterBase>this.pt).qm = this.qj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[8]:\r\n\t\t\t(<ScatterBase>this.pt).p5 = this.p4;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[10]:\r\n\t\t\t(<ScatterBase>this.pt).sl = this.p5;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMarkerSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:qv:qk', [ (<any>Brush).$ ], 'ActualMarkerOutline:qw:ql', [ (<any>Brush).$ ], 'ActualMarkerTemplate:qi:qm', [ (<any>DataTemplate).$, null ], 'MarkerBrush:qx:qn', [ (<any>Brush).$ ], 'MarkerFillMode:p1:qo', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:p2:qp', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:qy:qq', [ (<any>Brush).$ ], 'MarkerTemplate:qj:qr', [ (<any>DataTemplate).$, null ], 'MarkerThickness:p4:qs', [ 1, DeviceUtils.g(2) ], 'MarkerType:p3:qt', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, Defaults.e) ], 'MaximumMarkers:p5:qu', [ 1, 400 ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Describes available map styles for the Bing Maps imagery.\r\n */\r\nexport enum BingMapsImageryStyle {\r\n\t/**\r\n\t * Specifies the Aerial map style without road or labels overlay.\r\n\t */\r\n\tAerial = 0,\r\n\t/**\r\n\t * Specifies the Aerial map style with road and labels overlay.\r\n\t */\r\n\tAerialWithLabels = 1,\r\n\t/**\r\n\t * Specifies the Roads map style without aerial overlay.\r\n\t */\r\n\tRoad = 2,\r\n\t/**\r\n\t * Specifies a dark version of the Roads maps.\r\n\t */\r\n\tCanvasDark = 3,\r\n\t/**\r\n\t * Specifies a lighter version of the Roads maps.\r\n\t */\r\n\tCanvasLight = 4,\r\n\t/**\r\n\t * Specifies a grayscale version of the Roads maps.\r\n\t */\r\n\tCanvasGray = 5\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let BingMapsImageryStyle_$type = markEnum('BingMapsImageryStyle', 'Aerial,0|AerialWithLabels,1|Road,2|CanvasDark,3|CanvasLight,4|CanvasGray,5');\r\n\r\n\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\nimport { markType } from 'igniteui-core/type';\r\n\r\n\r\nimport { String_$type } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcSubDomainsCollection extends IgCollection<string, string> {\r\n    constructor(list?: string[]) {\r\n        super();\r\n        \r\n   \r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<string, string> {\r\n        \r\n \r\n        let coll = new SyncableObservableCollection$2<string, string>(String_$type, String_$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return ext;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            return int;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { IEnumerable$1, IEnumerable$1_$type, Base, String_$type, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SubDomainsCollection extends ObservableCollection$1<string> {\r\n\tstatic $t: Type = markType(SubDomainsCollection, 'SubDomainsCollection', (<any>ObservableCollection$1).$.specialize(String_$type));\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: IEnumerable$1<string>);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(String_$type, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<string> = <IEnumerable$1<string>>_rest[0];\r\n\t\t\t\tsuper(String_$type, 1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImageryView } from \"./GeographicMapImageryView\";\r\nimport { SubDomainsCollection } from \"./SubDomainsCollection\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { BingMapsTileSource } from \"igniteui-core/BingMapsTileSource\";\r\nimport { Base, Type, markType, Boolean_$type, typeCast, String_$type, enumGetBox, EnumUtil, runOn, delegateRemove, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-core/NotifyCollectionChangedEventArgs\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { stringEmpty, stringIsNullOrEmpty } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImageryView extends GeographicMapImageryView {\r\n\tstatic $t: Type = markType(BingMapsMapImageryView, 'BingMapsMapImageryView', (<any>GeographicMapImageryView).$);\r\n\tconstructor(a: BingMapsMapImagery) {\r\n\t\tsuper(a);\r\n\t\tthis.k = a;\r\n\t}\r\n\tprotected k: BingMapsMapImagery;\r\n\tm(): void {\r\n\t\tif (this.k.subDomains == null) {\r\n\t\t\tthis.k.subDomains = new SubDomainsCollection(0);\r\n\t\t}\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\to(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t}\r\n\tl(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\tn(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(BingMapsMapImagery, 'BingMapsMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate _pendingBingRequest_: any = null;\r\n\tprivate static readonly cc: string = \"http://dev.virtualearth.net/REST/v1/Imagery/Metadata/\";\r\n\tconstructor() {\r\n\t\tsuper(new BingMapsTileSource(0));\r\n\t\tthis.getResponseCompleted = this.getResponseCompleted.bind(this);\r\n\t\tthis.bp.m();\r\n\t\tthis.actualBingImageryRestUri = BingMapsMapImagery.cc;\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new BingMapsMapImageryView(this);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t\tsuper.bb(a);\r\n\t\tthis.bp = <BingMapsMapImageryView>a;\r\n\t}\r\n\tbp: BingMapsMapImageryView;\r\n\tprivate _isInitialized: boolean = false;\r\n\tget isInitialized(): boolean {\r\n\t\treturn this._isInitialized;\r\n\t}\r\n\tset isInitialized(a: boolean) {\r\n\t\tthis._isInitialized = a;\r\n\t}\r\n\tisDeferredLoad: boolean;\r\n\ttilePath: string;\r\n\tprivate bz: string = null;\r\n\tget actualTilePath(): string {\r\n\t\treturn this.bz;\r\n\t}\r\n\tset actualTilePath(a: string) {\r\n\t\tlet b = this.bz;\r\n\t\tthis.bz = a;\r\n\t\tthis.cm(\"ActualTilePath\", b, this.bz);\r\n\t}\r\n\tsubDomains: SubDomainsCollection;\r\n\tprivate bq: SubDomainsCollection = null;\r\n\tget actualSubDomains(): SubDomainsCollection {\r\n\t\treturn this.bq;\r\n\t}\r\n\tset actualSubDomains(a: SubDomainsCollection) {\r\n\t\tlet b = this.bq;\r\n\t\tthis.bq = a;\r\n\t\tthis.cm(\"ActualSubDomains\", b, this.bq);\r\n\t}\r\n\tprivate b0: string = null;\r\n\tget bingImageryRestUri(): string {\r\n\t\treturn this.b0;\r\n\t}\r\n\tset bingImageryRestUri(a: string) {\r\n\t\tlet b = this.b0;\r\n\t\tthis.b0 = a;\r\n\t\tthis.cm(\"BingImageryRestUri\", b, this.b0);\r\n\t}\r\n\tprivate by: string = null;\r\n\tget actualBingImageryRestUri(): string {\r\n\t\treturn this.by;\r\n\t}\r\n\tset actualBingImageryRestUri(a: string) {\r\n\t\tlet b = this.by;\r\n\t\tthis.by = a;\r\n\t\tthis.ba(\"ActualBingImageryRestUri\", b, this.by);\r\n\t}\r\n\tcultureName: string;\r\n\tapiKey: string;\r\n\timageryStyle: BingMapsImageryStyle;\r\n\trequestMapSettings(): void {\r\n\t\tthis.co(true);\r\n\t}\r\n\tprivate co(a: boolean): void {\r\n\t\tthis.cl(a);\r\n\t}\r\n\tprivate bw(): boolean {\r\n\t\tif ((this.tilePath == null) && (this.subDomains == null)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate cq(): void {\r\n\t\tthis.isInitialized = false;\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.isDeferredLoad) {\r\n\t\t\tthis.co(false);\r\n\t\t}\r\n\t}\r\n\tprivate bv(): boolean {\r\n\t\tif (stringIsNullOrEmpty(this.apiKey) || this.apiKey.length < 20) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate cj(): void {\r\n\t}\r\n\tprivate cp(a: string, b: List$1<string>): void {\r\n\t\tif (a != this.actualTilePath) {\r\n\t\t\tthis.actualTilePath = a;\r\n\t\t}\r\n\t\tlet c = b == null ? null : new SubDomainsCollection(1, b);\r\n\t\tif (this.actualSubDomains != c) {\r\n\t\t\tthis.actualSubDomains = c;\r\n\t\t}\r\n\t\tthis.bp.m();\r\n\t}\r\n\tprivate cl(a: boolean): void {\r\n\t\tif ((!a) && (this.isDeferredLoad)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.isInitialized = false;\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isInitialized = true;\r\n\t\tlet b: string = null;\r\n\t\tif (this.bingImageryRestUri != null) {\r\n\t\t\tif (Uri.isWellFormedUriString(this.bingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.bingImageryRestUri;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (Uri.isWellFormedUriString(this.actualBingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.actualBingImageryRestUri;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.imageryStyle;\r\n\t\tb += enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, c);\r\n\t\tlet d = \"key=\" + this.apiKey + \"&include=ImageryProviders\";\r\n\t\tlet url_ = b + \"?\" + d;\r\n\t\tthis._pendingBingRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted, null );\r\n\t}\r\n\tprivate getResponseCompleted(a: any, b: any): void {\r\n\t\tif (b != this._pendingBingRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingBingRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet resourceSets_ =  (<any>JSON.parse(data_)).resourceSets;\r\n\t\tif (resourceSets_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet resources_ = resourceSets_.length > 0 ? resourceSets_[0].resources : null;\r\n\t\tif (resources_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (resources_.length == 0) { return; };\r\n\t\tlet imageUrl_: string = <string>(resources_[0].imageUrl);\r\n\t\tlet subDomains_: List$1<string> = new List$1<string>(String_$type, 0);\r\n\t\tfor (var i = 0; i < resources_[0].imageUrlSubdomains.length; i++) { subDomains_.add(resources_[0].imageUrlSubdomains[i]); };\r\n\t\tthis.cp(imageUrl_, subDomains_);\r\n\t}\r\n\tprivate ci(a: any, b: NotifyCollectionChangedEventArgs): void {\r\n\t\tthis.aj.e();\r\n\t\tthis.cq();\r\n\t\tthis.cm(BingMapsMapImagery.$$p[4], this.actualSubDomains, this.actualSubDomains);\r\n\t}\r\n\tprivate cm(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase BingMapsMapImagery.$$p[0]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[3]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[5]:\r\n\t\t\tthis.cj();\r\n\t\t\tthis.actualTilePath = <string>c;\r\n\t\t\tthis.bp.o();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[1]:\r\n\t\t\tthis.bp.l();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[2]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[4]:\r\n\t\t\tthis.cj();\r\n\t\t\tlet d = <SubDomainsCollection>b;\r\n\t\t\tlet e = <SubDomainsCollection>c;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\tlet f = this.actualSubDomains;\r\n\t\t\t\tf.collectionChanged = delegateRemove(f.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.actualSubDomains = e;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\te.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.bp.n();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTilePath\":\r\n\t\t\tlet g = <string>c;\r\n\t\t\tif (stringIsNullOrEmpty(g)) {\r\n\t\t\t\tthis.cq();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BingImageryRestUri\":\r\n\t\t\tthis.actualBingImageryRestUri = <string>c;\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBingImageryRestUri\":\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, BingMapsMapImagery, 'cm', [ 'ApiKey', [ 2, stringEmpty() ], 'CultureName', [ 2, \"en-US\" ], 'ImageryStyle', [ BingMapsImageryStyle_$type, enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, 1) ], 'IsDeferredLoad', [ 0, false ], 'SubDomains', [ (<any>SubDomainsCollection).$, null ], 'TilePath', [ 2, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSubDomainsCollection } from \"./igc-sub-domains-collection\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { BingMapsMapImagery as BingMapsMapImagery_internal } from \"./BingMapsMapImagery\";\r\nimport { ensureBool, ensureEnum } from \"igniteui-core/componentUtil\";\r\nimport { SubDomainsCollection as SubDomainsCollection_internal } from \"./SubDomainsCollection\";\r\nimport { String_$type } from \"igniteui-core/type\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * UI element class used to display BingMapsMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcBingMapsMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : BingMapsMapImagery_internal\r\n{\r\n\treturn new BingMapsMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : BingMapsMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets a status whether the Bing Maps service is initialized.\r\n\t*/\r\n\tget isInitialized() : boolean {\r\n\t\treturn (this.i.isInitialized as boolean);\r\n\t}\r\n\tset isInitialized(v: boolean) {\r\n\t\tthis.i.isInitialized = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the Bing Maps service should be auto-initialized upon valid property values.\r\n\t*/\r\n\tget isDeferredLoad() : boolean {\r\n\t\treturn (this.i.isDeferredLoad as boolean);\r\n\t}\r\n\tset isDeferredLoad(v: boolean) {\r\n\t\tthis.i.isDeferredLoad = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile image uri.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the actual map tile image uri.\r\n\t*/\r\n\tget actualTilePath() : string {\r\n\t\treturn (this.i.actualTilePath as string);\r\n\t}\r\n\tset actualTilePath(v: string) {\r\n\t\tthis.i.actualTilePath = v;\r\n\t}\r\n\tprivate _subDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the collection of image uri subdomains.\r\n\t*/\r\n\tget subDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._subDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.subDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._subDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.subDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._subDomains;\r\n\t}\r\n\tset subDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._subDomains !== null) {\r\n\t                                            (this._subDomains as any)._setSyncTarget(null);\r\n\t                                            this._subDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._subDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.subDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._subDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.subDomains = innerColl;\r\n\t\r\n\t}\r\n\tprivate _actualSubDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the actual collection of image uri subdomains.\r\n\t*/\r\n\tget actualSubDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._actualSubDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.actualSubDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._actualSubDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.actualSubDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._actualSubDomains;\r\n\t}\r\n\tset actualSubDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._actualSubDomains !== null) {\r\n\t                                            (this._actualSubDomains as any)._setSyncTarget(null);\r\n\t                                            this._actualSubDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._actualSubDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.actualSubDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._actualSubDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.actualSubDomains = innerColl;\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Bing Imagery Rest Uri.\r\n\t*/\r\n\tget bingImageryRestUri() : string {\r\n\t\treturn (this.i.bingImageryRestUri as string);\r\n\t}\r\n\tset bingImageryRestUri(v: string) {\r\n\t\tthis.i.bingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Actual Bing Imagery Rest Uri.\r\n\t*/\r\n\tget actualBingImageryRestUri() : string {\r\n\t\treturn (this.i.actualBingImageryRestUri as string);\r\n\t}\r\n\tset actualBingImageryRestUri(v: string) {\r\n\t\tthis.i.actualBingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget cultureName() : string {\r\n\t\treturn (this.i.cultureName as string);\r\n\t}\r\n\tset cultureName(v: string) {\r\n\t\tthis.i.cultureName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets an API key required by the Bing Maps imagery service.\r\n\t * This key must be obtained from the http://www.bingmapsportal.com website.\r\n\t*/\r\n\tget apiKey() : string {\r\n\t\treturn (this.i.apiKey as string);\r\n\t}\r\n\tset apiKey(v: string) {\r\n\t\tthis.i.apiKey = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets a map style of the Bing Maps imagery tiles. \r\n\t * For example: Aerial, AerialWithLabels, or Road map style.\r\n\t*/\r\n\tget imageryStyle() : BingMapsImageryStyle {\r\n\t\treturn this.i.imageryStyle;\r\n\t}\r\n\tset imageryStyle(v: BingMapsImageryStyle) {\r\n\t\tthis.i.imageryStyle = ensureEnum<BingMapsImageryStyle>(BingMapsImageryStyle_$type, v);\r\n\t}\r\n\t/**\r\n\t * Will Connect to the Bing Rest API and retrieve the required TilePath and Subdomains from the service.  This requires a valid API key to already be set.\r\n\t\r\n\t*/\r\n\tpublic requestMapSettings() {\r\n\t\tthis.i.requestMapSettings();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcBingMapsMapImagery } from './igc-bing-maps-map-imagery';\r\nimport { BingMapsMapImagery } from './BingMapsMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcBingMapsMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcBingMapsMapImagery\", IgcBingMapsMapImagery);\r\n        TypeRegistrar.register(\"BingMapsMapImagery\", (<any>BingMapsMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicXYTriangulatingSeriesView } from \"./GeographicXYTriangulatingSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterContourSeries } from \"igniteui-charts/ScatterContourSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, String_$type, markDep } from \"igniteui-core/type\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ValueBrushScale } from \"igniteui-charts/ValueBrushScale\";\r\nimport { ContourValueResolver } from \"igniteui-charts/ContourValueResolver\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicContourLineSeriesView, 'GeographicContourLineSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicContourLineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cm = a;\r\n\t}\r\n\tprivate cm: GeographicContourLineSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cm.gp = Defaults.m;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tif (this.cm.pt != null) {\r\n\t\t\tthis.cm.ql.rc = this.cm.qo;\r\n\t\t\tthis.cm.ql.ri = this.cm.qs;\r\n\t\t}\r\n\t}\r\n\tcn(): void {\r\n\t\tif (this.cm.ql != null) {\r\n\t\t\tthis.cm.ql.rc = this.cm.qo;\r\n\t\t}\r\n\t}\r\n\tco(): void {\r\n\t\tif (this.cm.ql != null) {\r\n\t\t\tthis.cm.ql.ri = this.cm.qs;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicContourLineSeries, 'GeographicContourLineSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_dw(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicContourLineSeries).$;\r\n\t}\r\n\tprotected py(): void {\r\n\t\tsuper.py();\r\n\t}\r\n\tql: ScatterContourSeries;\r\n\tprotected ps(): Series {\r\n\t\tthis.ql = new ScatterContourSeries();\r\n\t\tlet a = this.ql;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.qv));\r\n\t\tlet b = this.ql;\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.qw));\r\n\t\treturn this.ql;\r\n\t}\r\n\tprivate qv(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate qw(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterContourSeries>((<any>ScatterContourSeries).$, this.pt);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualFillScale\") {\r\n\t\t\tthis.qn = c.rb;\r\n\t\t}\r\n\t}\r\n\tqs: string;\r\n\tqo: ValueBrushScale;\r\n\tqn: ValueBrushScale;\r\n\tprotected mk(): void {\r\n\t\tsuper.mk();\r\n\t}\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new GeographicContourLineSeriesView(this);\r\n\t}\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.qp = <GeographicContourLineSeriesView>a;\r\n\t}\r\n\tqp: GeographicContourLineSeriesView;\r\n\tqk: ContourValueResolver;\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicContourLineSeries.$$p[1]:\r\n\t\t\tthis.qp.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[2]:\r\n\t\t\tthis.qp.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[3]:\r\n\t\t\tthis.ql.q9 = this.qk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashArray\":\r\n\t\t\tthis.ql.o1 = this.o1;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashCap\":\r\n\t\t\tthis.ql.o2 = this.o2;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MiterLimit\":\r\n\t\t\tthis.ql.gi = this.gi;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicContourLineSeries, 'raisePropertyChanged', [ 'ActualFillScale:qn:qx', [ (<any>ValueBrushScale).$, null ], 'FillScale:qo:qy', [ (<any>ValueBrushScale).$, null ], 'ValueMemberPath:qs:qz', [ 2, \"value\" ], 'ValueResolver:qk:q0', [ (<any>ContourValueResolver).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcValueBrushScaleComponent } from \"igniteui-charts/igc-value-brush-scale-component\";\r\nimport { IgcContourValueResolverComponent } from \"igniteui-charts/igc-contour-value-resolver-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicContourLineSeries } from \"./GeographicContourLineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a class for Geographic Contour Series displayed on a map.\r\n*/\r\nexport class IgcGeographicContourLineSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicContourLineSeries\r\n{\r\n\treturn new GeographicContourLineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicContourLineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicContourLineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicContourLineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-contour-line-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicContourLineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicContourLineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicContourLineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicContourLineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a line contour shape.\r\n\t*/\r\n\tget isLineContour() : boolean {\r\n\t\treturn (this.i.dw as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to retrieve the numeric values from the ItemsSource items.\r\n\t*/\r\n\tget valueMemberPath() : string {\r\n\t\treturn (this.i.qs as string);\r\n\t}\r\n\tset valueMemberPath(v: string) {\r\n\t\tthis.i.qs = v;\r\n\t}\r\n\t/**\r\n\t * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\r\n\t*/\r\n\tget fillScale() : IgcValueBrushScaleComponent {\r\n\t                                        if (this.i.qo == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.qo as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(this.i.qo);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.qo;\r\n\t                                            }\r\n\t                                            (this.i.qo as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.qo as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.qo = null : this.i.qo = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual fill scale that is set on the FillScale property or default FillScale\r\n\t*/\r\n\tget actualFillScale() : IgcValueBrushScaleComponent {\r\n\t                                        if (this.i.qn == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.qn as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(this.i.qn);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.qn;\r\n\t                                            }\r\n\t                                            (this.i.qn as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.qn as any).externalObject;\r\n\t}\r\n\tset actualFillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.qn = null : this.i.qn = v.i;\r\n\t}\r\n\t/**\r\n\t * The ContourValueResolver used to determine the numeric values of contours.\r\n\t*/\r\n\tget valueResolver() : IgcContourValueResolverComponent {\r\n\t                                        if (this.i.qk == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.qk as any).externalObject) {\r\n\t                                            let e = IgcContourValueResolverComponent._createFromInternal(this.i.qk);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.qk;\r\n\t                                            }\r\n\t                                            (this.i.qk as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.qk as any).externalObject;\r\n\t}\r\n\tset valueResolver(v: IgcContourValueResolverComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.qk = null : this.i.qk = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\tif (this.actualFillScale && (this.actualFillScale as any).name && (this.actualFillScale as any).name == name) { return this.actualFillScale; }\r\n\tif (this.valueResolver && (this.valueResolver as any).name && (this.valueResolver as any).name == name) { return this.valueResolver; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualFillScale && (this.actualFillScale as any)._styling) {\r\n\t    (this.actualFillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.valueResolver && (this.valueResolver as any)._styling) {\r\n\t    (this.valueResolver as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterContourSeriesModule } from 'igniteui-charts/igc-scatter-contour-series-module';\r\n\r\nimport { IgcGeographicContourLineSeriesComponent } from './igc-geographic-contour-line-series-component';\r\nimport { GeographicContourLineSeries } from './GeographicContourLineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicContourLineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterContourSeriesModule.register();\r\n        IgcGeographicContourLineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicContourLineSeriesComponent\", IgcGeographicContourLineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicContourLineSeries\", (<any>GeographicContourLineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ArcGISOnlineTileSource } from \"igniteui-core/ArcGISOnlineTileSource\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { Base, Type, String_$type, Boolean_$type, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { TokenResponseModel } from \"./TokenResponseModel\";\r\nimport { MapServerResponseModel } from \"./MapServerResponseModel\";\r\nimport { TileInfoResponseModel } from \"./TileInfoResponseModel\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { stringIsNullOrEmpty, stringRemove } from \"igniteui-core/string\";\r\nimport { stringFormat1, stringFormat } from \"igniteui-core/stringExtended\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArcGISOnlineMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(ArcGISOnlineMapImagery, 'ArcGISOnlineMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate static readonly bv: string = \"generateToken?username={0}&password={1}&client=referer&referer={2}&expiration={3}&f=pjson\";\r\n\tconstructor() {\r\n\t\tsuper(new ArcGISOnlineTileSource());\r\n\t\tthis.bt = \"localhost\";\r\n\t\tthis.bu = \"https://www.arcgis.com/sharing/\";\r\n\t\tthis.bp = 60;\r\n\t\tthis.userToken = null;\r\n\t\tthis.getResponseCompleted_MapServerResponse = this.getResponseCompleted_MapServerResponse.bind(this);\r\n\t\tthis.getResponseCompleted_TokenResponse = this.getResponseCompleted_TokenResponse.bind(this);\r\n\t}\r\n\tstatic readonly mapServerUriProperty: DependencyProperty = DependencyProperty.i(\"MapServerUri\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cd));\r\n\tget mapServerUri(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.mapServerUriProperty);\r\n\t}\r\n\tset mapServerUri(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.mapServerUriProperty, a);\r\n\t}\r\n\tprivate static cd(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"MapServerUri\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userNameProperty: DependencyProperty = DependencyProperty.i(\"UserName\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cg));\r\n\tget userName(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userNameProperty);\r\n\t}\r\n\tset userName(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userNameProperty, a);\r\n\t}\r\n\tprivate static cg(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserName\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly passwordProperty: DependencyProperty = DependencyProperty.i(\"Password\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ce));\r\n\tget password(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.passwordProperty);\r\n\t}\r\n\tset password(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.passwordProperty, a);\r\n\t}\r\n\tprivate static ce(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"Password\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userTokenProperty: DependencyProperty = DependencyProperty.i(\"UserToken\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ch));\r\n\tget userToken(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userTokenProperty);\r\n\t}\r\n\tset userToken(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userTokenProperty, a);\r\n\t}\r\n\tprivate static ch(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserToken\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly isMapPublicProperty: DependencyProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, true, ArcGISOnlineMapImagery.cc));\r\n\tget isMapPublic(): boolean {\r\n\t\treturn <boolean>this.c(ArcGISOnlineMapImagery.isMapPublicProperty);\r\n\t}\r\n\tset isMapPublic(a: boolean) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.isMapPublicProperty, a);\r\n\t}\r\n\tprivate static cc(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"IsMapPublic\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bp: number = 0;\r\n\tget defaultTokenTimeout(): number {\r\n\t\treturn this.bp;\r\n\t}\r\n\tset defaultTokenTimeout(a: number) {\r\n\t\tthis.bp = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bu: string = null;\r\n\tget tokenGenerationEndPoint(): string {\r\n\t\treturn this.bu;\r\n\t}\r\n\tset tokenGenerationEndPoint(a: string) {\r\n\t\tthis.bu = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bt: string = null;\r\n\tget refererUri(): string {\r\n\t\treturn this.bt;\r\n\t}\r\n\tset refererUri(a: string) {\r\n\t\tthis.bt = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tacquireNewToken(): void {\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate b9(a: () => void): void {\r\n\t\ta();\r\n\t}\r\n\tprivate b8(a: boolean): void {\r\n\t\tif (stringIsNullOrEmpty(this.userToken) && a == false) {\r\n\t\t\tthis.ci();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet b = this.tokenGenerationEndPoint;\r\n\t\tif (stringIsNullOrEmpty(b)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.substr(b.length - 1, 1) != \"/\") {\r\n\t\t\tb += \"/\";\r\n\t\t}\r\n\t\tif (stringIsNullOrEmpty(this.refererUri)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.defaultTokenTimeout;\r\n\t\tif (c < 1) {\r\n\t\t\tc = 1;\r\n\t\t}\r\n\t\tb += stringFormat1(ArcGISOnlineMapImagery.bv, this.userName, this.password, this.refererUri, c);\r\n\t\tif (!Uri.isWellFormedUriString(b, 1)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = b;\r\n\t\tthis._pendingTokenRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_TokenResponse, null );\r\n\t}\r\n\tprivate ci(): void {\r\n\t\tif (stringIsNullOrEmpty(this.mapServerUri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet a = this.mapServerUri;\r\n\t\tif (a.substr(a.length - 1, 1) == \"/\") {\r\n\t\t\tstringRemove(a, a.length - 1, 1);\r\n\t\t}\r\n\t\tif (!this.isMapPublic) {\r\n\t\t\tif (stringIsNullOrEmpty(this.userToken)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ta = stringFormat(\"{0}?f=json&token={1}\", a, this.userToken);\r\n\t\t} else {\r\n\t\t\ta = stringFormat(\"{0}?f=json\", a);\r\n\t\t}\r\n\t\tif (!Uri.isWellFormedUriString(a, 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = a;\r\n\t\tthis._pendingMapServerRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_MapServerResponse, null );\r\n\t}\r\n\tprivate _pendingTokenRequest_: any = null;\r\n\tprivate _pendingMapServerRequest_: any = null;\r\n\tprivate getResponseCompleted_TokenResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingTokenRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingTokenRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: TokenResponseModel = <TokenResponseModel>( JSON.parse(data_));\r\n\t\tif (c != null) {\r\n\t\t\tlet d: string = \"\";\r\n\t\t\tif (c.token != null) {\r\n\t\t\t\td = c.token;\r\n\t\t\t}\r\n\t\t\tthis.userToken = d;\r\n\t\t}\r\n\t}\r\n\tprivate getResponseCompleted_MapServerResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingMapServerRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingMapServerRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: MapServerResponseModel = <MapServerResponseModel>( JSON.parse(data_));\r\n\t\tif ((c != null) && (c.tileInfo != null)) {\r\n\t\t\t(<ArcGISOnlineTileSource>this.ap).levelOfDetail = c.tileInfo.lods.length;\r\n\t\t}\r\n\t}\r\n\tprivate cf(a: string, b: any, c: any): void {\r\n\t\tlet d = typeCast<ArcGISOnlineTileSource>((<any>ArcGISOnlineTileSource).$, this.ap);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"MapServerUri\":\r\n\t\t\tif (d != null) {\r\n\t\t\t\td.mapServerUri = typeCast<string>(String_$type, c);\r\n\t\t\t}\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserName\":\r\n\r\n\t\t\tcase \"Password\":\r\n\t\t\tif (stringIsNullOrEmpty(this.userName) || stringIsNullOrEmpty(this.password)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.b8(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserToken\":\r\n\t\t\tthis.b9(() => d.userToken = this.userToken);\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"IsMapPublic\":\r\n\t\t\td.isMapPublic = this.isMapPublic;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { ArcGISOnlineMapImagery as ArcGISOnlineMapImagery_internal } from \"./ArcGISOnlineMapImagery\";\r\nimport { ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * UI element class used to display ArcGIS Online Map imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcArcGISOnlineMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : ArcGISOnlineMapImagery_internal\r\n{\r\n\treturn new ArcGISOnlineMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ArcGISOnlineMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile server uri.\r\n\t*/\r\n\tget mapServerUri() : string {\r\n\t\treturn (this.i.mapServerUri as string);\r\n\t}\r\n\tset mapServerUri(v: string) {\r\n\t\tthis.i.mapServerUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserName.\r\n\t*/\r\n\tget userName() : string {\r\n\t\treturn (this.i.userName as string);\r\n\t}\r\n\tset userName(v: string) {\r\n\t\tthis.i.userName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Password.\r\n\t*/\r\n\tget password() : string {\r\n\t\treturn (this.i.password as string);\r\n\t}\r\n\tset password(v: string) {\r\n\t\tthis.i.password = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserToken.\r\n\t*/\r\n\tget userToken() : string {\r\n\t\treturn (this.i.userToken as string);\r\n\t}\r\n\tset userToken(v: string) {\r\n\t\tthis.i.userToken = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the IsMapPublic variable.  A value of false requires authentication parameters.\r\n\t*/\r\n\tget isMapPublic() : boolean {\r\n\t\treturn (this.i.isMapPublic as boolean);\r\n\t}\r\n\tset isMapPublic(v: boolean) {\r\n\t\tthis.i.isMapPublic = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the Default Token Timeout before the Token Expires, this value is in Minutes\r\n\t*/\r\n\tget defaultTokenTimeout() : number {\r\n\t\treturn (this.i.defaultTokenTimeout as number);\r\n\t}\r\n\tset defaultTokenTimeout(v: number) {\r\n\t\tthis.i.defaultTokenTimeout = +v;\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the current endpoint to retrieve the token.\r\n\t*/\r\n\tget tokenGenerationEndPoint() : string {\r\n\t\treturn (this.i.tokenGenerationEndPoint as string);\r\n\t}\r\n\tset tokenGenerationEndPoint(v: string) {\r\n\t\tthis.i.tokenGenerationEndPoint = v;\r\n\t}\r\n\t/**\r\n\t * Contains the User Supplied Referer Uri to be used in Token Generation.\r\n\t*/\r\n\tget refererUri() : string {\r\n\t\treturn (this.i.refererUri as string);\r\n\t}\r\n\tset refererUri(v: string) {\r\n\t\tthis.i.refererUri = v;\r\n\t}\r\n\t/**\r\n\t * Retreives a new token based on the preconfigured parameters and updates the UserToken field, Normal this is called automatically.\r\n\t * The is provided to the end-user to allow them to reteive tokens on their onw.\r\n\t\r\n\t*/\r\n\tpublic acquireNewToken() {\r\n\t\tthis.i.acquireNewToken();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcArcGISOnlineMapImagery } from './igc-arc-gis-online-map-imagery';\r\nimport { ArcGISOnlineMapImagery } from './ArcGISOnlineMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcArcGISOnlineMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcArcGISOnlineMapImagery\", IgcArcGISOnlineMapImagery);\r\n        TypeRegistrar.register(\"ArcGISOnlineMapImagery\", (<any>ArcGISOnlineMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSeriesComponent } from 'igniteui-charts/igc-series-component';\r\nimport { GridMode, GridMode_$type } from 'igniteui-charts/GridMode';\r\nimport { IgcSeriesViewerComponent } from 'igniteui-charts/igc-series-viewer-component';\r\nimport { WebComponentRenderer, WebComponentWrapper } from 'igniteui-core/web-component-renderer';\r\nimport { Visibility, Visibility_$type } from 'igniteui-core/Visibility';\r\nimport { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { PointUtil, IEnumerable, TypeRegistrar, delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { Brush } from 'igniteui-core/Brush';\r\nimport { Color } from 'igniteui-core/Color';\r\nimport { Series } from 'igniteui-charts/Series';\r\nimport { Rect } from 'igniteui-core/Rect';\r\nimport { DataTemplate } from 'igniteui-core/DataTemplate';\r\nimport { BrushCollection } from 'igniteui-core/BrushCollection';\r\nimport { XamGeographicMap } from './XamGeographicMap';\r\nimport { CollectionAdapter, brushToString, stringToBrush, toPoint, fromPoint, toRect, fromRect, fromBrushCollection, toBrushCollection, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, enumToString, brushCollectionToString, rectToString, toSpinal } from \"igniteui-core/componentUtil\";\r\nimport { DataChartStylingDefaults } from 'igniteui-charts/DataChartStylingDefaults';\r\nimport { IgcDataContext } from 'igniteui-core/igc-data-context';\r\nimport { IgcSeriesCollection } from 'igniteui-charts/igc-series-collection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { NotifyCollectionChangedAction } from 'igniteui-core/NotifyCollectionChangedAction';\r\nimport { getAllPropertyNames, fromSpinal } from \"igniteui-core/componentUtil\";\r\nimport { IgEvent } from 'igniteui-core/IgEvent';\r\n\r\nimport { IgcNumericXAxisComponent } from 'igniteui-charts/igc-numeric-x-axis-component';\r\nimport { IgcNumericYAxisComponent } from 'igniteui-charts/igc-numeric-y-axis-component';\r\nimport { IgcImageTilesReadyEventArgs } from './igc-image-tiles-ready-event-args';\r\nimport { IgcGeographicMapImagery } from './igc-geographic-map-imagery';\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from './MapResizeBehavior';\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from './MapBackgroundTilingMode';\r\n\r\nexport class IgcGeographicMapComponent extends IgcSeriesViewerComponent {\r\n\r\n    contentSeries: IgcSeriesComponent[] = [];\r\n\r\n\tprivate _height: string;\r\n    private _width: string;\r\n\r\n    set height(value: string) {\r\n        this._height = value;\r\n        this.style.height = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get height(): string {\r\n        return this._height;\r\n    }\r\n\r\n    set width(value: string) {\r\n        this._width = value;\r\n        this.style.width = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get width(): string {\r\n        return this._width;\r\n    }\r\n\r\n    public notifyContainerResized() {\r\n        this._chart.notifyContainerResized();\r\n    }\r\n\r\n    /**\r\n\t * Gets or sets the legend used for the current chart.\r\n\t*/\r\n    get legend(): any {\r\n        if (this.i.legend != null)\r\n            return (<any>this.i.legend).externalObject;\r\n    }\r\n    set legend(v: any) {\r\n        if (v != undefined && v != null)\r\n            this.i.legend = v.i;\r\n    }\r\n\r\n\t/**\r\n\t * The series actually present in the chart. Do not directly modify this array.\r\n\t * This array's contents can be modified by causing Angular to reproject the child content.\r\n\t * Or adding and removing series from the manual series collection on the series property.\r\n\t */\r\n\tactualSeries: IgcSeriesComponent[] = [];\r\n\t\r\n\tprivate _container: any;\r\n\r\n\tprivate _series: IgcSeriesCollection = null;\r\n\t/**\r\n\t * A collection or manually added series for the chart.\r\n\t*/\r\n    get series(): IgcSeriesCollection {\r\n        if (this._series === null) {\r\n            let coll = new IgcSeriesCollection();\r\n            let inner: SyncableObservableCollection$2<IgcSeriesComponent, Series> = (<any>coll)._innerColl;\r\n            inner.addListener((sender, e) => {\r\n                if (!this._seriesAdapter) {\r\n                    return;\r\n                }\r\n                switch (e.action) {\r\n                    case NotifyCollectionChangedAction.Add:\r\n                        this._seriesAdapter.addManualItem(e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Remove:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Replace:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Reset:\r\n                        this._seriesAdapter.clearManualItems();\r\n                        break;\r\n                }\r\n            });\r\n            this._series = coll;\r\n        }\r\n        return this._series;\r\n    }\r\n\r\n    private _renderer: WebComponentRenderer;\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        if ((this as any)._styling) {\r\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n        }\r\n        this._renderer = new WebComponentRenderer(this,\r\n            document,\r\n            true, DataChartStylingDefaults);\r\n\r\n        //this._implementation = this.createImplementation();\r\n        this._container = this._renderer.createElement(\"div\");\r\n        this._renderer.updateRoot(this._container);\r\n        //this._renderer.rootWrapper.append(this._container);\r\n        this._container.setStyleProperty(\"display\", \"block\");\r\n        this._container.setStyleProperty(\"width\", \"100%\");\r\n        this._container.setStyleProperty(\"height\", \"100%\");\r\n\r\n        var root: any;\r\n        root = this._container;\r\n        if (this._container.nativeElement != null) {\r\n            root = this._container.nativeElement;\r\n        }\r\n\r\n        this._wrapper = this._renderer;\r\n        var chart = this.i;\r\n        this._chart = chart;\r\n\r\n        this._seriesAdapter = new CollectionAdapter<IgcSeriesComponent, Series>(\r\n            this.contentSeries,\r\n            this.i.series,\r\n            this.actualSeries,\r\n            (c) => c.i,\r\n            (i) => {\r\n                (<any>i).owner = this;\r\n                (<any>i)._provideRenderer(this._dataSource);\r\n                i.provideData(this._dataSource);\r\n                if (this.parentElement) {\r\n                    (i as any)._styling(this, this, this);\r\n                }\r\n                //i.bindAxes(this.axes);\r\n                this._ensureDefaultTooltip(i);\r\n                this._ensureTooltipCreated(i);\r\n            },\r\n            (i) => { (<any>i)._provideRenderer(null); i.provideData(null); }\r\n        );\r\n\r\n        chart.provideContainer(this._renderer);\r\n\r\n        let mut = new MutationObserver((list) => {\r\n            for (var mutation of list) {\r\n                if (mutation.type == 'childList') {\r\n                    this.updateContentChildren();\r\n                }\r\n            }\r\n        });\r\n        mut.observe(this, {\r\n            childList: true\r\n        });\r\n\r\n        this._renderer.addSizeWatcher(() => {\r\n            this.notifyContainerResized();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this._chart.destroy();\r\n        this._wrapper.destroy();\r\n    }\r\n\r\n\tprivate _wrapper: WebComponentRenderer;\r\n\r\n\tprotected createImplementation() {\r\n\t\treturn new XamGeographicMap();\r\n\t}\r\n\r\n\tprivate _chart: any;\r\n\r\n    private _dataSource: any = null;\r\n    set dataSource(value: any) {\r\n\t\tthis._dataSource = value;\r\n\t\tthis.bindData();\r\n\t}\r\n\tget dataSource(): any {\r\n\t\treturn this._dataSource;\r\n\t}\r\n\r\n\tbindData() {\r\n\t\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tcurrSeries[i].provideData(this._dataSource);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    private updateContentChildren() {\r\n        this.contentSeries.length = 0;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i] instanceof IgcSeriesComponent) {\r\n                this.contentSeries.push(<IgcSeriesComponent>this.children[i]);\r\n            }\r\n        }\r\n        \r\n        if (this._seriesAdapter != null) {\r\n            this._seriesAdapter.notifyContentChanged();\r\n        }\r\n    }\r\n\r\n    private _seriesAdapter: CollectionAdapter<IgcSeriesComponent, Series> = null;\r\n\r\n    private _disconnected = false;\r\n    disconnectedCallback() {\r\n        this._disconnected = true;\r\n        if (this.i) {\r\n            this.i.onDetachedFromUI();\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (this._disconnected) {\r\n            this._disconnected = false;\r\n            if (this.i) {\r\n                this.i.onAttachedToUI();\r\n            }\r\n            return;\r\n        }\r\n        this.classList.add(\"igc-geographic-map\");\r\n        this.classList.add(\"ig-geographic-map\");\r\n\r\n        this.appendChild(this._renderer.rootWrapper.getNativeElement());\r\n        this._attached = true;\r\n        this.style.display = \"block\";\r\n        this.style.height = this._height;\r\n        this.style.width = this._width;\r\n        this._flushQueuedAttributes();\r\n        // supports themes or custom properties set in CSS \r\n        this._styling(this, this);\r\n        for (let i = 0; i < this.actualSeries.length; i++) {\r\n            let s = this.actualSeries[i];\r\n            (s as any)._styling(this, this, this);\r\n        }\r\n\r\n        this.updateContentChildren();\r\n        this.afterContentInit();\r\n    }\r\n\r\n\tafterContentInit() {\r\n\t\tif (TypeRegistrar.isRegistered(\"IgcDataChartDefaultTooltipsComponent\")) {\r\n\t\t\tlet cr = TypeRegistrar.create(\"IgcDataChartDefaultTooltipsComponent\");\r\n\t\t\t//let cr = cf.create(this._injector);\r\n            this._defaultTooltips = cr;\r\n\t\t\t(<any>cr).onContentReady = () => {\r\n\t\t\t\tthis._onDefaultTooltipsReady(cr);\r\n\t\t\t};\r\n\t\t\t//this._container.appendChild(cr.location.nativeElement);\r\n\t\t}\r\n\r\n\t\t\t\r\n\t\t\r\n\t\tthis.i.notifyContainerResized();\r\n\t}\r\n\r\n    private _ensureTooltipCreated(series: any) {\r\n        (<any>series)._ensureTooltipCreated(\r\n\t\t\t() => this.createTooltip(),\r\n\t\t\t(ele) => {\r\n\t\t\t\tlet wrapper = new WebComponentWrapper(\r\n\t\t\t\t\tele,\r\n\t\t\t\t\tthis._renderer\r\n\t\t\t\t);\r\n\t\t\t\t(<any>wrapper).updateToolTip = (<any>ele).updateToolTip;\r\n\t\t\t\t(<any>wrapper).hideToolTip = (<any>ele).hideToolTip;\r\n\t\t\t\treturn wrapper;\r\n\t\t\t});\r\n    }\r\n\r\n    private _defaultTooltips: any = null;\r\n\tprivate _ensureDefaultTooltip(series: IgcSeriesComponent) {\r\n        if (this._defaultTooltips == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n        this._defaultTooltips[\"ensureDefaultTooltip\"](series);\r\n\t}\r\n\r\n\tprivate _onDefaultTooltipsReady(cr: any) {\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tif (currSeries[i].showDefaultTooltip) {\r\n\t\t\t\t\tthis._ensureDefaultTooltip(currSeries[i])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    private createTooltip(): Element {\r\n\t\tif (!TypeRegistrar.isRegistered(\"IgcTooltipContainerComponent\")) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet cr = TypeRegistrar.create(\"IgcTooltipContainerComponent\");\r\n\t\tlet ele: Element = cr;\r\n\t\tlet self = this;\r\n\r\n\t\t(<any>ele).updateToolTip = function (c, isSubContent?: boolean) {\r\n            if (c.externalObject) {\r\n                c = c.externalObject;\r\n            } else {\r\n                let ext = new IgcDataContext();\r\n                (<any>ext)._implementation = c;\r\n                c = ext;\r\n            }\r\n\r\n            if (!isSubContent) {\r\n                if (ele.parentElement != self._container.getNativeElement()) {\r\n                    if (ele.parentElement != null) {\r\n                        ele.parentElement.removeChild(ele);\r\n                    }\r\n\r\n                    self._container.getNativeElement().appendChild(ele);\r\n                }\r\n            } else {\r\n                c.isSubContent = true;\r\n            }\r\n\t\t\t(<any>cr).context = c;\r\n\t\t\t(<any>ele).style.display = \"block\";\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t(<any>ele).hideToolTip = function () {\r\n\t\t\t(<any>ele).style.display = \"none\"\r\n\t\t};\r\n\t\t(<any>ele).style.display = \"none\"\r\n\r\n\t\treturn cr;\r\n    }\r\n\r\n    /**\r\n\t * An imagery to display behind all series, inside the viewport of the IgxGeographicMapComponent control.\r\n\t*/\r\n    get backgroundContent(): IgcGeographicMapImagery {\r\n        if (this.i.backgroundContent != null) {\r\n            return (<any>this.i.backgroundContent).externalObject;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    set backgroundContent(v: IgcGeographicMapImagery) {\r\n        if (typeof (v) == \"string\" && v == \"empty\") {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n            return;\r\n        }\r\n        if (v != undefined && v != null) {\r\n            this.i.backgroundContent = v.i;\r\n        } else {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n        }\r\n    }\r\n\r\n    \t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : XamGeographicMap {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n    \r\n\r\n    \t\r\n\t                private static _observedAttributesIgcGeographicMapComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    \t\r\n\t                public static htmlTagName: string = \"igc-geographic-map\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicMapComponent._isElementRegistered) {\r\n\t                        IgcGeographicMapComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicMapComponent.htmlTagName,\r\n\t                            IgcGeographicMapComponent);\r\n\t                    }\r\n\t            }\r\n\r\n\t\t/**\r\n\t * Gets or sets zoomability of the current control\r\n\t*/\r\n\tget zoomable() : boolean {\r\n\t\treturn (this.i.s5 as boolean);\r\n\t}\r\n\tset zoomable(v: boolean) {\r\n\t\tthis.i.s5 = ensureBool(v);\r\n\t                                        this._a(\"zoomable\", this.i.s5);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the behavior to use during resize.\r\n\t*/\r\n\tget resizeBehavior() : MapResizeBehavior {\r\n\t\treturn this.i.sy;\r\n\t}\r\n\tset resizeBehavior(v: MapResizeBehavior) {\r\n\t\tthis.i.sy = ensureEnum<MapResizeBehavior>(MapResizeBehavior_$type, v);\r\n\t                                        this._a(\"resizeBehavior\", enumToString<MapResizeBehavior>(MapResizeBehavior_$type, this.i.sy));\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.s2 as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.s2 = ensureBool(v);\r\n\t                                        this._a(\"isHorizontalWrappingEnabled\", this.i.s2);\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget backgroundTilingMode() : MapBackgroundTilingMode {\r\n\t\treturn this.i.su;\r\n\t}\r\n\tset backgroundTilingMode(v: MapBackgroundTilingMode) {\r\n\t\tthis.i.su = ensureEnum<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, v);\r\n\t                                        this._a(\"backgroundTilingMode\", enumToString<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, this.i.su));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether to use the uncoerced world rect to constrain the zoom bounds.\r\n\t*/\r\n\tget useWorldRectForZoomBounds() : boolean {\r\n\t\treturn (this.i.s4 as boolean);\r\n\t}\r\n\tset useWorldRectForZoomBounds(v: boolean) {\r\n\t\tthis.i.s4 = ensureBool(v);\r\n\t                                        this._a(\"useWorldRectForZoomBounds\", this.i.s4);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether skip resetting the zoom when the world rect changes.\r\n\t*/\r\n\tget suppressZoomResetOnWorldRectChange() : boolean {\r\n\t\treturn (this.i.s3 as boolean);\r\n\t}\r\n\tset suppressZoomResetOnWorldRectChange(v: boolean) {\r\n\t\tthis.i.s3 = ensureBool(v);\r\n\t                                        this._a(\"suppressZoomResetOnWorldRectChange\", this.i.s3);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the world bounding rectangle.\r\n\t*/\r\n\tget worldRect() : IgRect {\r\n\t\treturn fromRect(this.i.u0);\r\n\t}\r\n\tset worldRect(v: IgRect) {\r\n\t\tthis.i.u0 = toRect(v);\r\n\t                                        this._a(\"worldRect\", rectToString(this.i.u0));\r\n\t}\r\n\t/**\r\n\t * Gets the actual value of the WorldRect.\r\n\t*/\r\n\tget actualWorldRect() : IgRect {\r\n\t\treturn fromRect(this.i.uo);\r\n\t}\r\n\tset actualWorldRect(v: IgRect) {\r\n\t\tthis.i.uo = toRect(v);\r\n\t                                        this._a(\"actualWorldRect\", rectToString(this.i.uo));\r\n\t}\r\n\t/**\r\n\t * The X-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget xAxis() : IgcNumericXAxisComponent {\r\n\t                                        if (this.i.sn == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.sn as any).externalObject) {\r\n\t                                            let e = IgcNumericXAxisComponent._createFromInternal(this.i.sn);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.sn;\r\n\t                                            }\r\n\t                                            (this.i.sn as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.sn as any).externalObject;\r\n\t}\r\n\tset xAxis(v: IgcNumericXAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.sn = null : this.i.sn = v.i;\r\n\t}\r\n\t/**\r\n\t * The Y-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget yAxis() : IgcNumericYAxisComponent {\r\n\t                                        if (this.i.sp == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.sp as any).externalObject) {\r\n\t                                            let e = IgcNumericYAxisComponent._createFromInternal(this.i.sp);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.sp;\r\n\t                                            }\r\n\t                                            (this.i.sp as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.sp as any).externalObject;\r\n\t}\r\n\tset yAxis(v: IgcNumericYAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.sp = null : this.i.sp = v.i;\r\n\t}\r\n\t/**\r\n\t * Indicates if this SeriesViewer is a map.\r\n\t*/\r\n\tget isMap() : boolean {\r\n\t\treturn (this.i.ea as boolean);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the WindowRect property.\r\n\t*/\r\n\tget windowScale() : number {\r\n\t\treturn (this.i.ta as number);\r\n\t}\r\n\tset windowScale(v: number) {\r\n\t\tthis.i.ta = +v;\r\n\t                                        this._a(\"windowScale\", this.i.ta);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the ActualWindowRect property.\r\n\t*/\r\n\tget actualWindowScale() : number {\r\n\t\treturn (this.i.s9 as number);\r\n\t}\r\n\tset actualWindowScale(v: number) {\r\n\t\tthis.i.s9 = +v;\r\n\t                                        this._a(\"actualWindowScale\", this.i.s9);\r\n\t}\r\n\t/**\r\n\t * Gets whether or not the control is ready for zooming\r\n\t*/\r\n\tget zoomIsReady() : boolean {\r\n\t\treturn (this.i.s6 as boolean);\r\n\t}\r\n\r\n    \t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.backgroundContent && (this.backgroundContent as any).name && (this.backgroundContent as any).name == name) { return this.backgroundContent; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n    \t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.xAxis && (this.xAxis as any)._styling) {\r\n\t    (this.xAxis as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.yAxis && (this.yAxis as any)._styling) {\r\n\t    (this.yAxis as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\r\n\t\t/**\r\n\t * Gets current world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic getCurrentActualWorldRect() : IgRect {\r\n\t\tlet iv = this.i.us();\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomRectFromGeoRect(geographic: IgRect) : IgRect {\r\n\t\tlet iv = this.i.getZoomRectFromGeoRect(toRect(geographic));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Updates zoom window using window coordinates\r\n\t\r\n\t*/\r\n\tpublic updateZoomWindow(zoomWindow: IgRect) {\r\n\t\tthis.i.t4(toRect(zoomWindow));\r\n\t}\r\n\t/**\r\n\t * Updates world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic updateWorldRect(worldRect: IgRect) {\r\n\t\tthis.i.t3(toRect(worldRect));\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomFromGeographicRect(geographic: IgRect) : IgRect {\r\n\t\tlet iv = this.i.getZoomFromGeographicRect(toRect(geographic));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\tpublic convertGeographicToZoom(geographic: IgRect, extraPixelPadding: number) : IgRect {\r\n\t\tlet iv = this.i.up(toRect(geographic), extraPixelPadding);\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\tpublic getZoomFromGeographicPoints(northWest: IgPoint, southEast: IgPoint) : IgRect {\r\n\t\tlet iv = this.i.getZoomFromGeographicPoints(toPoint(northWest), toPoint(southEast));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given a WindowRect and the current plot area, get the geographic region represented by that WindowRect.\r\n\t\r\n\t* @param windowRect  * The zoom area.\r\n\t*/\r\n\tpublic getGeographicFromZoom(windowRect: IgRect) : IgRect {\r\n\t\tlet iv = this.i.uu(toRect(windowRect));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a pixel-based coordinate to a geographic coordinate.\r\n\t\r\n\t* @param pixelCoordinate  * A pixel-based coordinate\r\n\t*/\r\n\tpublic getGeographicPoint(pixelCoordinate: IgPoint) : IgPoint {\r\n\t\tlet iv = this.i.ug(toPoint(pixelCoordinate));\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getPixelPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t\tlet iv = this.i.uh(toPoint(geographicCoordinate));\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getWindowPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t\tlet iv = this.i.ui(toPoint(geographicCoordinate));\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Removes all cached tile images from the map imagery assigned to the map's background content.\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.tr();\r\n\t}\r\n\t/**\r\n\t * Notifies the chart that the CSS styles in effect have been updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.tz();\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for horizontal dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleHorizontal() : number {\r\n\t\tlet iv = this.i.f4();\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for vertical dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleVertical() : number {\r\n\t\tlet iv = this.i.f5();\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * Calls for a deferred refresh to the GeographicMap's background.\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n\t/**\r\n\t * Returns the chart visuals expressed as a ChartVisualData object.\r\n\t\r\n\t*/\r\n\tpublic exportVisualData() : any {\r\n\t\tlet iv = this.i.td();\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * Zoom in to the geographic region specified, when possible (may need to wait for map to be initialized).\r\n\t\r\n\t* @param geographic  * The geographic region to zoom to.\r\n\t*/\r\n\tpublic zoomToGeographic(geographic: IgRect) {\r\n\t\tthis.i.t6(toRect(geographic));\r\n\t}\r\n\r\n    \t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBingMapsMapImageryModule } from './igc-bing-maps-map-imagery-module';\r\nimport { IgcOpenStreetMapImageryModule } from './igc-open-street-map-imagery-module';\r\nimport { IgcCustomMapImageryModule } from './igc-custom-map-imagery-module';\r\nimport { IgcArcGISOnlineMapImageryModule } from './igc-arc-gis-online-map-imagery-module';\r\nimport { IgcGeographicMapComponent } from './igc-geographic-map-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcGeographicMapCoreModule {\r\n    public static register() {\r\n                IgcBingMapsMapImageryModule.register();\r\n        IgcOpenStreetMapImageryModule.register();\r\n        IgcCustomMapImageryModule.register();\r\n        IgcArcGISOnlineMapImageryModule.register();\r\n        IgcGeographicMapComponent.register();\r\n        TypeRegistrar.registerCons('IgcGeographicMapComponent', IgcGeographicMapComponent);\r\n    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { HighDensityScatterSeries } from \"igniteui-charts/HighDensityScatterSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Color } from \"igniteui-core/Color\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, typeCast, Type, markType, String_$type, Boolean_$type, Number_$type, typeGetValue, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { ProgressiveLoadStatusEventArgs } from \"igniteui-charts/ProgressiveLoadStatusEventArgs\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeriesView, 'GeographicHighDensityScatterSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicHighDensityScatterSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicHighDensityScatterSeries = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ce.pt);\r\n\t\ta.rx = this.ce.qi;\r\n\t\ta.r1 = this.ce.qg;\r\n\t\ta.qe = this.ce.p5;\r\n\t\ta.qd = this.ce.p4;\r\n\t\ta.eh = this.ce.p3;\r\n\t\ta.q9 = this.ce.p7;\r\n\t\ta.q8 = this.ce.p6;\r\n\t\ta.sv = this.ce.q1;\r\n\t\ta.su = this.ce.q0;\r\n\t\ta.rl = this.ce.qa;\r\n\t}\r\n\tck(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).rx = this.ce.qi;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).r1 = this.ce.qg;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).qe = this.ce.p5;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).qd = this.ce.p4;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).eh = this.ce.p3;\r\n\t}\r\n\tci(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).q9 = this.ce.p7;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).q8 = this.ce.p6;\r\n\t}\r\n\tco(): void {\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ce.pt);\r\n\t\tif (this.ce.cb == null) {\r\n\t\t\ta.py = null;\r\n\t\t\ta.p0 = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.py = (<XamGeographicMap>this.ce.cb).sn;\r\n\t\ta.p0 = (<XamGeographicMap>this.ce.cb).sp;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).py = (<XamGeographicMap>this.ce.cb).sn;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).p0 = (<XamGeographicMap>this.ce.cb).sp;\r\n\t}\r\n\tch(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).sv = this.ce.q1;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).su = this.ce.q0;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.pt).rl = this.ce.qa;\r\n\t}\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ce.gk = Defaults.q;\r\n\t\t\tthis.ce.q1 = Defaults.aq;\r\n\t\t\tthis.ce.q0 = Defaults.ap;\r\n\t\t\tthis.ce.os = Defaults.al;\r\n\t\t\tthis.ce.ox = Defaults.ak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeries, 'GeographicHighDensityScatterSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected get_d1(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicHighDensityScatterSeries).$;\r\n\t}\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new GeographicHighDensityScatterSeriesView(this);\r\n\t}\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.p2 = <GeographicHighDensityScatterSeriesView>a;\r\n\t}\r\n\tp2: GeographicHighDensityScatterSeriesView;\r\n\tprotected ps(): Series {\r\n\t\tthis.p1 = new HighDensityScatterSeries();\r\n\t\treturn this.p1;\r\n\t}\r\n\tprivate p1: HighDensityScatterSeries = null;\r\n\tqg: string;\r\n\tqi: string;\r\n\tp5: boolean;\r\n\tp4: boolean;\r\n\tp3: boolean;\r\n\tp7: number;\r\n\tp6: number;\r\n\tq1: Color;\r\n\tq0: Color;\r\n\tqa: number;\r\n\tprogressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void = null;\r\n\tprivate p9: number = 0;\r\n\tget qb(): number {\r\n\t\treturn this.p9;\r\n\t}\r\n\tset qb(a: number) {\r\n\t\tlet b = this.p9;\r\n\t\tthis.p9 = a;\r\n\t\tthis.raisePropertyChanged(\"ProgressiveStatus\", b, this.p9);\r\n\t}\r\n\tprotected py(): void {\r\n\t\tsuper.py();\r\n\t\tlet a = (<HighDensityScatterSeries>this.pt);\r\n\t\ta.progressiveLoadStatusChanged = delegateCombine(a.progressiveLoadStatusChanged, runOn(this, this.qp));\r\n\t\tlet b = (<HighDensityScatterSeries>this.pt);\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.qo));\r\n\t}\r\n\tprivate qp(a: any, b: ProgressiveLoadStatusEventArgs): void {\r\n\t\tthis.qb = b.currentStatus;\r\n\t\tif (this.progressiveLoadStatusChanged != null) {\r\n\t\t\tthis.progressiveLoadStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate qo(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tif (this.p1 == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.p2.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[5]:\r\n\t\t\tthis.p2.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[4]:\r\n\t\t\tthis.p2.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[9]:\r\n\t\t\tthis.p2.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[8]:\r\n\t\t\tthis.p2.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[6]:\r\n\t\t\tthis.p2.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.p2.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.p2.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[3]:\r\n\t\t\tthis.p2.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[1]:\r\n\t\t\tthis.p2.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[2]:\r\n\t\t\tthis.p2.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[0]:\r\n\t\t\tthis.p2.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[7]:\r\n\t\t\tthis.p2.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected get_ez(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_ez(a: boolean): void {\r\n\t\tsuper.set_ez(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicHighDensityScatterSeries, 'raisePropertyChanged', [ 'HeatMaximumColor:q0:qq', [ (<any>Color).$, Defaults.ap ], 'HeatMaximum:p6:qr', [ 1, 50 ], 'HeatMinimumColor:q1:qs', [ (<any>Color).$, Defaults.aq ], 'HeatMinimum:p7:qt', [ 1, 0 ], 'LatitudeMemberPath:qg:qu', [ 2, null ], 'LongitudeMemberPath:qi:qv', [ 2, null ], 'MouseOverEnabled:p3:qw', [ 0, false ], 'PointExtent:qa:qx', [ 1, 1 ], 'ProgressiveLoad:p4:qy', [ 0, true ], 'UseBruteForce:p5:qz', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcProgressiveLoadStatusEventArgs } from \"igniteui-charts/igc-progressive-load-status-event-args\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicHighDensityScatterSeries } from \"./GeographicHighDensityScatterSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, colorToString, stringToColor } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a HighDensityScatterSeries.\r\n*/\r\nexport class IgcGeographicHighDensityScatterSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicHighDensityScatterSeries\r\n{\r\n\treturn new GeographicHighDensityScatterSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicHighDensityScatterSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicHighDensityScatterSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicHighDensityScatterSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-high-density-scatter-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows pixels.\r\n\t*/\r\n\tget isPixel() : boolean {\r\n\t\treturn (this.i.d1 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.qg as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.qg = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.qi as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.qi = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to use use brute force mode.\r\n\t*/\r\n\tget useBruteForce() : boolean {\r\n\t\treturn (this.i.p5 as boolean);\r\n\t}\r\n\tset useBruteForce(v: boolean) {\r\n\t\tthis.i.p5 = ensureBool(v);\r\n\t                                        this._a(\"useBruteForce\", this.i.p5);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to progressively load the data into the chart.\r\n\t*/\r\n\tget progressiveLoad() : boolean {\r\n\t\treturn (this.i.p4 as boolean);\r\n\t}\r\n\tset progressiveLoad(v: boolean) {\r\n\t\tthis.i.p4 = ensureBool(v);\r\n\t                                        this._a(\"progressiveLoad\", this.i.p4);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether the chart reacts to mouse move events.\r\n\t*/\r\n\tget mouseOverEnabled() : boolean {\r\n\t\treturn (this.i.p3 as boolean);\r\n\t}\r\n\tset mouseOverEnabled(v: boolean) {\r\n\t\tthis.i.p3 = ensureBool(v);\r\n\t                                        this._a(\"mouseOverEnabled\", this.i.p3);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the density value that maps to the minimum heat color.\r\n\t*/\r\n\tget heatMinimum() : number {\r\n\t\treturn (this.i.p7 as number);\r\n\t}\r\n\tset heatMinimum(v: number) {\r\n\t\tthis.i.p7 = +v;\r\n\t                                        this._a(\"heatMinimum\", this.i.p7);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the value that maps to the maximum heat color.\r\n\t*/\r\n\tget heatMaximum() : number {\r\n\t\treturn (this.i.p6 as number);\r\n\t}\r\n\tset heatMaximum(v: number) {\r\n\t\tthis.i.p6 = +v;\r\n\t                                        this._a(\"heatMaximum\", this.i.p6);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the minimum end of the scale.\r\n\t*/\r\n\tget heatMinimumColor() : string {\r\n\t\treturn colorToString(this.i.q1);\r\n\t}\r\n\tset heatMinimumColor(v: string) {\r\n\t\tthis.i.q1 = stringToColor(v);\r\n\t                                        this._a(\"heatMinimumColor\", colorToString(this.i.q1));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the maximum end of the scale.\r\n\t*/\r\n\tget heatMaximumColor() : string {\r\n\t\treturn colorToString(this.i.q0);\r\n\t}\r\n\tset heatMaximumColor(v: string) {\r\n\t\tthis.i.q0 = stringToColor(v);\r\n\t                                        this._a(\"heatMaximumColor\", colorToString(this.i.q0));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the the pixel extent of the square data points that are rendered.\r\n\t*/\r\n\tget pointExtent() : number {\r\n\t\treturn (this.i.qa as number);\r\n\t}\r\n\tset pointExtent(v: number) {\r\n\t\tthis.i.qa = +v;\r\n\t                                        this._a(\"pointExtent\", this.i.qa);\r\n\t}\r\n\t/**\r\n\t * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.\r\n\t*/\r\n\tget progressiveStatus() : number {\r\n\t\treturn (this.i.qb as number);\r\n\t}\r\n\tset progressiveStatus(v: number) {\r\n\t\tthis.i.qb = +v;\r\n\t                                        this._a(\"progressiveStatus\", this.i.qb);\r\n\t}\r\n\t\r\n\t    private _progressiveLoadStatusChanged: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void = null;\r\n\t    private _progressiveLoadStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the progressive loading state of the series has changed.\r\n\t*/\r\n\t\r\n\tpublic get progressiveLoadStatusChanged(): (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void {\r\n\treturn this._progressiveLoadStatusChanged;\r\n\t}\r\n\t    public set progressiveLoadStatusChanged(ev: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void) {\r\n\t        if (this._progressiveLoadStatusChanged_wrapped !== null) {\r\n\t            this.i.progressiveLoadStatusChanged = delegateRemove(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t            this._progressiveLoadStatusChanged_wrapped = null;\r\n\t            this._progressiveLoadStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._progressiveLoadStatusChanged = ev;\r\n\t        this._progressiveLoadStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcProgressiveLoadStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeProgressiveLoadStatusChanged) {\r\n\t                        (this as any).beforeProgressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._progressiveLoadStatusChanged) {\r\n\t    this._progressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcHighDensityScatterSeriesModule } from 'igniteui-charts/igc-high-density-scatter-series-module';\r\n\r\nimport { IgcGeographicHighDensityScatterSeriesComponent } from './igc-geographic-high-density-scatter-series-component';\r\nimport { GeographicHighDensityScatterSeries } from './GeographicHighDensityScatterSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicHighDensityScatterSeriesModule {\r\n    public static register(): void {\r\nIgcHighDensityScatterSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicHighDensityScatterSeriesComponent\", IgcGeographicHighDensityScatterSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicHighDensityScatterSeries\", (<any>GeographicHighDensityScatterSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, markDep } from \"igniteui-core/type\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesView, 'GeographicShapeSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicShapeSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ci = a;\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.qm = \"points\";\r\n\t\t}\r\n\t}\r\n\tprotected ci: GeographicShapeSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.r6 = Defaults.aj;\r\n\t\t\tthis.ci.gp = Defaults.p;\r\n\t\t\tthis.ci.q5 = Defaults.o;\r\n\t\t\tthis.ci.q2 = Defaults.d;\r\n\t\t\tthis.ci.q0 = Defaults.a;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).t0 = this.ci.r8;\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).st = this.ci.q3;\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).tf = this.ci.ro;\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).sw = this.ci.q5;\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).sf = this.ci.qz;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).tf = this.ci.ro;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).sw = this.ci.q5;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).sf = this.ci.qz;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).so = this.ci.q2;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).tw = this.ci.r5;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).tx = this.ci.r6;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).tz = this.ci.r7;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).st = this.ci.q3;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.pt).t0 = this.ci.r8;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicShapeSeries, 'GeographicShapeSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_d3(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicShapeSeries).$;\r\n\t}\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesView(this);\r\n\t}\r\n\tq4: GeographicShapeSeriesView;\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.q4 = <GeographicShapeSeriesView>a;\r\n\t}\r\n\tprotected ps(): Series {\r\n\t\tlet a = new ScatterPolygonSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.rl));\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.rm));\r\n\t\treturn a;\r\n\t}\r\n\tprivate rl(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprivate rm(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.pt);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tq3: StyleSelector;\r\n\tr8: Style;\r\n\tq2: MarkerType;\r\n\tq1: MarkerOutlineMode;\r\n\tq0: MarkerFillMode;\r\n\tro: DataTemplate;\r\n\tr5: Brush;\r\n\tr6: Brush;\r\n\tr7: Style;\r\n\tq5: number;\r\n\tfv(): number {\r\n\t\treturn this.q5;\r\n\t}\r\n\tov(): Brush {\r\n\t\treturn this.r3;\r\n\t}\r\n\tow(): Brush {\r\n\t\treturn this.r4;\r\n\t}\r\n\tm2(): DataTemplate {\r\n\t\treturn this.rn;\r\n\t}\r\n\tqz: CollisionAvoidanceType;\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicShapeSeries.$$p[6]:\r\n\t\t\t(<ScatterPolygonSeries>this.pt).sm = this.q1;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[5]:\r\n\t\t\t(<ScatterPolygonSeries>this.pt).si = this.q0;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[9]:\r\n\t\t\tthis.q4.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[10]:\r\n\t\t\tthis.q4.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[4]:\r\n\t\t\tthis.q4.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[11]:\r\n\t\t\tthis.q4.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[3]:\r\n\t\t\tthis.q4.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[7]:\r\n\t\t\tthis.q4.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[8]:\r\n\t\t\tthis.q4.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[13]:\r\n\t\t\tthis.q4.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[12]:\r\n\t\t\tthis.q4.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected gl(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\trn: DataTemplate;\r\n\tr3: Brush;\r\n\tr4: Brush;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:r3:rp', [ (<any>Brush).$ ], 'ActualMarkerOutline:r4:rq', [ (<any>Brush).$ ], 'ActualMarkerTemplate:rn:rr', [ (<any>DataTemplate).$, null ], 'MarkerBrush:r5:rs', [ (<any>Brush).$ ], 'MarkerCollisionAvoidance:qz:rt', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'MarkerFillMode:q0:ru', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:q1:rv', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:r6:rw', [ (<any>Brush).$ ], 'MarkerStyle:r7:rx', [ (<any>Style).$ ], 'MarkerTemplate:ro:ry', [ (<any>DataTemplate).$, null ], 'MarkerThickness:q5:rz', [ 1, DeviceUtils.g(2) ], 'MarkerType:q2:r0', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, 2) ], 'ShapeStyle:r8:r1', [ (<any>Style).$, null ], 'ShapeStyleSelector:q3:r2', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeries } from \"./GeographicShapeSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.\r\n*/\r\nexport class IgcGeographicShapeSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicShapeSeries\r\n{\r\n\treturn new GeographicShapeSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-shape-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicShapeSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicShapeSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicShapeSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicShapeSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polygon shape.\r\n\t*/\r\n\tget isPolygon() : boolean {\r\n\t\treturn (this.i.d3 as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.r8 ? (this.i.r8.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.r8.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.r8 ? (this.i.r8.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.r8.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.r8 ? (this.i.r8.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.r8.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.r8.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.r8 ? (this.i.r8.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.r8.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.r8.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.r8) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.r8 = new Style();\r\n\t\r\n\t                                }\r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.q2;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.q2 = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.q2));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.q1;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.q1 = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.q1));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker brush is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.q0;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.q0 = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.q0));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.ro as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.ro = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.r5);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.r5 = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.r5));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.r6);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.r6 = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.r6));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.q5 as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.q5 = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.q5);\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.qz;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.qz = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.qz));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.rn as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.rn = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.r3);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.r3 = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.r3));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.r4);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.r4 = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.r4));\r\n\t}\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolygonSeriesModule } from 'igniteui-charts/igc-scatter-polygon-series-module';\r\n\r\nimport { IgcGeographicShapeSeriesComponent } from './igc-geographic-shape-series-component';\r\nimport { GeographicShapeSeries } from './GeographicShapeSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicShapeSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolygonSeriesModule.register();\r\n        IgcGeographicShapeSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicShapeSeriesComponent\", IgcGeographicShapeSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicShapeSeries\", (<any>GeographicShapeSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolylineSeries } from \"igniteui-charts/ScatterPolylineSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicPolylineSeriesView, 'GeographicPolylineSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicPolylineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ci = a;\r\n\t}\r\n\tprotected ci: GeographicPolylineSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.gp = Defaults.n;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ScatterPolylineSeries>this.ci.pt).sf = this.ci.qz;\r\n\t\t(<ScatterPolylineSeries>this.ci.pt).sk = this.ci.q7;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterPolylineSeries>this.ci.pt).sf = this.ci.qz;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterPolylineSeries>this.ci.pt).sk = this.ci.q7;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicPolylineSeries, 'GeographicPolylineSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_d4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicPolylineSeries).$;\r\n\t}\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new GeographicPolylineSeriesView(this);\r\n\t}\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.q0 = <GeographicPolylineSeriesView>a;\r\n\t}\r\n\tq0: GeographicPolylineSeriesView;\r\n\tqz: StyleSelector;\r\n\tq7: Style;\r\n\tprotected ps(): Series {\r\n\t\tlet a = new ScatterPolylineSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.q4));\r\n\t\treturn a;\r\n\t}\r\n\tprivate q4(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicPolylineSeries.$$p[1]:\r\n\t\t\tthis.q0.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicPolylineSeries.$$p[0]:\r\n\t\t\tthis.q0.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicPolylineSeries, 'raisePropertyChanged', [ 'ShapeStyle:q7:q5', [ (<any>Style).$, null ], 'ShapeStyleSelector:qz:q6', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicPolylineSeries } from \"./GeographicPolylineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\n\r\n/**\r\n * Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.\r\n*/\r\nexport class IgcGeographicPolylineSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicPolylineSeries\r\n{\r\n\treturn new GeographicPolylineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicPolylineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicPolylineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicPolylineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-polyline-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicPolylineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicPolylineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicPolylineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicPolylineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polyline shape.\r\n\t*/\r\n\tget isPolyline() : boolean {\r\n\t\treturn (this.i.d4 as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.q7 ? (this.i.q7.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.q7.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.q7 ? (this.i.q7.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.q7.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.q7 ? (this.i.q7.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.q7.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.q7.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.q7 ? (this.i.q7.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.q7.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.q7.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.q7) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.q7 = new Style();\r\n\t\r\n\t                                }\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolylineSeriesModule } from 'igniteui-charts/igc-scatter-polyline-series-module';\r\n\r\nimport { IgcGeographicPolylineSeriesComponent } from './igc-geographic-polyline-series-component';\r\nimport { GeographicPolylineSeries } from './GeographicPolylineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicPolylineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolylineSeriesModule.register();\r\n        IgcGeographicPolylineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicPolylineSeriesComponent\", IgcGeographicPolylineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicPolylineSeries\", (<any>GeographicPolylineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { BubbleSeries } from \"igniteui-charts/BubbleSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, Boolean_$type, Number_$type, enumGetBox, EnumUtil, typeGetValue, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { SizeScale } from \"igniteui-charts/SizeScale\";\r\nimport { BrushScale } from \"igniteui-charts/BrushScale\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeriesView, 'GeographicProportionalSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicProportionalSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicProportionalSymbolSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a = <BubbleSeries>this.ce.pt;\r\n\t\ta.sx = this.ce.rs;\r\n\t\ta.s1 = this.ce.rq;\r\n\t\ta.p0 = this.ce.p3;\r\n\t\ta.qm = this.ce.qj;\r\n\t\ta.p5 = this.ce.p4;\r\n\t\ta.ur = this.ce.rc;\r\n\t\ta.u9 = this.ce.rx;\r\n\t\ta.uh = this.ce.q4;\r\n\t\ta.u3 = this.ce.ro;\r\n\t\ta.uy = this.ce.rg;\r\n\t\ta.uf = this.ce.q1;\r\n\t\ta.up = this.ce.q8;\r\n\t\ta.uq = this.ce.rb;\r\n\t\ta.uw = this.ce.re;\r\n\t\ta.uv = this.ce.rd;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).sx = this.ce.rs;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).s1 = this.ce.rq;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).p0 = this.ce.p3;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).qm = this.ce.qj;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).p5 = this.ce.p4;\r\n\t}\r\n\tct(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).sl = this.ce.p5;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).xAxis = (<XamGeographicMap>this.ce.cb).sn;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).yAxis = (<XamGeographicMap>this.ce.cb).sp;\r\n\t}\r\n\tcu(): void {\r\n\t\tlet a = <BubbleSeries>this.ce.pt;\r\n\t\tif (this.ce.cb == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ce.cb).sn;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ce.cb).sp;\r\n\t}\r\n\tco(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).q2 = this.ce.qx;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).q3 = this.ce.qy;\r\n\t}\r\n\tcx(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).u9 = this.ce.rx;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).uh = this.ce.q4;\r\n\t\t(<BubbleSeries>this.ce.pt).ur = this.ce.rc;\r\n\t}\r\n\tci(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).u3 = this.ce.ro;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).uf = this.ce.q1;\r\n\t\t(<BubbleSeries>this.ce.pt).up = this.ce.q8;\r\n\t\t(<BubbleSeries>this.ce.pt).uq = this.ce.rb;\r\n\t\t(<BubbleSeries>this.ce.pt).uw = this.ce.re;\r\n\t\t(<BubbleSeries>this.ce.pt).uv = this.ce.rd;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).uy = this.ce.rg;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).ur = this.ce.rc;\r\n\t}\r\n\tch(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).up = this.ce.q8;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).uq = this.ce.rb;\r\n\t}\r\n\tck(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).uw = this.ce.re;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<BubbleSeries>this.ce.pt).uv = this.ce.rd;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeries, 'GeographicProportionalSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_c1(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicProportionalSymbolSeries).$;\r\n\t}\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new GeographicProportionalSymbolSeriesView(this);\r\n\t}\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.q5 = <GeographicProportionalSymbolSeriesView>a;\r\n\t}\r\n\tq5: GeographicProportionalSymbolSeriesView;\r\n\tprotected gl(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected ps(): Series {\r\n\t\treturn new BubbleSeries();\r\n\t}\r\n\tprivate q2: BubbleSeries = null;\r\n\trq: string;\r\n\trs: string;\r\n\trx: string;\r\n\tq4: SizeScale;\r\n\tro: string;\r\n\trg: string;\r\n\tq1: BrushScale;\r\n\tq8: boolean;\r\n\trb: boolean;\r\n\tre: number;\r\n\trd: number;\r\n\trc: boolean;\r\n\tra: boolean;\r\n\tq9: boolean;\r\n\tprotected q7: boolean = false;\r\n\tprotected q6: boolean = false;\r\n\tprotected get_dt(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\tq3: ScatterItemSearchMode;\r\n\trf: number;\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.q5.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[9]:\r\n\t\t\tthis.q5.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[8]:\r\n\t\t\tthis.q5.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.q5.cv();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.q5.cw();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[13]:\r\n\t\t\tthis.q5.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[14]:\r\n\t\t\tthis.q5.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[15]:\r\n\t\t\tthis.q5.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[7]:\r\n\t\t\tthis.q5.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[0]:\r\n\t\t\tthis.q5.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[1]:\r\n\t\t\tthis.q5.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[2]:\r\n\t\t\tthis.q5.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[12]:\r\n\t\t\tthis.q5.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[11]:\r\n\t\t\tthis.q5.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[10]:\r\n\t\t\tthis.q5.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.pt).r7 = this.ra;\r\n\t\t\tthis.q7 = this.ra;\r\n\t\t\tif (this.ra) {\r\n\t\t\t\tlet e = (<ScatterBase>this.pt);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.r2));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.pt);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.r2));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.pt).r6 = this.q9;\r\n\t\t\tthis.q6 = this.q9;\r\n\t\t\tif (this.ra) {\r\n\t\t\t\tlet g = (<ScatterBase>this.pt);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.r1));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.pt);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.r1));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.pt).rw = this.q3;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.pt).sk = this.rf;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate r2(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate r1(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicProportionalSymbolSeries, 'raisePropertyChanged', [ 'FillMemberPath:rg:r3', [ 2 ], 'FillScale:q1:r4', [ (<any>BrushScale).$ ], 'FillScaleUseGlobalValues:q8:r5', [ 0, false ], 'IsCustomScatterMarkerStyleAllowed:q9:r6', [ 0, false ], 'IsCustomScatterStyleAllowed:ra:r7', [ 0, false ], 'ItemSearchMode:q3:r8', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:rf:r9', [ 1, 10000 ], 'LabelMemberPath:ro:sa', [ 2 ], 'LatitudeMemberPath:rq:sb', [ 2, null ], 'LongitudeMemberPath:rs:sc', [ 2, null ], 'MarkerBrushBrightness:rd:sd', [ 1, NaN ], 'MarkerOutlineBrightness:re:se', [ 1, NaN ], 'MarkerOutlineUsesFillScale:rb:sf', [ 0, false ], 'RadiusMemberPath:rx:sg', [ 2, null ], 'RadiusScale:q4:sh', [ (<any>SizeScale).$ ], 'RadiusScaleUseGlobalValues:rc:si', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcSizeScaleComponent } from \"igniteui-charts/igc-size-scale-component\";\r\nimport { IgcBrushScaleComponent } from \"igniteui-charts/igc-brush-scale-component\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicProportionalSymbolSeries } from \"./GeographicProportionalSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicProportionalSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicProportionalSymbolSeries\r\n{\r\n\treturn new GeographicProportionalSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicProportionalSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicProportionalSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicProportionalSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-proportional-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.c1 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.rq as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.rq = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.rs as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.rs = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius mapping property for the current series object.\r\n\t*/\r\n\tget radiusMemberPath() : string {\r\n\t\treturn (this.i.rx as string);\r\n\t}\r\n\tset radiusMemberPath(v: string) {\r\n\t\tthis.i.rx = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius size scale for the bubbles.\r\n\t*/\r\n\tget radiusScale() : IgcSizeScaleComponent {\r\n\t                                        if (this.i.q4 == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.q4 as any).externalObject) {\r\n\t                                            let e = IgcSizeScaleComponent._createFromInternal(this.i.q4);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.q4;\r\n\t                                            }\r\n\t                                            (this.i.q4 as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.q4 as any).externalObject;\r\n\t}\r\n\tset radiusScale(v: IgcSizeScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q4 = null : this.i.q4 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Label mapping property for the current series object.\r\n\t*/\r\n\tget labelMemberPath() : string {\r\n\t\treturn (this.i.ro as string);\r\n\t}\r\n\tset labelMemberPath(v: string) {\r\n\t\tthis.i.ro = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill mapping property for the current series object.\r\n\t*/\r\n\tget fillMemberPath() : string {\r\n\t\treturn (this.i.rg as string);\r\n\t}\r\n\tset fillMemberPath(v: string) {\r\n\t\tthis.i.rg = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush scale for the marker brush.\r\n\t*/\r\n\tget fillScale() : IgcBrushScaleComponent {\r\n\t                                        if (this.i.q1 == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.q1 as any).externalObject) {\r\n\t                                            let e = IgcBrushScaleComponent._createFromInternal(this.i.q1);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.q1;\r\n\t                                            }\r\n\t                                            (this.i.q1 as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.q1 as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q1 = null : this.i.q1 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same FillScale.\r\n\t*/\r\n\tget fillScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.q8 as boolean);\r\n\t}\r\n\tset fillScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.q8 = ensureBool(v);\r\n\t                                        this._a(\"fillScaleUseGlobalValues\", this.i.q8);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.\r\n\t * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.\r\n\t*/\r\n\tget markerOutlineUsesFillScale() : boolean {\r\n\t\treturn (this.i.rb as boolean);\r\n\t}\r\n\tset markerOutlineUsesFillScale(v: boolean) {\r\n\t\tthis.i.rb = ensureBool(v);\r\n\t                                        this._a(\"markerOutlineUsesFillScale\", this.i.rb);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)\r\n\t*/\r\n\tget markerOutlineBrightness() : number {\r\n\t\treturn (this.i.re as number);\r\n\t}\r\n\tset markerOutlineBrightness(v: number) {\r\n\t\tthis.i.re = +v;\r\n\t                                        this._a(\"markerOutlineBrightness\", this.i.re);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)\r\n\t*/\r\n\tget markerBrushBrightness() : number {\r\n\t\treturn (this.i.rd as number);\r\n\t}\r\n\tset markerBrushBrightness(v: number) {\r\n\t\tthis.i.rd = +v;\r\n\t                                        this._a(\"markerBrushBrightness\", this.i.rd);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same RadiusScale.\r\n\t*/\r\n\tget radiusScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.rc as boolean);\r\n\t}\r\n\tset radiusScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.rc = ensureBool(v);\r\n\t                                        this._a(\"radiusScaleUseGlobalValues\", this.i.rc);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.ra as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.ra = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.ra);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.q9 as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.q9 = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.q9);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.q3;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.q3 = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.q3));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.rf as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.rf = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.rf);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.radiusScale && (this.radiusScale as any).name && (this.radiusScale as any).name == name) { return this.radiusScale; }\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.radiusScale && (this.radiusScale as any)._styling) {\r\n\t    (this.radiusScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBubbleSeriesModule } from 'igniteui-charts/igc-bubble-series-module';\r\n\r\nimport { IgcGeographicProportionalSymbolSeriesComponent } from './igc-geographic-proportional-symbol-series-component';\r\nimport { GeographicProportionalSymbolSeries } from './GeographicProportionalSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicProportionalSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcBubbleSeriesModule.register();\r\n        IgcGeographicProportionalSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicProportionalSymbolSeriesComponent\", IgcGeographicProportionalSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicProportionalSymbolSeries\", (<any>GeographicProportionalSymbolSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterSeries } from \"igniteui-charts/ScatterSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, enumGetBox, EnumUtil, Boolean_$type, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicSymbolSeriesView, 'GeographicSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicSymbolSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tlet a = <ScatterSeries>this.ce.pt;\r\n\t\tsuper.b2();\r\n\t\ta.sx = this.ce.rh;\r\n\t\ta.s1 = this.ce.rf;\r\n\t\ta.p0 = this.ce.p3;\r\n\t\ta.qm = this.ce.qj;\r\n\t\ta.p5 = this.ce.p4;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).sx = this.ce.rh;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).s1 = this.ce.rf;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).p0 = this.ce.p3;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).qm = this.ce.qj;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).p5 = this.ce.p4;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).sl = this.ce.p5;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).xAxis = (<XamGeographicMap>this.ce.cb).sn;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).yAxis = (<XamGeographicMap>this.ce.cb).sp;\r\n\t}\r\n\tco(): void {\r\n\t\tlet a = <ScatterSeries>this.ce.pt;\r\n\t\tif (this.ce.cb == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ce.cb).sn;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ce.cb).sp;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).rc = this.ce.q1;\r\n\t}\r\n\tch(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).q2 = this.ce.qx;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterSeries>this.ce.pt).q3 = this.ce.qy;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicSymbolSeries, 'GeographicSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_c1(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicSymbolSeries).$;\r\n\t}\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new GeographicSymbolSeriesView(this);\r\n\t}\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.q4 = <GeographicSymbolSeriesView>a;\r\n\t}\r\n\tq4: GeographicSymbolSeriesView;\r\n\tprotected gl(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected ps(): Series {\r\n\t\treturn new ScatterSeries();\r\n\t}\r\n\tprivate q3: ScatterSeries = null;\r\n\trf: string;\r\n\trh: string;\r\n\tq1: CollisionAvoidanceType;\r\n\tq8: boolean;\r\n\tq7: boolean;\r\n\tprotected q6: boolean = false;\r\n\tprotected q5: boolean = false;\r\n\tprotected get_dt(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\tq2: ScatterItemSearchMode;\r\n\tra: number;\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.q4.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[5]:\r\n\t\t\tthis.q4.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[4]:\r\n\t\t\tthis.q4.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[6]:\r\n\t\t\tthis.q4.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.q4.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.q4.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[1]:\r\n\t\t\t(<ScatterBase>this.pt).r7 = this.q8;\r\n\t\t\tthis.q6 = this.q8;\r\n\t\t\tif (this.q8) {\r\n\t\t\t\tlet e = (<ScatterBase>this.pt);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.rm));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.pt);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.rm));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[0]:\r\n\t\t\t(<ScatterBase>this.pt).r6 = this.q7;\r\n\t\t\tthis.q5 = this.q7;\r\n\t\t\tif (this.q8) {\r\n\t\t\t\tlet g = (<ScatterBase>this.pt);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.rl));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.pt);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.rl));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[2]:\r\n\t\t\t(<ScatterBase>this.pt).rw = this.q2;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.pt).sk = this.ra;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate rm(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate rl(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tq9: boolean;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicSymbolSeries, 'raisePropertyChanged', [ 'IsCustomScatterMarkerStyleAllowed:q7:rn', [ 0, false ], 'IsCustomScatterStyleAllowed:q8:ro', [ 0, false ], 'ItemSearchMode:q2:rp', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:ra:rq', [ 1, 10000 ], 'LatitudeMemberPath:rf:rr', [ 2, null ], 'LongitudeMemberPath:rh:rs', [ 2, null ], 'MarkerCollisionAvoidance:q1:rt', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'UseLightweightMarkers:q9:ru', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicSymbolSeries } from \"./GeographicSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicSymbolSeries\r\n{\r\n\treturn new GeographicSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.c1 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.rf as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.rf = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.rh as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.rh = v;\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.q1;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.q1 = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.q1));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.q8 as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.q8 = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.q8);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.q7 as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.q7 = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.q7);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.q2;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.q2 = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.q2));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.ra as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.ra = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.ra);\r\n\t}\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterSeriesModule } from 'igniteui-charts/igc-scatter-series-module';\r\n\r\nimport { IgcGeographicSymbolSeriesComponent } from './igc-geographic-symbol-series-component';\r\nimport { GeographicSymbolSeries } from './GeographicSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcScatterSeriesModule.register();\r\n        IgcGeographicSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicSymbolSeriesComponent\", IgcGeographicSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicSymbolSeries\", (<any>GeographicSymbolSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { VerticalLinearScaler } from \"igniteui-charts/VerticalLinearScaler\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorVerticalScaler extends VerticalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorVerticalScaler, 'SphericalMercatorVerticalScaler', (<any>VerticalLinearScaler).$);\r\n\tprivate au: Rect = null;\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.height + b.e.top * b.d.height;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.au, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.au, b.c, b.a);\r\n\t\t\tc = (c - (b.e.top * b.d.height)) / b.e.height;\r\n\t\t\treturn c;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.top;\r\n\t\tlet n: number = h.height;\r\n\t\tlet o: number = f.top;\r\n\t\tlet p: number = f.height;\r\n\t\tlet q: number = g.top;\r\n\t\tlet r: number = g.height;\r\n\t\tlet s: number = this.au.top;\r\n\t\tlet t: number = this.au.height;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: number = 0.017453292519943295;\r\n\t\tlet w: number;\r\n\t\tlet x: number;\r\n\t\tlet y: number;\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tab = true;\r\n\t\t}\r\n\t\tfor (let ac: number = b; ac < c; ac++) {\r\n\t\t\tif (ab) {\r\n\t\t\t\te = u[ac];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(ac);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * n / this.aj;\r\n\t\t\t\tz = m + z;\r\n\t\t\t\taa = (z - s * n) / t;\r\n\t\t\t\tz = (aa - (o * r)) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * r / this.aj;\r\n\t\t\t\tz = q + z;\r\n\t\t\t\tz = (z - o * r) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = this.ak(a.ll);\r\n\t\te = this.ak(a.lk);\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprotected w(a: string, b: any, c: any): void {\r\n\t\tsuper.w(a, b, c);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"ActualMinimumValue\":\r\n\r\n\t\t\tcase \"ActualMaximumValue\":\r\n\t\t\tthis.ai = SphericalMercatorVerticalScaler.am(this.n);\r\n\t\t\tthis.aj = SphericalMercatorVerticalScaler.am(this.n) - SphericalMercatorVerticalScaler.am(this.o);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate static ag: number = 85.05112878;\r\n\tprivate static ah: number = -85.05112878;\r\n\tprivate ai: number = 0;\r\n\tprivate aj: number = 0;\r\n\tstatic get as(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t}\r\n\tstatic get at(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.au = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = (a - c.top) * b.width + b.top * c.height;\r\n\t\te = SphericalMercatorVerticalScaler.am(this.n) - e / (c.height / this.aj);\r\n\t\treturn SphericalMercatorVerticalScaler.aq(e);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = c.top + this.getMercatorScaledValue3(a, c.height);\r\n\t\treturn (e - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f = this.getMercatorScaledValue3(a, d.height);\r\n\t\treturn (f - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue3(a: number, b: number): number {\r\n\t\ta = a > SphericalMercatorVerticalScaler.ah ? (a < SphericalMercatorVerticalScaler.ag ? a : SphericalMercatorVerticalScaler.ag) : SphericalMercatorVerticalScaler.ah;\r\n\t\tlet c = SphericalMercatorVerticalScaler.am(a);\r\n\t\tlet d = (this.ai - c) * b / this.aj;\r\n\t\treturn (d);\r\n\t}\r\n\tstatic am(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tstatic aq(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tprivate ak(a: number): number {\r\n\t\tif (a < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t\t}\r\n\t\tif (a > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HorizontalLinearScaler } from \"igniteui-charts/HorizontalLinearScaler\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorHorizontalScaler extends HorizontalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorHorizontalScaler, 'SphericalMercatorHorizontalScaler', (<any>HorizontalLinearScaler).$);\r\n\tprivate aj: Rect = null;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.aj = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.width + b.e.left * b.d.width;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.aj, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.aj, b.c, b.a);\r\n\t\t\tlet d: number = (c - (b.e.left * b.d.width)) / b.e.width;\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.left;\r\n\t\tlet n: number = h.width;\r\n\t\tlet o: number = f.left;\r\n\t\tlet p: number = f.width;\r\n\t\tlet q: number = g.left;\r\n\t\tlet r: number = g.width;\r\n\t\tlet s: number = this.aj.left;\r\n\t\tlet t: number = this.aj.width;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tv = true;\r\n\t\t}\r\n\t\tfor (let w: number = b; w < c; w++) {\r\n\t\t\tif (v) {\r\n\t\t\t\te = u[w];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(w);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tlet x: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tx = 1 - x;\r\n\t\t\t\t}\r\n\t\t\t\tx = m + n * (x - s) / t;\r\n\t\t\t\tlet y: number = (x - (o * r)) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = y;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, y);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet z: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tz = 1 - z;\r\n\t\t\t\t}\r\n\t\t\t\tz = q + r * (z - o) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = a.ll;\r\n\t\te = a.lk;\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn this.o + e * (this.m);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = (a - this.o) / (this.m);\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn c.left + c.width * (e - b.left) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f: number = (a - this.o) / (this.m);\r\n\t\tif (e) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\t\treturn c.left + c.width * (f - b.left) / b.width;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from \"./MapResizeBehavior\";\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from \"./MapBackgroundTilingMode\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { Base, Point, Type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, EventArgs, Boolean_$type, typeCast, enumGetBox, EnumUtil, Point_$type, fromEnum, Number_$type, runOn, delegateRemove, delegateCombine, markType, markDep, PointUtil, INotifyPropertyChanged, INotifyPropertyChanged_$type, PropertyChangedEventArgs, String_$type, IEnumerable, IEnumerable_$type } from \"igniteui-core/type\";\r\nimport { NumericXAxis } from \"igniteui-charts/NumericXAxis\";\r\nimport { NumericYAxis } from \"igniteui-charts/NumericYAxis\";\r\nimport { SphericalMercatorVerticalScaler } from \"./SphericalMercatorVerticalScaler\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { SphericalMercatorHorizontalScaler } from \"./SphericalMercatorHorizontalScaler\";\r\nimport { StraightNumericAxisBase } from \"igniteui-charts/StraightNumericAxisBase\";\r\nimport { DomRenderer, DomRenderer_$type } from \"igniteui-core/dom\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesViewerView } from \"igniteui-charts/SeriesViewerView\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { Tuple$2 } from \"igniteui-core/Tuple$2\";\r\nimport { MathUtil } from \"igniteui-core/MathUtil\";\r\nimport { ZoomCoercionMode } from \"igniteui-charts/ZoomCoercionMode\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { FontInfo } from \"igniteui-core/FontInfo\";\r\nimport { ItfConverter } from \"igniteui-core/ItfConverter\";\r\nimport { TriangulationSource } from \"igniteui-core/TriangulationSource\";\r\nimport { ChartVisualData } from \"igniteui-charts/ChartVisualData\";\r\nimport { AxisVisualData } from \"igniteui-charts/AxisVisualData\";\r\nimport { SeriesVisualData } from \"igniteui-charts/SeriesVisualData\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RectData } from \"igniteui-core/RectData\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { truncate, intDivide, isNaN_ } from \"igniteui-core/number\";\r\nimport { XamMultiScaleImage } from \"igniteui-core/XamMultiScaleImage\";\r\nimport { XamMultiScaleTileSource } from \"igniteui-core/XamMultiScaleTileSource\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { Size } from \"igniteui-core/Size\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterAreaSeries } from \"igniteui-charts/ScatterAreaSeries\";\r\nimport { InteractionState } from \"igniteui-core/InteractionState\";\r\nimport { SeriesViewerViewManager } from \"igniteui-charts/SeriesViewerViewManager\";\r\nimport { BrushCollection } from \"igniteui-core/BrushCollection\";\r\nimport { DefaultPaletteInfo } from \"igniteui-charts/DefaultPaletteInfo\";\r\nimport { CanvasRenderScheduler } from \"igniteui-core/CanvasRenderScheduler\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Shape } from \"igniteui-core/Shape\";\r\nimport { ModifierKeys } from \"igniteui-core/ModifierKeys\";\r\nimport { OpenStreetMapTileSource } from \"igniteui-core/OpenStreetMapTileSource\";\r\nimport { ColorScale } from \"igniteui-charts/ColorScale\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMap extends SeriesViewer implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(XamGeographicMap, 'XamGeographicMap', (<any>SeriesViewer).$, [IMapRenderDeferralHandler_$type]);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.s8 = SphericalMercatorVerticalScaler.am(XamGeographicMap.uk.bottom) - SphericalMercatorVerticalScaler.am(XamGeographicMap.uk.top);\r\n\t\tthis.ab = (<any>XamGeographicMap).$;\r\n\t\tthis.backgroundContent = new OpenStreetMapImagery();\r\n\t\tlet a = ((() => {\r\n\t\t\tlet $ret = new NumericXAxis();\r\n\t\t\t$ret.bh = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\ta.cd = true;\r\n\t\tthis.sn = a;\r\n\t\tthis.sn.mr = new SphericalMercatorHorizontalScaler();\r\n\t\tlet b = ((() => {\r\n\t\t\tlet $ret = new NumericYAxis();\r\n\t\t\t$ret.bh = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\tb.cd = true;\r\n\t\tthis.sp = b;\r\n\t\tthis.sp.mr = new SphericalMercatorVerticalScaler();\r\n\t\tthis.tu();\r\n\t\tthis.t1();\r\n\t\tthis.k8();\r\n\t}\r\n\tprivate tc: DomRenderer = null;\r\n\tprovideContainer(a: any): void {\r\n\t\tsuper.provideContainer(a);\r\n\t\tthis.sn.provideRenderer(<DomRenderer><any>a);\r\n\t\tthis.sp.provideRenderer(<DomRenderer><any>a);\r\n\t}\r\n\tk8(): void {\r\n\t\tsuper.k8();\r\n\t\tthis.sz.fv(this.fy);\r\n\t}\r\n\teh(): boolean {\r\n\t\treturn this.s5;\r\n\t}\r\n\tei(): boolean {\r\n\t\treturn this.s5;\r\n\t}\r\n\ts5: boolean;\r\n\tstatic sx: MapResizeBehavior = 0;\r\n\tsy: MapResizeBehavior;\r\n\ts1: boolean = false;\r\n\ts2: boolean;\r\n\tprotected sw(): MapBackgroundTilingMode {\r\n\t\tif (this.su == 0) {\r\n\t\t\tif (this.s1) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\tprivate st: MapBackgroundTilingMode = 1;\r\n\tget sv(): MapBackgroundTilingMode {\r\n\t\treturn this.st;\r\n\t}\r\n\tset sv(a: MapBackgroundTilingMode) {\r\n\t\tthis.st = a;\r\n\t}\r\n\tsu: MapBackgroundTilingMode;\r\n\tstatic uk: Rect = new Rect(2, <Point>{ $type: Point_$type, x: -180, y: -85.05112878 }, <Point>{ $type: Point_$type, x: 180, y: 85.05112878 });\r\n\ts8: number = 0;\r\n\ts4: boolean;\r\n\ts3: boolean;\r\n\tu0: Rect;\r\n\tprivate uj: Rect = null;\r\n\tget uo(): Rect {\r\n\t\treturn this.uj;\r\n\t}\r\n\tset uo(a: Rect) {\r\n\t\tlet b: boolean = Rect.l_op_Inequality(this.uj, a);\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.uj;\r\n\t\t\tthis.uj = a;\r\n\t\t\tthis.nb(\"ActualWorldRect\", c, a);\r\n\t\t}\r\n\t}\r\n\tus(): Rect {\r\n\t\treturn this.uo;\r\n\t}\r\n\tprivate tu(): void {\r\n\t\tif (this.u0.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.uo = this.uy(this.u0, this.b5 == 1);\r\n\t}\r\n\tprivate uy(a: Rect, b: boolean): Rect {\r\n\t\tlet c = a.top;\r\n\t\tlet d = a.left;\r\n\t\tlet e = a.width;\r\n\t\tlet f = a.height;\r\n\t\tlet g = SphericalMercatorVerticalScaler.am(a.bottom);\r\n\t\tlet h = SphericalMercatorVerticalScaler.am(a.top);\r\n\t\tlet i = g - h;\r\n\t\tlet j = a.width / XamGeographicMap.uk.width;\r\n\t\tlet k = SphericalMercatorVerticalScaler.am(XamGeographicMap.uk.top);\r\n\t\tlet l = i / j;\r\n\t\tif (i / j > this.s8) {\r\n\t\t\tlet m = i / this.s8;\r\n\t\t\tlet n = m - j;\r\n\t\t\td = d - (n / 2) * XamGeographicMap.uk.width;\r\n\t\t\te = m * XamGeographicMap.uk.width;\r\n\t\t\tif (b) {\r\n\t\t\t\tif (d < XamGeographicMap.uk.left) {\r\n\t\t\t\t\td += (XamGeographicMap.uk.left - d);\r\n\t\t\t\t} else if ((d + e) > XamGeographicMap.uk.right) {\r\n\t\t\t\t\td -= ((d + e) - XamGeographicMap.uk.right);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (i / j < this.s8) {\r\n\t\t\tlet o = this.s8 * j;\r\n\t\t\tlet p = o - i;\r\n\t\t\tlet q = h - (p / 2);\r\n\t\t\tlet r = g + (p / 2);\r\n\t\t\tif (b) {\r\n\t\t\t\tif (q < k) {\r\n\t\t\t\t\tq += (k - q);\r\n\t\t\t\t\tr += (k - q);\r\n\t\t\t\t} else if (r > (k + this.s8)) {\r\n\t\t\t\t\tq -= ((r) - (k + this.s8));\r\n\t\t\t\t\tr -= ((r) - (k + this.s8));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = SphericalMercatorVerticalScaler.aq(q);\r\n\t\t\tf = SphericalMercatorVerticalScaler.aq(r) - c;\r\n\t\t}\r\n\t\tlet s = new Rect(0, d, c, e, f);\r\n\t\treturn s;\r\n\t}\r\n\tget backgroundContent(): GeographicMapImagery {\r\n\t\treturn this.sq;\r\n\t}\r\n\tset backgroundContent(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.backgroundContent;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.backgroundContent;\r\n\t\t\tthis.sq = a;\r\n\t\t\tthis.nb(\"BackgroundContent\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate sq: GeographicMapImagery = null;\r\n\tget sn(): NumericXAxis {\r\n\t\treturn this.sm;\r\n\t}\r\n\tset sn(a: NumericXAxis) {\r\n\t\tlet b: boolean = a != this.sn;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.sn;\r\n\t\t\tthis.sm = a;\r\n\t\t\tthis.nb(\"XAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate sm: NumericXAxis = null;\r\n\tget sp(): NumericYAxis {\r\n\t\treturn this.so;\r\n\t}\r\n\tset sp(a: NumericYAxis) {\r\n\t\tlet b: boolean = a != this.sp;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.sp;\r\n\t\t\tthis.so = a;\r\n\t\t\tthis.nb(\"YAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate so: NumericYAxis = null;\r\n\tss: GeographicMapImagery = null;\r\n\tprivate static un: Rect = new Rect(0, 0, 0, 1, 1);\r\n\tgetZoomRectFromGeoRect(a: Rect): Rect {\r\n\t\treturn this.getZoomFromGeographicRect(a);\r\n\t}\r\n\tt4(a: Rect): void {\r\n\t\tthis.sg = a;\r\n\t}\r\n\tt3(a: Rect): void {\r\n\t\tthis.u0 = a;\r\n\t}\r\n\tgetZoomFromGeographicRect(a: Rect): Rect {\r\n\t\treturn this.uq(a, true, 0);\r\n\t}\r\n\tup(a: Rect, b: number): Rect {\r\n\t\treturn this.uq(a, false, b);\r\n\t}\r\n\tprivate uq(a: Rect, b: boolean, c: number): Rect {\r\n\t\tlet d = a;\r\n\t\tif (b) {\r\n\t\t\td = this.uy(a, false);\r\n\t\t}\r\n\t\tlet e = this.sn;\r\n\t\tlet f = this.sp;\r\n\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.un, this.sf, e.cf);\r\n\t\tg.c = this.r4;\r\n\t\tlet h: ScalerParams = new ScalerParams(1, XamGeographicMap.un, this.sf, f.cf);\r\n\t\th.c = this.r4;\r\n\t\tlet i = this.sn.ef(d.left, g);\r\n\t\tlet j = this.sn.ef(d.right, g);\r\n\t\tlet k = this.sp.ef(d.top, h);\r\n\t\tlet l = this.sp.ef(d.bottom, h);\r\n\t\tlet m = (i - c) / this.sf.width;\r\n\t\tlet n = (l - c) / this.sf.height;\r\n\t\tlet o = (j - i + (c * 2)) / this.sf.width;\r\n\t\tlet p = (k - l + (c * 2)) / this.sf.height;\r\n\t\tlet q: Rect = new Rect(0, m, n, o, p);\r\n\t\tq.intersect(XamGeographicMap.un);\r\n\t\tif (q.isEmpty) {\r\n\t\t\tq = XamGeographicMap.un;\r\n\t\t}\r\n\t\treturn q;\r\n\t}\r\n\tgetZoomFromGeographicPoints(a: Point, b: Point): Rect {\r\n\t\tlet c = a.x;\r\n\t\tlet d = b.y;\r\n\t\tlet e = b.x - a.x;\r\n\t\tlet f = a.y - b.y;\r\n\t\tif (e < 0 || f < 0) {\r\n\t\t\treturn XamGeographicMap.un;\r\n\t\t} else {\r\n\t\t\tlet g: Rect = new Rect(0, c, d, e, f);\r\n\t\t\treturn this.getZoomFromGeographicRect(g);\r\n\t\t}\r\n\t}\r\n\tuu(a: Rect): Rect {\r\n\t\tlet b = this.sn;\r\n\t\tlet c = this.sp;\r\n\t\tlet d: ScalerParams = new ScalerParams(1, a, this.sf, b.cf);\r\n\t\td.c = this.r4;\r\n\t\tlet e: ScalerParams = new ScalerParams(1, a, this.sf, c.cf);\r\n\t\te.c = this.r4;\r\n\t\tlet f = this.r3;\r\n\t\tlet g = b.ei(f.left, d);\r\n\t\tlet h = c.ei(f.top, e);\r\n\t\tlet i = b.ei(f.right, d);\r\n\t\tlet j = c.ei(f.bottom, e);\r\n\t\tlet k = i - g;\r\n\t\tlet l = h - j;\r\n\t\tlet m: Rect = new Rect(0, g, j, k, l);\r\n\t\tif (this.b5 == 1) {\r\n\t\t\tm.intersect(XamGeographicMap.uk);\r\n\t\t\tif (m.isEmpty) {\r\n\t\t\t\tm = XamGeographicMap.uk;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n\tug(a: Point): Point {\r\n\t\tlet b = this.sn.lo(a.x);\r\n\t\tlet c = this.sp.lo(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tuh(a: Point): Point {\r\n\t\tlet b = this.sn.e0(a.x);\r\n\t\tlet c = this.sp.e0(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tui(a: Point): Point {\r\n\t\treturn this.uh(a);\r\n\t}\r\n\ttr(): void {\r\n\t\tlet a = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\tif (a != null) {\r\n\t\t\ta.clearTileCache();\r\n\t\t}\r\n\t}\r\n\ttx(a: Brush): void {\r\n\t}\r\n\te4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\ttz(): void {\r\n\t\tthis.sz.ee();\r\n\t\tfor (let a of fromEnum<Series>(this.series)) {\r\n\t\t\ta.mg();\r\n\t\t}\r\n\t}\r\n\tprotected uf: Point = <Point>{ $type: Point_$type, x: NaN, y: NaN };\r\n\tprotected t2(): void {\r\n\t\tif (this.sy == 2) {\r\n\t\t\tif (!this.sf.isEmpty && this.sf.width > 0 && this.sf.height > 0) {\r\n\t\t\t\tlet a: number = this.sn.lo(this.sf.left + (this.sf.width / 2));\r\n\t\t\t\tlet b: number = this.sp.lo(this.sf.top + (this.sf.height / 2));\r\n\t\t\t\tthis.uf = <Point>{ $type: Point_$type, x: a, y: b };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.sf.isEmpty && this.sf.width > 0 && this.sf.height > 0) {\r\n\t\t\t\tlet c: number = this.sn.lo(this.sf.left);\r\n\t\t\t\tlet d: number = this.sp.lo(this.sf.top);\r\n\t\t\t\tthis.uf = <Point>{ $type: Point_$type, x: c, y: d };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprotected ty(): void {\r\n\t\tif (isNaN_(this.uf.x) || isNaN_(this.uf.y)) {\r\n\t\t\tthis.t2();\r\n\t\t}\r\n\t\tlet a: number = this.uf.x;\r\n\t\tlet b: number = this.uf.y;\r\n\t\tif (!isNaN_(a) && !isNaN_(b)) {\r\n\t\t\tlet c: number = this.r0.left;\r\n\t\t\tlet d: number = this.r0.top;\r\n\t\t\tlet e: number = this.r0.width;\r\n\t\t\tlet f: number = this.r0.height;\r\n\t\t\tif (e > this.um.width) {\r\n\t\t\t} else {\r\n\t\t\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.un, this.sf, this.sn.cf);\r\n\t\t\t\tg.c = this.r4;\r\n\t\t\t\tlet h: number = this.sn.ef(a, g);\r\n\t\t\t\tif (this.sy == 2) {\r\n\t\t\t\t\tlet i = h / this.sf.width;\r\n\t\t\t\t\tc = i - (e / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc = h / this.sf.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (c + e > this.um.right) {\r\n\t\t\t\t\tc = this.um.right - e;\r\n\t\t\t\t} else if (c < this.um.left) {\r\n\t\t\t\t\tc = this.um.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (f > this.um.height) {\r\n\t\t\t} else {\r\n\t\t\t\tlet j: ScalerParams = new ScalerParams(1, XamGeographicMap.un, this.sf, this.sp.cf);\r\n\t\t\t\tj.c = this.r4;\r\n\t\t\t\tlet k: number = this.sp.ef(b, j);\r\n\t\t\t\tif (this.sy == 2) {\r\n\t\t\t\t\tlet l = k / this.sf.height;\r\n\t\t\t\t\td = l - (f / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\td = k / this.sf.height;\r\n\t\t\t\t}\r\n\t\t\t\tif (d + f > this.um.bottom) {\r\n\t\t\t\t\td = this.um.bottom - f;\r\n\t\t\t\t} else if (d < this.um.top) {\r\n\t\t\t\t\td = this.um.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.oi(new Rect(0, c, d, e, f), false);\r\n\t\t}\r\n\t}\r\n\tprotected get_ea(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected um: Rect = null;\r\n\tprotected r1(): Rect {\r\n\t\tlet a: Rect = super.r1();\r\n\t\tif (this.sn == null || this.sp == null) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tthis.sb();\r\n\t\tlet b: number = a.left;\r\n\t\tlet c: number = a.top;\r\n\t\tif (this.b5 == 1) {\r\n\t\t\tif (this.sg.width > this.um.width) {\r\n\t\t\t\tb = 0.5 - (this.sg.width / 2);\r\n\t\t\t} else if (b + a.width > this.um.right) {\r\n\t\t\t\tb = this.um.right - this.sg.width;\r\n\t\t\t} else if (b < this.um.left) {\r\n\t\t\t\tb = this.um.left;\r\n\t\t\t}\r\n\t\t\tif (this.sg.height > this.um.height) {\r\n\t\t\t\tc = 0.5 - (this.sg.height / 2);\r\n\t\t\t} else if (c + this.sg.height > this.um.bottom) {\r\n\t\t\t\tc = this.um.bottom - this.sg.height;\r\n\t\t\t} else if (c < this.um.top) {\r\n\t\t\t\tc = this.um.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet d: boolean = false;\r\n\t\tif (!this.s4 && this.b5 == 2 && this.s1) {\r\n\t\t\tif (b > 1) {\r\n\t\t\t\tb = (b - Math.floor(b)) + 1;\r\n\t\t\t}\r\n\t\t\tif (b < 0) {\r\n\t\t\t\tb = 0 - (Math.ceil(b) - b);\r\n\t\t\t}\r\n\t\t\tif ((a.right - this.um.right) > 0 && ((a.right - this.um.right) / a.width) > 0.8) {\r\n\t\t\t\tb = this.um.left - (a.width - (a.right - this.um.right));\r\n\t\t\t\td = true;\r\n\t\t\t} else if (a.left < this.um.left && (Math.abs(a.left - this.um.left) / a.width) > 0.8) {\r\n\t\t\t\tb = this.um.right - (Math.abs(a.left - this.um.left));\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet e = new Rect(0, b, c, a.width, a.height);\r\n\t\tif (this.s4) {\r\n\t\t\tlet f = this.up(this.u0, 1);\r\n\t\t\tf = this.ur(f);\r\n\t\t\tlet g = e.left + e.width / 2;\r\n\t\t\tlet h = e.top + e.height / 2;\r\n\t\t\tif (e.width > f.width) {\r\n\t\t\t\tlet i = e.height / e.width;\r\n\t\t\t\tlet j = f.width;\r\n\t\t\t\tlet k = i * j;\r\n\t\t\t\te = new Rect(0, g - j / 2, h - k / 2, j, k);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.height > f.height) {\r\n\t\t\t\tlet l = e.width / e.height;\r\n\t\t\t\tlet m = f.height;\r\n\t\t\t\tlet n = l * m;\r\n\t\t\t\te = new Rect(0, g - n / 2, h - m / 2, n, m);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.left < f.left) {\r\n\t\t\t\te = new Rect(0, f.left, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.top < f.top) {\r\n\t\t\t\te = new Rect(0, e.left, f.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.right > f.right) {\r\n\t\t\t\te = new Rect(0, f.right - e.width, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.bottom > f.bottom) {\r\n\t\t\t\te = new Rect(0, e.left, f.bottom - e.height, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d) {\r\n\t\t\tthis.dx = true;\r\n\t\t\tthis.sg = e;\r\n\t\t\tthis.dx = false;\r\n\t\t}\r\n\t\treturn e;\r\n\t}\r\n\tkm(a: Rect, b: ScalerParams): Tuple$2<boolean, number> {\r\n\t\tlet c: boolean = true;\r\n\t\tlet d: boolean = true;\r\n\t\tlet e: number = 0;\r\n\t\tlet f = this.sb();\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = 0;\r\n\t\tif ((a.right - f.right) > 0) {\r\n\t\t\tg = ((a.right - f.right) / a.width);\r\n\t\t}\r\n\t\tif (a.left < f.left) {\r\n\t\t\th = (Math.abs(a.left - f.left) / a.width);\r\n\t\t}\r\n\t\tif (h == 0 && g == 0) {\r\n\t\t\tc = false;\r\n\t\t}\r\n\t\tif (h > g) {\r\n\t\t\td = false;\r\n\t\t}\r\n\t\tif (c) {\r\n\t\t\tif (d) {\r\n\t\t\t\tlet i = this.sm.ef(-180, b);\r\n\t\t\t\tlet j = this.sm.ef(180, b);\r\n\t\t\t\te = j - i;\r\n\t\t\t} else {\r\n\t\t\t\tlet k = this.sm.ef(-180, b);\r\n\t\t\t\tlet l = this.sm.ef(180, b);\r\n\t\t\t\te = k - l;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Tuple$2<boolean, number>(Boolean_$type, Number_$type, c, e);\r\n\t}\r\n\tsb(): Rect {\r\n\t\tlet a: ScalerParams = new ScalerParams(1, XamGeographicMap.un, this.sf, this.sn.cf);\r\n\t\ta.c = this.r4;\r\n\t\tlet b: ScalerParams = new ScalerParams(1, XamGeographicMap.un, this.sf, this.sp.cf);\r\n\t\tb.c = this.r4;\r\n\t\tlet c: number = this.sn.ef(XamGeographicMap.uk.left, a);\r\n\t\tlet d: number = this.sn.ef(XamGeographicMap.uk.right, a);\r\n\t\tlet e: number = this.sp.ef(XamGeographicMap.uk.top, b);\r\n\t\tlet f: number = this.sp.ef(XamGeographicMap.uk.bottom, b);\r\n\t\tthis.um = new Rect(0, c / this.sf.width, f / this.sf.height, (d - c) / this.sf.width, (e - f) / this.sf.height);\r\n\t\treturn this.um;\r\n\t}\r\n\tprivate ur(a: Rect): Rect {\r\n\t\tlet b: number = this.g0;\r\n\t\tlet c: number = 0.5 * (a.left + a.right);\r\n\t\tlet d: number = 0.5 * (a.top + a.bottom);\r\n\t\tlet e: number = a.width;\r\n\t\tlet f: number = a.height;\r\n\t\tlet g: number = MathUtil.b(a.width, b, 1);\r\n\t\tlet h: number = MathUtil.b(a.height, b, 1);\r\n\t\tlet i: Rect = this.sf;\r\n\t\tlet j: number = i.width / i.height;\r\n\t\tlet k: number = g * i.width;\r\n\t\tlet l: number = h * i.height;\r\n\t\tlet m: number = k / l;\r\n\t\tif (m != j) {\r\n\t\t\tif (l * j > k) {\r\n\t\t\t\tk = l * j;\r\n\t\t\t\tg = k / i.width;\r\n\t\t\t} else {\r\n\t\t\t\tl = k / j;\r\n\t\t\t\th = l / i.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet n: boolean = g != e;\r\n\t\tlet o: boolean = h != f;\r\n\t\tlet p: number = n ? c - 0.5 * g : a.left;\r\n\t\tlet q: number = o ? d - 0.5 * h : a.top;\r\n\t\tlet r: number = n ? c + 0.5 * g : a.right;\r\n\t\tlet s: number = o ? d + 0.5 * h : a.bottom;\r\n\t\tif (p < 0) {\r\n\t\t\tp = 0;\r\n\t\t\tr = p + g;\r\n\t\t}\r\n\t\tif (r > 1) {\r\n\t\t\tr = 1;\r\n\t\t\tp = r - g;\r\n\t\t}\r\n\t\tif (q < 0) {\r\n\t\t\tq = 0;\r\n\t\t\ts = q + h;\r\n\t\t}\r\n\t\tif (s > 1) {\r\n\t\t\ts = 1;\r\n\t\t\tq = s - h;\r\n\t\t}\r\n\t\treturn new Rect(0, p, q, r - p, s - q);\r\n\t}\r\n\tprotected r2(a: Rect): Rect {\r\n\t\tsuper.r2(this.sf);\r\n\t\tif (a.isEmpty) {\r\n\t\t\treturn Rect.empty;\r\n\t\t}\r\n\t\tlet b: Rect;\r\n\t\tif (a.width > a.height) {\r\n\t\t\tlet c: number = intDivide(<number>truncate((a.width - a.height)), 2);\r\n\t\t\tb = new Rect(0, a.left + c, a.top, a.height, a.height);\r\n\t\t} else {\r\n\t\t\tlet d: number = intDivide(<number>truncate((a.height - a.width)), 2);\r\n\t\t\tb = new Rect(0, a.left, a.top + d, a.width, a.width);\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tut(a: Rect): Rect {\r\n\t\treturn this.r2(a);\r\n\t}\r\n\tprotected cl(): SeriesViewerView {\r\n\t\treturn new XamGeographicMapView(this);\r\n\t}\r\n\tprivate tt(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bh = this;\r\n\t\t}\r\n\t}\r\n\tprotected mv(a: SeriesViewerView): void {\r\n\t\tsuper.mv(a);\r\n\t\tthis.sz = <XamGeographicMapView>a;\r\n\t}\r\n\tm6(a: Rect, b: Rect): void {\r\n\t\tsuper.m6(a, b);\r\n\t\tthis.n6(this.sn);\r\n\t\tthis.n6(this.sp);\r\n\t\tif (Rect.l_op_Inequality(a, b)) {\r\n\t\t\tthis.ty();\r\n\t\t}\r\n\t\tif (this.s4) {\r\n\t\t\tthis.r0 = this.r1();\r\n\t\t}\r\n\t\tthis.t5();\r\n\t}\r\n\tta: number;\r\n\tprivate s7: number = 1;\r\n\tget s9(): number {\r\n\t\treturn this.s7;\r\n\t}\r\n\tset s9(a: number) {\r\n\t\tlet b = this.s7;\r\n\t\tthis.s7 = a;\r\n\t\tthis.nb(\"ActualWindowScale\", b, this.s7);\r\n\t}\r\n\tf4(): number {\r\n\t\treturn this.s9;\r\n\t}\r\n\tf5(): number {\r\n\t\treturn this.s9;\r\n\t}\r\n\tprotected n5(): void {\r\n\t\tsuper.n5();\r\n\t\tlet a = Math.min(this.r0.width, this.r0.height);\r\n\t\tthis.s9 = a;\r\n\t}\r\n\tex(): boolean {\r\n\t\treturn this.s1;\r\n\t}\r\n\tb6(): ZoomCoercionMode {\r\n\t\tif (this.b7 == 0) {\r\n\t\t\tif (this.s2) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.b7;\r\n\t}\r\n\tprotected m7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.m7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"ZoomCoercionMode\":\r\n\t\t\tthis.tu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRect\":\r\n\t\t\tthis.t2();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[0]:\r\n\t\t\tthis.sv = this.sw();\r\n\t\t\tif (this.ss != null) {\r\n\t\t\t\tthis.ss.isHorizontalWrappingEnabled = this.sv == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[1]:\r\n\t\t\tthis.s1 = this.s2;\r\n\t\t\tthis.sv = this.sw();\r\n\t\t\tthis.b5 = this.b6();\r\n\t\t\tif (this.ss != null) {\r\n\t\t\t\tthis.ss.isHorizontalWrappingEnabled = this.sv == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[4]:\r\n\t\t\tthis.r0 = this.r1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BackgroundContent\":\r\n\t\t\tif (this.ss != null) {\r\n\t\t\t\tlet e = this.ss;\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.tv));\r\n\t\t\t\tthis.ss.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tthis.ss = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\t\tif (this.ss != null) {\r\n\t\t\t\tlet f = this.ss;\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.tv));\r\n\t\t\t\tthis.ss.deferralHandler = this;\r\n\t\t\t\tthis.ss.isHorizontalWrappingEnabled = this.sv == 2;\r\n\t\t\t}\r\n\t\t\tthis.sz.fu(typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, c), typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, d));\r\n\t\t\tif (this.ss != null) {\r\n\t\t\t\tthis.ss.geographicMap = this;\r\n\t\t\t\tthis.sz.fr(this.r0);\r\n\t\t\t\tthis.sz.fv(this.fy);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.t0(<Axis>c);\r\n\t\t\tthis.tt(<Axis>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[6]:\r\n\t\t\tif (!this.s3) {\r\n\t\t\t\tthis.sg = XamGeographicMap.un;\r\n\t\t\t}\r\n\t\t\tthis.tu();\r\n\t\t\tthis.t1();\r\n\t\t\tthis.t2();\r\n\t\t\tthis.r0 = this.r1();\r\n\t\t\tthis.sz.fs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.sz.fr(this.r0);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWorldRect\":\r\n\t\t\tfor (let g of fromEnum<Series>(this.series)) {\r\n\t\t\t\tg.l7(false);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[5]:\r\n\t\t\tthis.s9 = this.ta;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowScale\":\r\n\t\t\tif (!this.e3) {\r\n\t\t\t\tthis.oh(this.f4(), this.f5());\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualPixelScalingRatio\":\r\n\t\t\tthis.sz.fv(this.fy);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[7]:\r\n\t\t\tthis.od();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerAutomaticBehavior\":\r\n\t\t\tfor (let h of fromEnum<Series>(this.series)) {\r\n\t\t\t\th.k9();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate tv(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\tprivate t0(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bh = null;\r\n\t\t}\r\n\t}\r\n\tprivate t1(): void {\r\n\t\tif (this.sn != null) {\r\n\t\t\tthis.sn.ll = this.uo.left;\r\n\t\t\tthis.sn.lk = this.uo.right;\r\n\t\t}\r\n\t\tif (this.sp != null) {\r\n\t\t\tthis.sp.ll = this.uo.top;\r\n\t\t\tthis.sp.lk = this.uo.bottom;\r\n\t\t}\r\n\t\tthis.sn.cz(true);\r\n\t\tthis.sp.cz(true);\r\n\t}\r\n\tsz: XamGeographicMapView;\r\n\tprivate s0: FontInfo = null;\r\n\tgetFontInfo(): FontInfo {\r\n\t\tthis.s0 = this.sz.fo;\r\n\t\treturn this.s0;\r\n\t}\r\n\tq7(): Brush {\r\n\t\treturn this.sz.fw;\r\n\t}\r\n\tgetFontBrush(): Brush {\r\n\t\treturn this.sz.fx;\r\n\t}\r\n\tprotected ny(a: Series, b: any): void {\r\n\t\tif (typeCast<ItfConverter>((<any>ItfConverter).$, b) !== null) {\r\n\t\t\tlet c = (<ItfConverter>b);\r\n\t\t\tlet d = (<GeographicScatterAreaSeries>a);\r\n\t\t\td.itemsSource = c.triangulationSource.points;\r\n\t\t\td.p2 = c.triangulationSource.triangles;\r\n\t\t} else {\r\n\t\t\tsuper.ny(a, b);\r\n\t\t}\r\n\t}\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.no(a, b);\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.n4(a);\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.kw();\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.tc != null) {\r\n\t\t\tthis.tc.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tts(a: boolean): void {\r\n\t\tthis.oc(a);\r\n\t}\r\n\ttd(): any {\r\n\t\tlet a = new ChartVisualData();\r\n\t\tlet b = this.sn.fs();\r\n\t\tlet c = this.sp.fs();\r\n\t\ta.axes.add1(b);\r\n\t\ta.axes.add1(c);\r\n\t\tfor (let d = 0; d < this.series.count; d++) {\r\n\t\t\tlet e = this.series._inner[d].hj();\r\n\t\t\ta.series.add1(e);\r\n\t\t}\r\n\t\ta.name = this.name;\r\n\t\ta.contentArea = RectData.b(this.sf);\r\n\t\ta.centralArea = RectData.b(this.sf);\r\n\t\ta.plotArea = RectData.b(this.sf);\r\n\t\treturn a;\r\n\t}\r\n\tr7(a: Rect, b: Rect, c: Rect): Rect {\r\n\t\treturn a;\r\n\t}\r\n\ttw(): void {\r\n\t}\r\n\tprivate ul: Rect = Rect.empty;\r\n\tprotected get uz(): Rect {\r\n\t\treturn this.ul;\r\n\t}\r\n\tprotected set uz(a: Rect) {\r\n\t\tthis.ul = a;\r\n\t}\r\n\tt6(a: Rect): void {\r\n\t\tthis.uz = a;\r\n\t\tthis.t5();\r\n\t}\r\n\tprivate t5(): void {\r\n\t\tif (this.s6 && !this.uz.isEmpty) {\r\n\t\t\tlet a = this.getZoomFromGeographicRect(this.uz);\r\n\t\t\tthis.uz = Rect.empty;\r\n\t\t\tthis.oi(a, false);\r\n\t\t}\r\n\t}\r\n\tget s6(): boolean {\r\n\t\treturn !this.sf.isEmpty && !this.r4.isEmpty;\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, XamGeographicMap, 'nb', [ 'BackgroundTilingMode:su:t7', [ MapBackgroundTilingMode_$type, enumGetBox<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, 0) ], 'IsHorizontalWrappingEnabled:s2:t8', [ 0, false ], 'ResizeBehavior:sy:t9', [ MapResizeBehavior_$type, enumGetBox<MapResizeBehavior>(MapResizeBehavior_$type, XamGeographicMap.sx) ], 'SuppressZoomResetOnWorldRectChange:s3:ua', [ 0, false ], 'UseWorldRectForZoomBounds:s4:ub', [ 0, false ], 'WindowScale:ta:uc', [ 1, NaN ], 'WorldRect:u0:ud', [ (<any>Rect).$, XamGeographicMap.uk ], 'Zoomable:s5:ue', [ 0, true ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapImagery extends Control implements INotifyPropertyChanged {\r\n\tstatic $t: Type = markType(GeographicMapImagery, 'GeographicMapImagery', (<any>Control).$, [INotifyPropertyChanged_$type]);\r\n\tconstructor(a: XamMultiScaleTileSource) {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicMapImagery).$;\r\n\t\tthis.ap = a;\r\n\t\tthis.aj = this.ai();\r\n\t\tthis.bb(this.aj);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new GeographicMapImageryView(this);\r\n\t}\r\n\tprotected aj: GeographicMapImageryView;\r\n\tprivate ak: IMapRenderDeferralHandler = null;\r\n\tget deferralHandler(): IMapRenderDeferralHandler {\r\n\t\treturn this.ak;\r\n\t}\r\n\tset deferralHandler(a: IMapRenderDeferralHandler) {\r\n\t\tthis.ak = a;\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.al = a;\r\n\t\t}\r\n\t}\r\n\tprivate a5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\ta9(): void {\r\n\t\tlet a = this.ao;\r\n\t\ta.imageTilesReady = delegateCombine(a.imageTilesReady, runOn(this, this.a5));\r\n\t\tthis.ao.al = this.deferralHandler;\r\n\t\tlet b = this.ao;\r\n\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.a4));\r\n\t\tlet c = this.ao;\r\n\t\tc.downloadingImage = delegateCombine(c.downloadingImage, runOn(this, this.a3));\r\n\t\tlet d = this.ao;\r\n\t\td.cancellingImage = delegateCombine(d.cancellingImage, runOn(this, this.a2));\r\n\t\tthis.ao.bf = this.referer;\r\n\t\tthis.ao.bj = this.userAgent;\r\n\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t}\r\n\tprivate a3(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tif (this.downloadingImage != null) {\r\n\t\t\tthis.downloadingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate a2(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tif (this.cancellingImage != null) {\r\n\t\t\tthis.cancellingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate bg(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.aj.e();\r\n\t\t}\r\n\t}\r\n\tprotected ba(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase GeographicMapImagery.$$p[3]:\r\n\t\t\tthis.bg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"GeographicMap\":\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[1]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bf = this.referer;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[2]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bj = this.userAgent;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[0]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n\t\t}\r\n\t}\r\n\twindowRect: Rect;\r\n\tget geographicMap(): XamGeographicMap {\r\n\t\treturn <XamGeographicMap>this.c(GeographicMapImagery.geographicMapProperty);\r\n\t}\r\n\tset geographicMap(a: XamGeographicMap) {\r\n\t\tthis.h(GeographicMapImagery.geographicMapProperty, a);\r\n\t}\r\n\tstatic readonly geographicMapProperty: DependencyProperty = DependencyProperty.i(\"GeographicMap\", (<any>XamGeographicMap).$, (<any>GeographicMapImagery).$, new PropertyMetadata(2, null, GeographicMapImagery.a8));\r\n\tprivate static a8(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<GeographicMapImagery>a).a7(<XamGeographicMap>b.oldValue, <XamGeographicMap>b.newValue);\r\n\t}\r\n\tprivate a7(a: XamGeographicMap, b: XamGeographicMap): void {\r\n\t\tthis.ba(\"GeographicMap\", a, b);\r\n\t}\r\n\tclearTileCache(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.bs(0, 0, 0, 0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate an: XamMultiScaleImage = null;\r\n\tget ao(): XamMultiScaleImage {\r\n\t\treturn this.an;\r\n\t}\r\n\tset ao(a: XamMultiScaleImage) {\r\n\t\tthis.an = a;\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(\"MultiScaleImage\"));\r\n\t\t}\r\n\t}\r\n\tap: XamMultiScaleTileSource = null;\r\n\tpropertyChanged: (sender: any, e: PropertyChangedEventArgs) => void = null;\r\n\tbn(a: Size): Size {\r\n\t\tif (this.geographicMap == null || a.width < 1 || a.height < 1) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tlet b = new Rect(0, 0, 0, a.width, a.height);\r\n\t\tlet c = this.geographicMap.ut(b);\r\n\t\tlet d: Rect = XamGeographicMap.uk;\r\n\t\tlet e: Rect = this.geographicMap.uo;\r\n\t\tlet f: number = Math.min(this.windowRect.height, this.windowRect.width);\r\n\t\tlet g: number = e.width / d.width;\r\n\t\tthis.ao.a5 = (b.width / c.width) * f * g;\r\n\t\tlet h: NumericXAxis = this.geographicMap.sn;\r\n\t\tlet i: NumericYAxis = this.geographicMap.sp;\r\n\t\tlet j: ScalerParams = new ScalerParams(1, this.windowRect, b, h.cf);\r\n\t\tj.c = c;\r\n\t\tlet k: ScalerParams = new ScalerParams(1, this.windowRect, b, i.cf);\r\n\t\tk.c = c;\r\n\t\tlet l: number = h.ef(d.left, j);\r\n\t\tlet m: number = i.ef(d.bottom, k);\r\n\t\tlet n: number = (-l / b.width) * this.ao.a5;\r\n\t\tlet o: number = (-m / b.height) * this.ao.a5 * (b.height / b.width);\r\n\t\tthis.ao.cm = <Point>{ $type: Point_$type, x: n, y: o };\r\n\t\treturn a;\r\n\t}\r\n\tbd(a: RenderingContext): void {\r\n\t\tthis.aj.f(a);\r\n\t}\r\n\tbf(a: Rect): void {\r\n\t\tthis.aj.h(a);\r\n\t}\r\n\tbe(a: DomRenderer): void {\r\n\t\tthis.aj.g(a);\r\n\t}\r\n\timagesChanged: (sender: any, e: ImagesChangedEventArgs) => void = null;\r\n\tprivate a4(a: any, b: EventArgs): void {\r\n\t\tif (this.imagesChanged != null) {\r\n\t\t\tthis.imagesChanged(this, new ImagesChangedEventArgs());\r\n\t\t}\r\n\t}\r\n\ta6(): void {\r\n\t\tthis.aj.e();\r\n\t}\r\n\tbc(a: number): void {\r\n\t\tthis.aj.i(a);\r\n\t}\r\n\tprotected v(): void {\r\n\t\tsuper.v();\r\n\t\tthis.ap.o = this._opacity;\r\n\t}\r\n\tcancellingImage: (sender: any, args: CancellingMultiScaleImageEventArgs) => void = null;\r\n\tdownloadingImage: (sender: any, args: DownloadingMultiScaleImageEventArgs) => void = null;\r\n\treferer: string;\r\n\tisHorizontalWrappingEnabled: boolean;\r\n\tuserAgent: string;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMapImagery, 'ba', [ 'IsHorizontalWrappingEnabled', [ 0, false ], 'Referer', [ 2, null ], 'UserAgent', [ 2, null ], 'WindowRect', [ (<any>Rect).$, Rect.empty ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicMapImageryView extends Base {\r\n\tstatic $t: Type = markType(GeographicMapImageryView, 'GeographicMapImageryView');\r\n\tconstructor(a: GeographicMapImagery) {\r\n\t\tsuper();\r\n\t\tthis.j = Rect.empty;\r\n\t\tthis.a = a;\r\n\t\tthis.a.ao = new XamMultiScaleImage();\r\n\t\tthis.a.ao.ao = this.a.ap;\r\n\t\tthis.a.a9();\r\n\t}\r\n\tprotected a: GeographicMapImagery = null;\r\n\te(): void {\r\n\t\tif (this.j.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.a.bn(new Size(1, this.j.width, this.j.height));\r\n\t}\r\n\tprotected j: Rect = null;\r\n\tf(a: RenderingContext): void {\r\n\t\tthis.a.ao.b1(a);\r\n\t}\r\n\tprivate d: DomRenderer = null;\r\n\tg(a: DomRenderer): void {\r\n\t\tthis.d = a;\r\n\t\tthis.a.ao.b2(a);\r\n\t}\r\n\th(a: Rect): void {\r\n\t\tthis.j = a;\r\n\t\tthis.a.ao.b3(a);\r\n\t\tthis.a.a6();\r\n\t}\r\n\tprivate b: number = 1;\r\n\tget c(): number {\r\n\t\treturn this.b;\r\n\t}\r\n\ti(a: number): void {\r\n\t\tthis.b = a;\r\n\t\tthis.a.ao.bz(a);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicXYTriangulatingSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeriesView, 'GeographicXYTriangulatingSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicXYTriangulatingSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprotected ce: GeographicXYTriangulatingSeries = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a = <ScatterTriangulationSeries>this.ce.pt;\r\n\t\ta.qp = this.ce.p5;\r\n\t\ta.qt = this.ce.p3;\r\n\t\ta.trianglesSource = this.ce.p2;\r\n\t\ta.qh = this.ce.p8;\r\n\t\ta.qj = this.ce.qa;\r\n\t\ta.ql = this.ce.qc;\r\n\t}\r\n\tch(): void {\r\n\t\tlet a = <ScatterTriangulationSeries>this.ce.pt;\r\n\t\tif (this.ce.cb == null) {\r\n\t\t\ta.pr = null;\r\n\t\t\ta.ps = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.pr = (<XamGeographicMap>this.ce.cb).sn;\r\n\t\ta.ps = (<XamGeographicMap>this.ce.cb).sp;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.pt).qp = this.ce.p5;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.pt).qt = this.ce.p3;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.pt).trianglesSource = this.ce.p2;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.pt).qh = this.ce.p8;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.pt).qj = this.ce.qa;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.pt).ql = this.ce.qc;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeriesView, 'GeographicScatterAreaSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicScatterAreaSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cm = a;\r\n\t}\r\n\tprivate cm: GeographicScatterAreaSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tif (this.cm.qn != null) {\r\n\t\t\tthis.cm.qn.rk = this.cm.qr;\r\n\t\t\tthis.cm.qn.rc = this.cm.qm;\r\n\t\t}\r\n\t}\r\n\tcn(): void {\r\n\t\tif (this.cm.qn != null) {\r\n\t\t\tthis.cm.qn.rk = this.cm.qr;\r\n\t\t}\r\n\t}\r\n\tco(): void {\r\n\t\tif (this.cm.qn != null) {\r\n\t\t\tthis.cm.qn.rc = this.cm.qm;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMapView extends SeriesViewerView {\r\n\tstatic $t: Type = markType(XamGeographicMapView, 'XamGeographicMapView', (<any>SeriesViewerView).$);\r\n\tconstructor(a: XamGeographicMap) {\r\n\t\tsuper(a);\r\n\t\tthis.fz = Rect.empty;\r\n\t\tthis.fn = a;\r\n\t\tthis.fn.q2 = 2;\r\n\t\tthis.fn.g0 = 5E-06;\r\n\t}\r\n\tm(a: boolean): InteractionState {\r\n\t\treturn 2;\r\n\t}\r\n\tbk(a: boolean): void {\r\n\t\tthis.j.bv(a);\r\n\t\tthis.fn.ts(a);\r\n\t\tthis.el();\r\n\t}\r\n\tprotected fn: XamGeographicMap = null;\r\n\tprotected get_ap(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\td4(): void {\r\n\t\tlet a: BrushCollection;\r\n\t\tlet b: BrushCollection;\r\n\t\tlet c: Brush;\r\n\t\tlet d: FontInfo;\r\n\t\tlet e: Brush;\r\n\t\tlet f = this.j.a7(a, b, c, d, e);\r\n\t\ta = f.p0;\r\n\t\tb = f.p1;\r\n\t\tc = f.p2;\r\n\t\td = f.p3;\r\n\t\te = f.p4;\r\n\t\tthis.fx = c;\r\n\t\tthis.fo = d;\r\n\t\tthis.fw = e;\r\n\t\tlet g = this.j.e();\r\n\t\tthis.fn.ag = g.a;\r\n\t\tthis.fn.aj = g.f;\r\n\t\tthis.fn.ah = g.b != null ? g.b : new BrushCollection();\r\n\t\tthis.fn.ai = g.c != null ? g.c : new BrushCollection();\r\n\t\tif (this.fn.ah.count == 0) {\r\n\t\t\tfor (let h = 0; h < g.a.count; h++) {\r\n\t\t\t\tthis.fn.ah.add(g.a.item(h));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (g.c.count == 0) {\r\n\t\t\tfor (let i = 0; i < g.f.count; i++) {\r\n\t\t\t\tthis.fn.ai.add(g.f.item(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdu(a: RenderingContext): void {\r\n\t\tsuper.du(a);\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.be(this.j.ae);\r\n\t\t\tb.bd(a);\r\n\t\t}\r\n\t}\r\n\tprotected fz: Rect = null;\r\n\tprotected dv(a: Rect): void {\r\n\t\tsuper.dv(a);\r\n\t\tthis.fz = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.bf(this.fz);\r\n\t\t}\r\n\t}\r\n\tfy(): Rect {\r\n\t\treturn new Rect(0, 0, 0, this.fz.width, this.fz.height);\r\n\t}\r\n\tfs(): void {\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet a: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\ta.a6();\r\n\t\t}\r\n\t}\r\n\tfx: Brush = null;\r\n\tfw: Brush = null;\r\n\tfo: FontInfo = null;\r\n\tfr(a: Rect): void {\r\n\t\tif (this.fn.ss != null) {\r\n\t\t\tthis.fn.ss.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tfu(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.fn.ss != null) {\r\n\t\t\tthis.fn.ss.windowRect = this.fn.r0;\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\tlet c = a.ao;\r\n\t\t\tif (c != null) {\r\n\t\t\t\tthis.fn.al.e.remove(c.ag);\r\n\t\t\t}\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tlet d = b.ao;\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.fn.al.e.add(d.ag);\r\n\t\t\t}\r\n\t\t\tif (!this.fz.isEmpty) {\r\n\t\t\t\tthis.dv(this.fz);\r\n\t\t\t}\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tthis.du(this.w);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.ft(this.w);\r\n\t\t}\r\n\t}\r\n\tprivate ft(a: RenderingContext): void {\r\n\t\tlet b = this.fn.fy;\r\n\t\tif (b != 1) {\r\n\t\t\ta.z();\r\n\t\t\ta.aa(b, b);\r\n\t\t}\r\n\t\ta.k(this.fz.left, this.fz.top, this.fz.width, this.fz.height);\r\n\t\tif (b != 1) {\r\n\t\t\ta.y();\r\n\t\t}\r\n\t}\r\n\tprotected d1(): void {\r\n\t\tthis.fd.ac = Defaults.j;\r\n\t\tthis.fe.ac = Defaults.j;\r\n\t\tthis.fd._stroke = Defaults.ae;\r\n\t\tthis.fe._stroke = Defaults.ae;\r\n\t\tsuper.d1();\r\n\t}\r\n\tfv(a: number): void {\r\n\t\tthis.fp = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\t(<GeographicMapImagery>this.fn.backgroundContent).bc(a);\r\n\t\t}\r\n\t}\r\n\tprivate fp: number = NaN;\r\n\tget fq(): number {\r\n\t\treturn this.fp;\r\n\t}\r\n\tset fq(a: number) {\r\n\t\tthis.fp = a;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class OpenStreetMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(OpenStreetMapImagery, 'OpenStreetMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new OpenStreetMapTileSource());\r\n\t}\r\n\tget tilePath(): string {\r\n\t\treturn <string>this.c(OpenStreetMapImagery.tilePathProperty);\r\n\t}\r\n\tset tilePath(a: string) {\r\n\t\tthis.h(OpenStreetMapImagery.tilePathProperty, a);\r\n\t}\r\n\tstatic readonly tilePathProperty: DependencyProperty = DependencyProperty.i(\"TilePath\", String_$type, (<any>OpenStreetMapImagery).$, new PropertyMetadata(2, null, OpenStreetMapImagery.br));\r\n\tprivate static br(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<OpenStreetMapImagery>a).bq(\"TilePath\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bq(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase \"TilePath\":\r\n\t\t\t(<OpenStreetMapTileSource>this.ap).setTilePathUrl(c == null ? null : <string>c);\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicXYTriangulatingSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeries, 'GeographicXYTriangulatingSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new GeographicXYTriangulatingSeriesView(this);\r\n\t}\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.p1 = <GeographicXYTriangulatingSeriesView>a;\r\n\t}\r\n\tp1: GeographicXYTriangulatingSeriesView;\r\n\tp5: string;\r\n\tp3: string;\r\n\tp2: IEnumerable;\r\n\tp8: string;\r\n\tqa: string;\r\n\tqc: string;\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.p1.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[1]:\r\n\t\t\tthis.p1.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[0]:\r\n\t\t\tthis.p1.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[2]:\r\n\t\t\tthis.p1.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[3]:\r\n\t\t\tthis.p1.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[4]:\r\n\t\t\tthis.p1.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[5]:\r\n\t\t\tthis.p1.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicXYTriangulatingSeries, 'raisePropertyChanged', [ 'LatitudeMemberPath:p3:qe', [ 2, \"pointY\" ], 'LongitudeMemberPath:p5:qf', [ 2, \"pointX\" ], 'TrianglesSource:p2:qg', [ IEnumerable_$type, null ], 'TriangleVertexMemberPath1:p8:qh', [ 2, \"v1\" ], 'TriangleVertexMemberPath2:qa:qi', [ 2, \"v2\" ], 'TriangleVertexMemberPath3:qc:qj', [ 2, \"v3\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeries, 'GeographicScatterAreaSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_c9(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicScatterAreaSeries).$;\r\n\t}\r\n\tqr: string;\r\n\tprivate qk: ColorScale = null;\r\n\tget qm(): ColorScale {\r\n\t\treturn this.qk;\r\n\t}\r\n\tset qm(a: ColorScale) {\r\n\t\tlet b: boolean = this.qk != a;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.qk;\r\n\t\t\tif (this.qk != null) {\r\n\t\t\t\tlet d = this.qk;\r\n\t\t\t\td.propertyChanged = delegateRemove(d.propertyChanged, runOn(this, this.qu));\r\n\t\t\t}\r\n\t\t\tthis.qk = a;\r\n\t\t\tif (this.qk != null) {\r\n\t\t\t\tlet e = this.qk;\r\n\t\t\t\te.propertyChanged = delegateCombine(e.propertyChanged, runOn(this, this.qu));\r\n\t\t\t}\r\n\t\t\tthis.raisePropertyChanged(\"ColorScale\", c, this.qk);\r\n\t\t\tif (this.qn != null) {\r\n\t\t\t\tthis.qn.rc = a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate qu(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tthis.qp.co();\r\n\t\tthis.qw();\r\n\t\tthis.l7(false);\r\n\t}\r\n\tqw(): void {\r\n\t\tif (this.qn != null) {\r\n\t\t\tthis.ql = this.qn.rb;\r\n\t\t}\r\n\t}\r\n\tql: ColorScale;\r\n\tprotected mk(): void {\r\n\t\tsuper.mk();\r\n\t\tthis.qw();\r\n\t}\r\n\tqn: ScatterAreaSeries;\r\n\tprotected ps(): Series {\r\n\t\tthis.qn = new ScatterAreaSeries();\r\n\t\tlet a = this.qn;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.qv));\r\n\t\treturn this.qn;\r\n\t}\r\n\tprivate qv(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new GeographicScatterAreaSeriesView(this);\r\n\t}\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.qp = <GeographicScatterAreaSeriesView>a;\r\n\t}\r\n\tqp: GeographicScatterAreaSeriesView;\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicScatterAreaSeries.$$p[1]:\r\n\t\t\tthis.qp.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ColorScale\":\r\n\t\t\tthis.qp.co();\r\n\t\t\tthis.qw();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tprotected get_ez(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_ez(a: boolean): void {\r\n\t\tsuper.set_ez(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicScatterAreaSeries, 'raisePropertyChanged', [ 'ActualColorScale:ql:qx', [ (<any>ColorScale).$, null ], 'ColorMemberPath:qr:qy', [ 2, \"value\" ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGetTileImageUriArgs } from \"igniteui-core/igc-get-tile-image-uri-args\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { CustomMapImagery as CustomMapImagery_internal } from \"./CustomMapImagery\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcCustomMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : CustomMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t    private _getTileImageUri: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void = null;\r\n\t    private _getTileImageUri_wrapped: any = null;\r\n\t/**\r\n\t * Raised when URI for tiles should be provided\r\n\t*/\r\n\t\r\n\tpublic get getTileImageUri(): (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void {\r\n\treturn this._getTileImageUri;\r\n\t}\r\n\t    public set getTileImageUri(ev: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void) {\r\n\t        if (this._getTileImageUri_wrapped !== null) {\r\n\t            this.i.getTileImageUri = delegateRemove(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t            this._getTileImageUri_wrapped = null;\r\n\t            this._getTileImageUri = null;\r\n\t        }\r\n\t\r\n\t        this._getTileImageUri = ev;\r\n\t        this._getTileImageUri_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcGetTileImageUriArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeGetTileImageUri) {\r\n\t                        (this as any).beforeGetTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._getTileImageUri) {\r\n\t    this._getTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.getTileImageUri = delegateCombine(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { CustomMapTileSource } from \"igniteui-core/CustomMapTileSource\";\r\nimport { Base, runOn, delegateCombine, Type, markType } from \"igniteui-core/type\";\r\nimport { GetTileImageUriArgs } from \"igniteui-core/GetTileImageUriArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CustomMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(CustomMapImagery, 'CustomMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor(a: CustomMapTileSource) {\r\n\t\tsuper(a);\r\n\t\ta.getTileImageUri = delegateCombine(a.getTileImageUri, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: GetTileImageUriArgs): void {\r\n\t\tthis.bp(b);\r\n\t}\r\n\tprotected bp(a: GetTileImageUriArgs): void {\r\n\t\tif (this.getTileImageUri != null) {\r\n\t\t\tthis.getTileImageUri(this, a);\r\n\t\t}\r\n\t}\r\n\tgetTileImageUri: (sender: any, e: GetTileImageUriArgs) => void = null;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcCustomMapImagery } from './igc-custom-map-imagery';\r\nimport { CustomMapImagery } from './CustomMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcCustomMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcCustomMapImagery\", IgcCustomMapImagery);\r\n        TypeRegistrar.register(\"CustomMapImagery\", (<any>CustomMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { OpenStreetMapImagery as OpenStreetMapImagery_internal } from \"./OpenStreetMapImagery\";\r\n\r\n/**\r\n * UI element class used to display OpenStreetMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcOpenStreetMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : OpenStreetMapImagery_internal\r\n{\r\n\treturn new OpenStreetMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : OpenStreetMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the tile path URL.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcOpenStreetMapImagery } from './igc-open-street-map-imagery';\r\nimport { OpenStreetMapImagery } from './OpenStreetMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcOpenStreetMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcOpenStreetMapImagery\", IgcOpenStreetMapImagery);\r\n        TypeRegistrar.register(\"OpenStreetMapImagery\", (<any>OpenStreetMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { ITileGenerator, ITileGenerator_$type } from \"igniteui-core/ITileGenerator\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { TileGeneratorTileSource } from \"igniteui-core/TileGeneratorTileSource\";\r\nimport { Base, Type, runOn, delegateCombine, markType, markDep } from \"igniteui-core/type\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"igniteui-core/TileImageCreatedEventArgs\";\r\nimport { TileImageZoomChangingEventArgs } from \"igniteui-core/TileImageZoomChangingEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { stringReplace } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileGeneratorMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(TileGeneratorMapImagery, 'TileGeneratorMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new TileGeneratorTileSource());\r\n\t\tthis.downloadingImage = delegateCombine(this.downloadingImage, runOn(this, this.br));\r\n\t\tthis.cancellingImage = delegateCombine(this.cancellingImage, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.cancelTile(d, e, f);\r\n\t\t}\r\n\t}\r\n\tprivate br(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tb.uri = null;\r\n\t\tlet img_ = b.image;\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.getTile(d, e, f, (g: any, h: TileImageCreatedEventArgs) => this.deferralHandler.deferAction(() => img_.src = h.url), (g: any, h: TileImageCreatedEventArgs) => {\r\n\t\t\t}, (g: any, h: TileImageZoomChangingEventArgs) => {\r\n\t\t\t}, img_);\r\n\t\t}\r\n\t}\r\n\ttileGenerator: ITileGenerator;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, TileGeneratorMapImagery, 'ba', [ 'TileGenerator', [ ITileGenerator_$type, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { TileGeneratorMapImagery as TileGeneratorMapImagery_internal } from \"./TileGeneratorMapImagery\";\r\nimport { ITileGenerator } from \"igniteui-core/ITileGenerator\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcTileGeneratorMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : TileGeneratorMapImagery_internal\r\n{\r\n\treturn new TileGeneratorMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileGeneratorMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget tileGenerator() : ITileGenerator {\r\n\t\treturn this.i.tileGenerator as ITileGenerator;\r\n\t}\r\n\tset tileGenerator(v: ITileGenerator) {\r\n\t                                        this.i.tileGenerator = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileGeneratorMapImagery } from './igc-tile-generator-map-imagery';\r\nimport { TileGeneratorMapImagery } from './TileGeneratorMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileGeneratorMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTileGeneratorMapImagery\", IgcTileGeneratorMapImagery);\r\n        TypeRegistrar.register(\"TileGeneratorMapImagery\", (<any>TileGeneratorMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, EventArgs, runOn, delegateRemove, delegateCombine, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicTileSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicTileSeries, 'GeographicTileSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_ee(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicTileSeries).$;\r\n\t}\r\n\tget q1(): GeographicMapImagery {\r\n\t\treturn this.q0;\r\n\t}\r\n\tset q1(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.q1;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.q1;\r\n\t\t\tthis.q0 = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate q0: GeographicMapImagery = null;\r\n\tq5(): void {\r\n\t\tif (this.q1 != null) {\r\n\t\t\tthis.q1.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\tif (this.pt != null) {\r\n\t\t\t\t(<TileSeries>this.pt).si = this.q1;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate qz: TileSeries = null;\r\n\tprotected py(): void {\r\n\t\tsuper.py();\r\n\t\t(<TileSeries>this.pt).si = this.q1;\r\n\t\tif (this.qz != null) {\r\n\t\t\tlet a = this.qz;\r\n\t\t\ta.imageTilesReady = delegateRemove(a.imageTilesReady, runOn(this, this.q4));\r\n\t\t}\r\n\t\tthis.qz = <TileSeries>this.pt;\r\n\t\tif (this.qz != null) {\r\n\t\t\tlet b = this.qz;\r\n\t\t\tb.imageTilesReady = delegateCombine(b.imageTilesReady, runOn(this, this.q4));\r\n\t\t}\r\n\t}\r\n\tprotected ps(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate q4(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicTileSeries } from \"./GeographicTileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.\r\n*/\r\nexport class IgcGeographicTileSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicTileSeries\r\n{\r\n\treturn new GeographicTileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicTileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicTileSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.ee as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        if (this.i.q1 == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (this.i.q1 as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.q1 = null : this.i.q1 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.q5();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcTileSeriesModule } from './igc-tile-series-module';\r\n\r\nimport { IgcGeographicTileSeriesComponent } from './igc-geographic-tile-series-component';\r\nimport { GeographicTileSeries } from './GeographicTileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicTileSeriesModule {\r\n    public static register(): void {\r\nIgcTileSeriesModule.register();\r\n        IgcGeographicTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicTileSeriesComponent\", IgcGeographicTileSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicTileSeries\", (<any>GeographicTileSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcColorScaleComponent } from \"igniteui-charts/igc-color-scale-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicScatterAreaSeries } from \"./GeographicScatterAreaSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.\r\n*/\r\nexport class IgcGeographicScatterAreaSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicScatterAreaSeries\r\n{\r\n\treturn new GeographicScatterAreaSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicScatterAreaSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicScatterAreaSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicScatterAreaSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-scatter-area-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicScatterAreaSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicScatterAreaSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicScatterAreaSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicScatterAreaSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows an area shape.\r\n\t*/\r\n\tget isArea() : boolean {\r\n\t\treturn (this.i.c9 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.\r\n\t*/\r\n\tget colorMemberPath() : string {\r\n\t\treturn (this.i.qr as string);\r\n\t}\r\n\tset colorMemberPath(v: string) {\r\n\t\tthis.i.qr = v;\r\n\t}\r\n\t/**\r\n\t * The ColorScale used to resolve the color values of points in the series.\r\n\t*/\r\n\tget colorScale() : IgcColorScaleComponent {\r\n\t                                        if (this.i.qm == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.qm as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(this.i.qm);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.qm;\r\n\t                                            }\r\n\t                                            (this.i.qm as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.qm as any).externalObject;\r\n\t}\r\n\tset colorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.qm = null : this.i.qm = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual color scale that is set on ColorScale property or default ColorScale\r\n\t*/\r\n\tget actualColorScale() : IgcColorScaleComponent {\r\n\t                                        if (this.i.ql == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.ql as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(this.i.ql);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.ql;\r\n\t                                            }\r\n\t                                            (this.i.ql as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.ql as any).externalObject;\r\n\t}\r\n\tset actualColorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.ql = null : this.i.ql = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.colorScale && (this.colorScale as any).name && (this.colorScale as any).name == name) { return this.colorScale; }\r\n\tif (this.actualColorScale && (this.actualColorScale as any).name && (this.actualColorScale as any).name == name) { return this.actualColorScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.colorScale && (this.colorScale as any)._styling) {\r\n\t    (this.colorScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualColorScale && (this.actualColorScale as any)._styling) {\r\n\t    (this.actualColorScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t/**\r\n\t * Updates ActualColorScale properties using HostedSeries's ColorScale properties\r\n\t\r\n\t*/\r\n\tpublic updateActualColorScale() {\r\n\t\tthis.i.qw();\r\n\t}\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterAreaSeriesModule } from 'igniteui-charts/igc-scatter-area-series-module';\r\n\r\nimport { IgcGeographicScatterAreaSeriesComponent } from './igc-geographic-scatter-area-series-component';\r\nimport { GeographicScatterAreaSeries } from './GeographicScatterAreaSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicScatterAreaSeriesModule {\r\n    public static register(): void {\r\nIgcScatterAreaSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicScatterAreaSeriesComponent\", IgcGeographicScatterAreaSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicScatterAreaSeries\", (<any>GeographicScatterAreaSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcShapeSeriesBaseComponent } from \"igniteui-charts/igc-shape-series-base-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a tile series class that can render imagery tiles\r\n*/\r\nexport class IgcTileSeriesComponent extends IgcShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : TileSeries\r\n{\r\n\treturn new TileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcTileSeriesComponent.htmlTagName,\r\n\t                            IgcTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.ee as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        if (this.i.si == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (this.i.si as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.si = null : this.i.si = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Defers rendering of the series\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileSeriesComponent } from './igc-tile-series-component';\r\nimport { TileSeries } from './TileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileSeriesModule {\r\n    public static register(): void {\r\n        IgcTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTileSeriesComponent\", IgcTileSeriesComponent);\r\n        TypeRegistrar.register(\"TileSeries\", (<any>TileSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcGeographicShapeSeriesModule } from './igc-geographic-shape-series-module';\r\nimport { IgcGeographicPolylineSeriesModule } from './igc-geographic-polyline-series-module';\r\nimport { IgcTileGeneratorMapImageryModule } from './igc-tile-generator-map-imagery-module';\r\nimport { IgcHeatTileGeneratorModule } from 'igniteui-core/igc-heat-tile-generator-module';\r\nimport { IgcGeographicTileSeriesModule } from './igc-geographic-tile-series-module';\r\nimport { IgcSizeScaleModule } from 'igniteui-charts/igc-size-scale-module';\r\nimport { IgcValueBrushScaleModule } from 'igniteui-charts/igc-value-brush-scale-module';\r\nimport { IgcCustomPaletteColorScaleModule } from 'igniteui-charts/igc-custom-palette-color-scale-module';\r\nimport { IgcGeographicProportionalSymbolSeriesModule } from './igc-geographic-proportional-symbol-series-module';\r\nimport { IgcGeographicSymbolSeriesModule } from './igc-geographic-symbol-series-module';\r\nimport { IgcGeographicScatterAreaSeriesModule } from './igc-geographic-scatter-area-series-module';\r\nimport { IgcGeographicHighDensityScatterSeriesModule } from './igc-geographic-high-density-scatter-series-module';\r\nimport { IgcGeographicContourLineSeriesModule } from './igc-geographic-contour-line-series-module';\r\nimport { IgcGeographicMapCoreModule } from './igc-geographic-map-core-module';\r\nimport { IgcShapeDataSourceModule } from 'igniteui-core/igc-shape-data-source-module';\r\n\r\n\r\nexport class IgcGeographicMapModule {\r\n    public static register() {\r\n                IgcGeographicShapeSeriesModule.register();\r\n        IgcGeographicPolylineSeriesModule.register();\r\n        IgcTileGeneratorMapImageryModule.register();\r\n        IgcHeatTileGeneratorModule.register();\r\n        IgcGeographicTileSeriesModule.register();\r\n        IgcSizeScaleModule.register();\r\n        IgcValueBrushScaleModule.register();\r\n        IgcCustomPaletteColorScaleModule.register();\r\n        IgcGeographicProportionalSymbolSeriesModule.register();\r\n        IgcGeographicSymbolSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesModule.register();\r\n        IgcGeographicContourLineSeriesModule.register();\r\n        IgcGeographicMapCoreModule.register();\r\n        IgcShapeDataSourceModule.register();\r\n\r\n    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nexport {HostSeriesView} from \"./GeographicMapSeriesHost_combined\"\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImagesChangedEventArgs as ImagesChangedEventArgs_internal } from \"./ImagesChangedEventArgs\";\r\n\r\nexport class IgcImagesChangedEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImagesChangedEventArgs_internal\r\n{\r\n\treturn new ImagesChangedEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImagesChangedEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapComponent } from \"./igc-geographic-map-component\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcImagesChangedEventArgs } from \"./igc-images-changed-event-args\";\r\nimport { IgcCancellingMultiScaleImageEventArgs } from \"igniteui-core/igc-cancelling-multi-scale-image-event-args\";\r\nimport { IgcDownloadingMultiScaleImageEventArgs } from \"igniteui-core/igc-downloading-multi-scale-image-event-args\";\r\nimport { GeographicMapImagery as GeographicMapImagery_internal } from \"./GeographicMapImagery\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { fromRect, toRect, ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Control class used for displaying multi-scale TileSource imagery.  Designed to be used for background imagery in the IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : GeographicMapImagery_internal\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : GeographicMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\t/**\r\n\t * The deferral handler to use for deferred refreshes.\r\n\t*/\r\n\tget deferralHandler() : IMapRenderDeferralHandler {\r\n\t\treturn this.i.deferralHandler as IMapRenderDeferralHandler;\r\n\t}\r\n\tset deferralHandler(v: IMapRenderDeferralHandler) {\r\n\t                                        this.i.deferralHandler = v;\r\n\t}\r\n\t/**\r\n\t * A rectangle representing the portion of the map imagery currently in view.\r\n\t * A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.\r\n\t*/\r\n\tget windowRect() : IgRect {\r\n\t\treturn fromRect(this.i.windowRect);\r\n\t}\r\n\tset windowRect(v: IgRect) {\r\n\t\tthis.i.windowRect = toRect(v);\r\n\t}\r\n\t/**\r\n\t * The IgxGeographicMapComponent which is hosting this GeographicMapImagery control.\r\n\t*/\r\n\tget geographicMap() : IgcGeographicMapComponent {\r\n\t                                        if (this.i.geographicMap == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (this.i.geographicMap as any).externalObject;\r\n\t}\r\n\tset geographicMap(v: IgcGeographicMapComponent) {\r\n\t\tv == null ? this.i.geographicMap = null : this.i.geographicMap = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the referer sent in the headers of the tile request.\r\n\t*/\r\n\tget referer() : string {\r\n\t\treturn (this.i.referer as string);\r\n\t}\r\n\tset referer(v: string) {\r\n\t\tthis.i.referer = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets if horizontal wrapping is enabled for the imagery.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.isHorizontalWrappingEnabled as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.isHorizontalWrappingEnabled = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserAgent sent in the headers of the tile request.\r\n\t*/\r\n\tget userAgent() : string {\r\n\t\treturn (this.i.userAgent as string);\r\n\t}\r\n\tset userAgent(v: string) {\r\n\t\tthis.i.userAgent = v;\r\n\t}\r\n\tget opacity() : number {\r\n\t\treturn (this.i.opacity as number);\r\n\t}\r\n\tset opacity(v: number) {\r\n\t\tthis.i.opacity = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\tif (this.geographicMap && (this.geographicMap as any).name && (this.geographicMap as any).name == name) { return this.geographicMap; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.clearTileCache();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when the image tiles have been downloaded.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t    }\r\n\t\r\n\t    private _imagesChanged: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void = null;\r\n\t    private _imagesChanged_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when tile images have changed.\r\n\t*/\r\n\t\r\n\tpublic get imagesChanged(): (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void {\r\n\treturn this._imagesChanged;\r\n\t}\r\n\t    public set imagesChanged(ev: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void) {\r\n\t        if (this._imagesChanged_wrapped !== null) {\r\n\t            this.i.imagesChanged = delegateRemove(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t            this._imagesChanged_wrapped = null;\r\n\t            this._imagesChanged = null;\r\n\t        }\r\n\t\r\n\t        this._imagesChanged = ev;\r\n\t        this._imagesChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImagesChangedEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImagesChanged) {\r\n\t                        (this as any).beforeImagesChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imagesChanged) {\r\n\t    this._imagesChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imagesChanged = delegateCombine(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t    }\r\n\t\r\n\t    private _cancellingImage: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void = null;\r\n\t    private _cancellingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get cancellingImage(): (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void {\r\n\treturn this._cancellingImage;\r\n\t}\r\n\t    public set cancellingImage(ev: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._cancellingImage_wrapped !== null) {\r\n\t            this.i.cancellingImage = delegateRemove(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t            this._cancellingImage_wrapped = null;\r\n\t            this._cancellingImage = null;\r\n\t        }\r\n\t\r\n\t        this._cancellingImage = ev;\r\n\t        this._cancellingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcCancellingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeCancellingImage) {\r\n\t                        (this as any).beforeCancellingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._cancellingImage) {\r\n\t    this._cancellingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.cancellingImage = delegateCombine(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t    }\r\n\t\r\n\t    private _downloadingImage: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void = null;\r\n\t    private _downloadingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get downloadingImage(): (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void {\r\n\treturn this._downloadingImage;\r\n\t}\r\n\t    public set downloadingImage(ev: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._downloadingImage_wrapped !== null) {\r\n\t            this.i.downloadingImage = delegateRemove(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t            this._downloadingImage_wrapped = null;\r\n\t            this._downloadingImage = null;\r\n\t        }\r\n\t\r\n\t        this._downloadingImage = ev;\r\n\t        this._downloadingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcDownloadingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeDownloadingImage) {\r\n\t                        (this as any).beforeDownloadingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._downloadingImage) {\r\n\t    this._downloadingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.downloadingImage = delegateCombine(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Base, Point, Type, typeCast, Number_$type, runOn, delegateRemove, delegateCombine, markType, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { SeriesPointOfInterest } from \"igniteui-charts/SeriesPointOfInterest\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { HighlightingInfo } from \"igniteui-charts/HighlightingInfo\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { RectChangedEventArgs } from \"igniteui-core/RectChangedEventArgs\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { DataContext } from \"igniteui-core/DataContext\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { Visibility } from \"igniteui-core/Visibility\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapSeriesHost extends Series {\r\n\tstatic $t: Type = markType(GeographicMapSeriesHost, 'GeographicMapSeriesHost', (<any>Series).$);\r\n\tk9(): void {\r\n\t\tsuper.k9();\r\n\t\tif (this.pt != null) {\r\n\t\t\tthis.pt.k9();\r\n\t\t}\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.pt = this.ps();\r\n\t}\r\n\tprivate pr: Series = null;\r\n\tprotected get_dr(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\thn(a: any, b: string): any {\r\n\t\tlet c = this.jf(b);\r\n\t\tif (c == \"LatitudeMemberPath\") {\r\n\t\t\tc = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (c == \"LongitudeMemberPath\") {\r\n\t\t\tc = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.pt.hn(a, b);\r\n\t}\r\n\tcy(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number): boolean {\r\n\t\treturn this.pt.cy(a, b, c, d);\r\n\t}\r\n\tag(): Axis[] {\r\n\t\treturn this.pt.ag();\r\n\t}\r\n\tbe(): Series {\r\n\t\treturn this.pt;\r\n\t}\r\n\tget pt(): Series {\r\n\t\treturn this.pr;\r\n\t}\r\n\tset pt(a: Series) {\r\n\t\tlet b: boolean = this.pt != a;\r\n\t\tif (b) {\r\n\t\t\tthis.pr = a;\r\n\t\t\tthis.py();\r\n\t\t}\r\n\t}\r\n\tprotected get_hasMarkers(): boolean {\r\n\t\treturn this.pt.hasMarkers;\r\n\t}\r\n\tprotected py(): void {\r\n\t\tif (this.pr != null) {\r\n\t\t\tlet hostedSeries_ = this.pr;\r\n\t\t\t(<any>hostedSeries_).externalObject = TypeRegistrar.createFromInternal(hostedSeries_, PlatformConstants.Prefix, PlatformConstants.Postfix);\r\n\t\t\t(<any>hostedSeries_).externalObject._implementation = hostedSeries_;\r\n\t\t}\r\n\t\tthis.kt(this.pt);\r\n\t\tthis.pu.b2();\r\n\t}\r\n\tav(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.ax(this.pt, a, b, c);\r\n\t}\r\n\taw(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.ay(this.pt, a, b, c);\r\n\t}\r\n\thk(a: Point): any {\r\n\t\treturn this.hp(this.pt, a);\r\n\t}\r\n\tg9(a: Point, b: boolean): number {\r\n\t\treturn this.pt.g9(a, b);\r\n\t}\r\n\tg7(a: Point, b: boolean): number {\r\n\t\treturn this.pt.g7(a, b);\r\n\t}\r\n\tga(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.pt.ga(a, b, c);\r\n\t}\r\n\tpb(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.pt.pb(a, b, c);\r\n\t}\r\n\tpk(a: Point): Rect {\r\n\t\treturn this.pt.pk(a);\r\n\t}\r\n\tak(a: Point): Rect[] {\r\n\t\treturn this.pt.ak(a);\r\n\t}\r\n\tpl(a: Point): Rect {\r\n\t\treturn this.pt.pl(a);\r\n\t}\r\n\tal(a: Point): Rect[] {\r\n\t\treturn this.pt.al(a);\r\n\t}\r\n\tpm(a: Point): Rect {\r\n\t\treturn this.pt.pm(a);\r\n\t}\r\n\tpn(a: Point): Rect {\r\n\t\treturn this.pt.pn(a);\r\n\t}\r\n\tf6(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.pt.f6(a, b, c);\r\n\t}\r\n\to7(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.pt.o7(a, b, c);\r\n\t}\r\n\tf8(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.ga(a, b, c);\r\n\t}\r\n\to9(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.pt.o9(a, b, c);\r\n\t}\r\n\tpc(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.pt.pc(a, b, c);\r\n\t}\r\n\tgb(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.pt.gb(a, b, c);\r\n\t}\r\n\to8(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.pt.o8(a, b, c);\r\n\t}\r\n\tf7(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.pt.f7(a, b, c);\r\n\t}\r\n\tpa(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.pt.pa(a, b, c);\r\n\t}\r\n\tf9(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.pt.f9(a, b, c);\r\n\t}\r\n\tg4(a: Point): number {\r\n\t\treturn this.pt.g4(a);\r\n\t}\r\n\tf3(): number {\r\n\t\treturn this.pt.f3();\r\n\t}\r\n\tfz(a: Point): number {\r\n\t\treturn this.pt.fz(a);\r\n\t}\r\n\thl(a: Point): any {\r\n\t\treturn this.pt.hl(a);\r\n\t}\r\n\tprotected abstract ps(): Series;\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new HostSeriesView(this);\r\n\t}\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.pu = typeCast<HostSeriesView>((<any>HostSeriesView).$, a);\r\n\t}\r\n\tpu: HostSeriesView;\r\n\tstatic readonly p0: DependencyProperty = DependencyProperty.i(\"VisibleFromScale\", Number_$type, (<any>GeographicMapSeriesHost).$, new PropertyMetadata(2, 1, (a: DependencyObject, b: DependencyPropertyChangedEventArgs) => {\r\n\t\tlet c: GeographicMapSeriesHost = <GeographicMapSeriesHost>a;\r\n\t\tc.raisePropertyChanged(\"VisibleFromScale\", b.oldValue, b.newValue);\r\n\t}));\r\n\tget pv(): number {\r\n\t\treturn <number>this.c(GeographicMapSeriesHost.p0);\r\n\t}\r\n\tset pv(a: number) {\r\n\t\tthis.h(GeographicMapSeriesHost.p0, a);\r\n\t}\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.pt.cb = this.cb;\r\n\t\t\tif (c != null) {\r\n\t\t\t\t(<SeriesViewer>c).nr(this.pt);\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.cb.kp(this.pt);\r\n\t\t\t}\r\n\t\t\tthis.pt.lw(this.po);\r\n\t\t\tthis.pt.hc = this.hc;\r\n\t\t\tthis.kz(this.pt);\r\n\t\t\tthis.hf = this.pt.hf;\r\n\t\t\tlet e: SeriesViewer = typeCast<SeriesViewer>((<any>SeriesViewer).$, c);\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.pz));\r\n\t\t\t}\r\n\t\t\tif (this.cb != null) {\r\n\t\t\t\tlet f = this.cb;\r\n\t\t\t\tf.actualWindowRectChanged = delegateCombine(f.actualWindowRectChanged, runOn(this, this.pz));\r\n\t\t\t}\r\n\t\t\tthis.px();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SyncLink\":\r\n\t\t\tthis.pt.b6 = this.b6;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"VisibleFromScale\":\r\n\t\t\tthis.px();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Index\":\r\n\t\t\tthis.pt.hc = this.hc;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ItemsSource\":\r\n\t\t\tthis.pu.b3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Resolution\":\r\n\t\t\tthis.pu.ca();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"TransitionDuration\":\r\n\t\t\tthis.pu.cd();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Opacity\":\r\n\t\t\tthis.pu.b7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Visibility\":\r\n\t\t\tlet hs_ = this.pt;\r\n\t\t\tlet v_ = this._visibility;\r\n\t\t\ths_.visibility = v_;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MouseOverEnabled\":\r\n\t\t\tthis.pt.eh = this.eh;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ExpectFunctions\":\r\n\t\t\tthis.pt.expectFunctions = this.expectFunctions;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Thickness\":\r\n\t\t\tthis.pu.cc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Brush\":\r\n\t\t\tthis.pu.b1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Outline\":\r\n\t\t\tthis.pu.b9();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\t\t\tthis.pu.by();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\t\t\tthis.pu.bz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerFillOpacity\":\r\n\t\t\tif (!isNaN_(this.gh)) {\r\n\t\t\t\tthis.pu.b6();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"AreaFillOpacity\":\r\n\t\t\tif (!isNaN_(this.fs)) {\r\n\t\t\t\tthis.pu.b0();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"OutlineMode\":\r\n\t\t\tthis.pu.b8();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShowDefaultTooltip\":\r\n\t\t\tthis.pu.cb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Title\":\r\n\t\t\tthis.pt.hs = this.hs;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeMode\":\r\n\t\t\tthis.pu.b4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeShape\":\r\n\t\t\tthis.pu.b5();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Legend\":\r\n\t\t\tthis.pt.legend = this.legend;\r\n\t\t\tthis.by.at();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate px(): void {\r\n\t\tif (this.cb == null || this.pt == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!isNaN_(this.pv)) {\r\n\t\t\tif (this.cb.r0.width > this.pv) {\r\n\t\t\t\tlet hs_ = this.pt;\r\n\t\t\t\tlet v_ = 1;\r\n\t\t\t\ths_.visibility = v_;\r\n\t\t\t} else {\r\n\t\t\t\tlet hs2_ = this.pt;\r\n\t\t\t\tlet v2_ = 0;\r\n\t\t\t\ths2_.visibility = v2_;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate pz(a: any, b: RectChangedEventArgs): void {\r\n\t\tthis.px();\r\n\t}\r\n\tl7(a: boolean): void {\r\n\t\tsuper.l7(a);\r\n\t\tif (this.pt != null) {\r\n\t\t\tthis.pt.l7(a);\r\n\t\t}\r\n\t}\r\n\tl6(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tif (this.pt != null) {\r\n\t\t\tthis.pt.l6(a, b, c, d, e);\r\n\t\t}\r\n\t}\r\n\tat(a: Point, b: boolean): DataContext {\r\n\t\treturn this.pt.at(a, b);\r\n\t}\r\n\tmg(): void {\r\n\t\tsuper.mg();\r\n\t\tthis.pt.mg();\r\n\t}\r\n\tprotected get_coercionMethods(): any {\r\n\t\treturn this._coercionMethods;\r\n\t}\r\n\tprotected set_coercionMethods(a: any): void {\r\n\t\tthis._coercionMethods = a;\r\n\t\tthis.pt.coercionMethods = a;\r\n\t}\r\n\tprotected ky(a: any): void {\r\n\t\tsuper.ky(a);\r\n\t\tif (this.pt != null) {\r\n\t\t\tlet b = this.pt.hj();\r\n\t\t\tthis.kq(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HostSeriesView extends SeriesView {\r\n\tstatic $t: Type = markType(HostSeriesView, 'HostSeriesView', (<any>SeriesView).$);\r\n\tconstructor(a: GeographicMapSeriesHost) {\r\n\t\tsuper(a);\r\n\t\tthis.bx = a;\r\n\t}\r\n\tprivate bx: GeographicMapSeriesHost = null;\r\n\tar(a: RenderingContext, b: RenderingContext): void {\r\n\t\tsuper.ar(a, b);\r\n\t}\r\n\tb2(): void {\r\n\t\tthis.bx.pq = 1;\r\n\t\tthis.bx.pt.pq = 0;\r\n\t\tthis.bx.pt.itemsSource = this.bx.itemsSource;\r\n\t\tthis.bx.pt.hc = this.bx.hc;\r\n\t\tthis.bx.pt.os = this.bx.os;\r\n\t\tthis.bx.pt.ox = this.bx.os;\r\n\t\tthis.bx.pt.bt = this.bx.bt;\r\n\t\tthis.bx.pt.gk = this.bx.gk;\r\n\t\tthis.bx.pt.hd = this.bx.hd;\r\n\t\tthis.bx.pt._opacity = this.bx._opacity;\r\n\t\tthis.bx.pt.gp = this.bx.gp;\r\n\t\tthis.bx.pt.fs = this.bx.fs;\r\n\t\tthis.bx.pt.gh = this.bx.gh;\r\n\t\tthis.bx.pt.en = this.bx.en;\r\n\t\tthis.bx.pt.ba = this.bx.ba;\r\n\t\tthis.bx.pt.a8 = this.bx.a8;\r\n\t}\r\n\tb3(): void {\r\n\t\tthis.bx.pt.itemsSource = this.bx.itemsSource;\r\n\t}\r\n\tca(): void {\r\n\t\tthis.bx.pt.gk = this.bx.gk;\r\n\t}\r\n\tcd(): void {\r\n\t\tthis.bx.pt.hd = this.bx.hd;\r\n\t}\r\n\tb7(): void {\r\n\t\tthis.bx.pt._opacity = this.bx._opacity;\r\n\t}\r\n\tcc(): void {\r\n\t\tthis.bx.pt.gp = this.bx.gp;\r\n\t}\r\n\tb1(): void {\r\n\t\tthis.bx.pt.os = this.bx.os;\r\n\t}\r\n\tb9(): void {\r\n\t\tthis.bx.pt.ox = this.bx.ox;\r\n\t}\r\n\tby(): void {\r\n\t\tthis.bx.pt.os = this.bx.oo;\r\n\t}\r\n\tbz(): void {\r\n\t\tthis.bx.pt.ox = this.bx.or;\r\n\t}\r\n\tb4(): void {\r\n\t\tthis.bx.pt.a8 = this.bx.a8;\r\n\t}\r\n\tb5(): void {\r\n\t\tthis.bx.pt.ba = this.bx.ba;\r\n\t}\r\n\tb0(): void {\r\n\t\tthis.bx.pt.fs = this.bx.fs;\r\n\t}\r\n\tb6(): void {\r\n\t\tthis.bx.pt.gh = this.bx.gh;\r\n\t}\r\n\tb8(): void {\r\n\t\tthis.bx.pt.bt = this.bx.bt;\r\n\t}\r\n\tcb(): void {\r\n\t\tthis.bx.pt.en = this.bx.en;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nexport {GeographicMapSeriesHost} from \"./GeographicMapSeriesHost_combined\"\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nexport {GeographicMapImagery} from \"./XamGeographicMap_combined\"\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, toPoint, fromPoint, fromRect } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Base class for hosting chart series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapSeriesHostComponent extends IgcSeriesComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMapSeriesHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicMapSeriesHostComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapSeriesHostComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Checks if this control is geographic coordinate system\r\n\t*/\r\n\tget isGeographic() : boolean {\r\n\t\treturn (this.i.dr as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets whether this series supports markers\r\n\t*/\r\n\tget hasMarkers() : boolean {\r\n\t\treturn (this.i.hasMarkers as boolean);\r\n\t}\r\n\t/**\r\n\t * The minimum scale at which this series becomes visible.\r\n\t * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.\r\n\t*/\r\n\tget visibleFromScale() : number {\r\n\t\treturn (this.i.pv as number);\r\n\t}\r\n\tset visibleFromScale(v: number) {\r\n\t\tthis.i.pv = +v;\r\n\t                                        this._a(\"visibleFromScale\", this.i.pv);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the coercion methods to use when loading data from data sources.\r\n\t * Should be specified before setting any member paths, if being used. Setting it later \r\n\t * will not cause data to be reimported into the chart.\r\n\t*/\r\n\tget coercionMethods() : any {\r\n\t\treturn this.i.coercionMethods as any;\r\n\t}\r\n\tset coercionMethods(v: any) {\r\n\t                                        this.i.coercionMethods = v;\r\n\t}\r\n\t/**\r\n\t * Called to notify about changes to indexed-based properties, e.g. Brushes, Outlines, MarkerBrushes, MarkerOutlines and refresh series\r\n\t\r\n\t*/\r\n\tpublic notifyIndexedPropertiesChanged() {\r\n\t\tthis.i.k9();\r\n\t}\r\n\tpublic getItemValue(item: any, memberPathName: string) : any {\r\n\t\tlet iv = this.i.hn(item, memberPathName);\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the item that is the best match for the specified world coordinates.\r\n\t\r\n\t* @param world  * The world coordinates to use.\r\n\t*/\r\n\tpublic getItem(world: IgPoint) : any {\r\n\t\tlet iv = this.i.hk(toPoint(world));\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.g9(toPoint(world), skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.g7(toPoint(world), skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.ga(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getSeriesValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t\tlet iv = this.i.pb(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinate for which to get a value bounding box for\r\n\t*/\r\n\tpublic getSeriesValueBoundingBox(world: IgPoint) : IgRect {\r\n\t\tlet iv = this.i.pk(toPoint(world));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinates for which to get a value marker bounding box for\r\n\t*/\r\n\tpublic getSeriesValueMarkerBoundingBox(world: IgPoint) : IgRect {\r\n\t\tlet iv = this.i.pm(toPoint(world));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\tpublic getSeriesHighValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.f6(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getSeriesHighValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t\tlet iv = this.i.o7(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesLowValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.f8(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getSeriesLowValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t\tlet iv = this.i.o9(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValuePositionFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t\tlet iv = this.i.pc(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValueFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.gb(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\r\n\t\r\n\t*/\r\n\tpublic getItemSpan() : number {\r\n\t\tlet iv = this.i.f3();\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * Renders the series.\r\n\t\r\n\t* @param animate  * True if the change should be animated.\r\n\t*/\r\n\tpublic renderSeries(animate: boolean) {\r\n\t\tthis.i.l7(animate);\r\n\t}\r\n\t/**\r\n\t * Called when this series' Style is updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.mg();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from \"igniteui-charts/ShapeItemSearchMode\";\r\nimport { ShapefileConverter } from \"igniteui-core/ShapefileConverter\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Base, IEnumerable, IEnumerable_$type, Type, String_$type, typeCast, Boolean_$type, enumGetBox, EnumUtil, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markType, markDep } from \"igniteui-core/type\";\r\nimport { AssigningShapeStyleEventArgs } from \"igniteui-charts/AssigningShapeStyleEventArgs\";\r\nimport { AssigningShapeMarkerStyleEventArgs } from \"igniteui-charts/AssigningShapeMarkerStyleEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { AsyncCompletedEventArgs } from \"igniteui-core/AsyncCompletedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicShapeSeriesBase extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBase, 'GeographicShapeSeriesBase', (<any>GeographicMapSeriesHost).$);\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesBaseView(this);\r\n\t}\r\n\tp4: GeographicShapeSeriesBaseView;\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.p4 = <GeographicShapeSeriesBaseView>a;\r\n\t}\r\n\tqm: string;\r\n\tprotected get_dt(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected get_cz(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tqb: boolean;\r\n\tqa: boolean;\r\n\tprotected p9: boolean = false;\r\n\tprotected p8: boolean = false;\r\n\tp3: ShapeItemSearchMode;\r\n\tqe: number;\r\n\tqd: number;\r\n\tassigningShapeStyle: (sender: any, args: AssigningShapeStyleEventArgs) => void = null;\r\n\tassigningShapeMarkerStyle: (sender: any, args: AssigningShapeMarkerStyleEventArgs) => void = null;\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.p4.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapeMemberPath\":\r\n\t\t\tthis.p4.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[5]:\r\n\t\t\tthis.p4.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[1]:\r\n\t\t\t(<ShapeSeriesBase>this.pt).qs = this.qb;\r\n\t\t\tthis.p9 = this.qb;\r\n\t\t\tif (this.qb) {\r\n\t\t\t\tlet e = (<ShapeSeriesBase>this.pt);\r\n\t\t\t\te.assigningShapeStyle = delegateCombine(e.assigningShapeStyle, runOn(this, this.qp));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ShapeSeriesBase>this.pt);\r\n\t\t\t\tf.assigningShapeStyle = delegateRemove(f.assigningShapeStyle, runOn(this, this.qp));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[0]:\r\n\t\t\t(<ShapeSeriesBase>this.pt).qr = this.qa;\r\n\t\t\tthis.p8 = this.qa;\r\n\t\t\tif (this.qb) {\r\n\t\t\t\tlet g = (<ShapeSeriesBase>this.pt);\r\n\t\t\t\tg.assigningShapeMarkerStyle = delegateCombine(g.assigningShapeMarkerStyle, runOn(this, this.qo));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ShapeSeriesBase>this.pt);\r\n\t\t\t\th.assigningShapeMarkerStyle = delegateRemove(h.assigningShapeMarkerStyle, runOn(this, this.qo));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[2]:\r\n\t\t\t(<ShapeSeriesBase>this.pt).qe = this.p3;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[3]:\r\n\t\t\t(<ShapeSeriesBase>this.pt).q9 = this.qd;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[4]:\r\n\t\t\t(<ShapeSeriesBase>this.pt).ra = this.qe;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapefileDataSource\":\r\n\t\t\tif (c != null) {\r\n\t\t\t\tlet i = <ShapefileConverter>c;\r\n\t\t\t\tif (this.p7) {\r\n\t\t\t\t\ti.importCompleted = delegateRemove(i.importCompleted, runOn(this, this.qq));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tlet j = <ShapefileConverter>d;\r\n\t\t\t\tif (j.count > 0) {\r\n\t\t\t\t\tthis.qr();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.p7 = true;\r\n\t\t\t\tj.importCompleted = delegateCombine(j.importCompleted, runOn(this, this.qq));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate qp(a: any, b: AssigningShapeStyleEventArgs): void {\r\n\t\tif (this.assigningShapeStyle != null) {\r\n\t\t\tthis.assigningShapeStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate qo(a: any, b: AssigningShapeMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningShapeMarkerStyle != null) {\r\n\t\t\tthis.assigningShapeMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate qq(a: any, b: AsyncCompletedEventArgs): void {\r\n\t\tthis.qr();\r\n\t}\r\n\tprivate qr(): void {\r\n\t\tlet sds_ = this.p6;\r\n\t\tlet ext_ = (sds_ as any).externalObject;\r\n\t\tthis.itemsSource = <IEnumerable><any><any>(ext_.getPointData());\r\n\t}\r\n\tprivate p5: ShapefileConverter = null;\r\n\tprivate p7: boolean = false;\r\n\tget p6(): ShapefileConverter {\r\n\t\treturn this.p5;\r\n\t}\r\n\tset p6(a: ShapefileConverter) {\r\n\t\tlet b = this.p5;\r\n\t\tthis.p5 = a;\r\n\t\tif (b != this.p5) {\r\n\t\t\tthis.raisePropertyChanged(\"ShapefileDataSource\", b, this.p5);\r\n\t\t}\r\n\t}\r\n\tqc: number;\r\n\tprotected get_ez(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_ez(a: boolean): void {\r\n\t\tsuper.set_ez(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeriesBase, 'raisePropertyChanged', [ 'IsCustomShapeMarkerStyleAllowed:qa:qs', [ 0, false ], 'IsCustomShapeStyleAllowed:qb:qt', [ 0, false ], 'ItemSearchMode:p3:qu', [ ShapeItemSearchMode_$type, enumGetBox<ShapeItemSearchMode>(ShapeItemSearchMode_$type, 0) ], 'ItemSearchPointsThreshold:qd:qv', [ 1, 10000 ], 'ItemSearchThreshold:qe:qw', [ 1, 10000 ], 'ShapeFilterResolution:qc:qx', [ 1, 2 ], 'ShapeMemberPath:qm:qy', [ 2, \"points\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesBaseView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBaseView, 'GeographicShapeSeriesBaseView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicShapeSeriesBase) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicShapeSeriesBase = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ShapeSeriesBase>this.ce.pt).rk = this.ce.qm;\r\n\t}\r\n\tcf(): void {\r\n\t\tlet a: ShapeSeriesBase = <ShapeSeriesBase>this.ce.pt;\r\n\t\tif (this.ce.cb == null) {\r\n\t\t\ta.p8 = null;\r\n\t\t\ta.qa = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.p8 = (<XamGeographicMap>this.ce.cb).sn;\r\n\t\ta.qa = (<XamGeographicMap>this.ce.cb).sp;\r\n\t}\r\n\tch(): void {\r\n\t\t(<ShapeSeriesBase>this.ce.pt).rk = this.ce.qm;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ShapeSeriesBase>this.ce.pt).q6 = this.ce.qc;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImageTilesReadyEventArgs as ImageTilesReadyEventArgs_internal } from \"./ImageTilesReadyEventArgs\";\r\n\r\nexport class IgcImageTilesReadyEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImageTilesReadyEventArgs_internal\r\n{\r\n\treturn new ImageTilesReadyEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImageTilesReadyEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImageTilesReadyEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImageTilesReadyEventArgs, 'ImageTilesReadyEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { IgcShapeDataSource } from \"igniteui-core/igc-shape-data-source\";\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcAssigningShapeStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-style-event-args';\r\nimport { IgcAssigningShapeMarkerStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-marker-style-event-args';\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from 'igniteui-charts/ShapeItemSearchMode';\r\n\r\n/**\r\n * Base class for series which render polygons on a map.\r\n*/\r\nexport abstract class IgcGeographicShapeSeriesBaseComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeriesBase {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesBaseComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesBaseComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    private _shapeDataSource: string;\r\n\t/**\r\n \t * Gets or sets the string path of the .shp portion of the Shapefile.\r\n\t*/\r\n    set shapeDataSource(value: string) {\r\n        this._shapeDataSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get shapeDataSource(): string {\r\n        return this._shapeDataSource;\r\n    }\r\n\r\n    private _databaseSource: string;\r\n\t/**\r\n\t * Gets or sets the string path of the .dbf portion of the Shapefile.\r\n\t*/\r\n    set databaseSource(value: string) {\r\n        this._databaseSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get databaseSource(): string {\r\n        return this._databaseSource;\r\n    }\r\n\r\n    private _currData: any = null;\r\n    private _onImportCompleted: any = null;\r\n    protected onUpdateDataSource(dataSource: any): any {\r\n        if (this._onImportCompleted == null) {\r\n            this._onImportCompleted = (s, e) => {\r\n                if (this._currData) {\r\n                    this._currData.i.importCompleted = delegateRemove(this._currData.i.importCompleted, this._onImportCompleted);\r\n                    var data = this._currData;\r\n                    this._currData = null;\r\n                    this.i.itemsSource = data.getPointData();\r\n                }\r\n            };\r\n        }\r\n        \r\n        if (dataSource && dataSource.getPointData) {\r\n            if (dataSource.count > 0) {\r\n                return dataSource.getPointData();\r\n            }\r\n            this._currData = dataSource;\r\n            this._currData.i.importCompleted = delegateCombine(this._currData.i.importCompleted, this._onImportCompleted);\r\n            return null;\r\n        }\r\n        return dataSource;\r\n    }\r\n\r\n    private _cachedShapeDataSource: IgcShapeDataSource;\r\n    private updateShapeDataSource() {\r\n        if (this._cachedShapeDataSource == null) {\r\n            this._cachedShapeDataSource = new IgcShapeDataSource();\r\n            this.onShapeDataSourceImportCompleted = this.onShapeDataSourceImportCompleted.bind(this);\r\n            this._cachedShapeDataSource.importCompleted = this.onShapeDataSourceImportCompleted;\r\n        }\r\n\r\n        this._cachedShapeDataSource.shapefileSource = this._shapeDataSource;\r\n       \tthis._cachedShapeDataSource.databaseSource = this._databaseSource;\r\n\r\n        if (this._shapeDataSource && this._databaseSource) {\r\n            this._cachedShapeDataSource.dataBind();\r\n        }\r\n    }\r\n\r\n    private onShapeDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedShapeDataSource.getPointData();\r\n    }\r\n\r\n\t/**\r\n\t * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\r\n\t * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\r\n\t*/\r\n\tget shapeMemberPath() : string {\r\n\t\treturn (this.i.qm as string);\r\n\t}\r\n\tset shapeMemberPath(v: string) {\r\n\t\tthis.i.qm = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomShapeStyleAllowed() : boolean {\r\n\t\treturn (this.i.qb as boolean);\r\n\t}\r\n\tset isCustomShapeStyleAllowed(v: boolean) {\r\n\t\tthis.i.qb = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeStyleAllowed\", this.i.qb);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomShapeMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.qa as boolean);\r\n\t}\r\n\tset isCustomShapeMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.qa = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeMarkerStyleAllowed\", this.i.qa);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ShapeItemSearchMode {\r\n\t\treturn this.i.p3;\r\n\t}\r\n\tset itemSearchMode(v: ShapeItemSearchMode) {\r\n\t\tthis.i.p3 = ensureEnum<ShapeItemSearchMode>(ShapeItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ShapeItemSearchMode>(ShapeItemSearchMode_$type, this.i.p3));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.qe as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.qe = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.qe);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchPointsThreshold() : number {\r\n\t\treturn (this.i.qd as number);\r\n\t}\r\n\tset itemSearchPointsThreshold(v: number) {\r\n\t\tthis.i.qd = +v;\r\n\t                                        this._a(\"itemSearchPointsThreshold\", this.i.qd);\r\n\t}\r\n\t/**\r\n\t * Set a shapefile datasource to use with the series.\r\n\t*/\r\n\tget shapefileDataSource() : IgcShapeDataSource {\r\n\t                                        if (this.i.p6 == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.p6 as any).externalObject) {\r\n\t                                            let e = new IgcShapeDataSource();\r\n\t                                            (e as any)._implementation = this.i.p6;\r\n\t                                            (this.i.p6 as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.p6 as any).externalObject;\r\n\t}\r\n\tset shapefileDataSource(v: IgcShapeDataSource) {\r\n\t\tv == null ? this.i.p6 = null : this.i.p6 = v.i;\r\n\t}\r\n\t/**\r\n\t * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\r\n\t * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\r\n\t*/\r\n\tget shapeFilterResolution() : number {\r\n\t\treturn (this.i.qc as number);\r\n\t}\r\n\tset shapeFilterResolution(v: number) {\r\n\t\tthis.i.qc = +v;\r\n\t                                        this._a(\"shapeFilterResolution\", this.i.qc);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.shapefileDataSource && (this.shapefileDataSource as any).name && (this.shapefileDataSource as any).name == name) { return this.shapefileDataSource; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n\r\n\t\r\n\t    private _assigningShapeStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void = null;\r\n\t    private _assigningShapeStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void {\r\n\treturn this._assigningShapeStyle;\r\n\t}\r\n\t    public set assigningShapeStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t            this._assigningShapeStyle_wrapped = null;\r\n\t            this._assigningShapeStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeStyle = ev;\r\n\t        this._assigningShapeStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeStyle) {\r\n\t                        (this as any).beforeAssigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeStyle) {\r\n\t    this._assigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t    }\r\n\t\r\n\t    private _assigningShapeMarkerStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningShapeMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeMarkerStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void {\r\n\treturn this._assigningShapeMarkerStyle;\r\n\t}\r\n\t    public set assigningShapeMarkerStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t            this._assigningShapeMarkerStyle_wrapped = null;\r\n\t            this._assigningShapeMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeMarkerStyle = ev;\r\n\t        this._assigningShapeMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeMarkerStyle) {\r\n\t                        (this as any).beforeAssigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeMarkerStyle) {\r\n\t    this._assigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nexport {GeographicShapeSeriesBase} from \"./GeographicShapeSeriesBase_combined\"\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, PropertyChangedEventArgs, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { DomRenderer, DomRenderer_$type, DomWrapper, DomWrapper_$type } from \"igniteui-core/dom\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { Dictionary$2 } from \"igniteui-core/Dictionary$2\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { ShapeSeriesViewBase } from \"igniteui-charts/ShapeSeriesViewBase\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { GeometryGroup } from \"igniteui-core/GeometryGroup\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { PathGeometry } from \"igniteui-core/PathGeometry\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { PathFigure } from \"igniteui-core/PathFigure\";\r\nimport { Geometry } from \"igniteui-core/Geometry\";\r\nimport { PointCollection } from \"igniteui-core/PointCollection\";\r\nimport { CanvasViewRenderer } from \"igniteui-core/CanvasViewRenderer\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { truncate } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeries extends ShapeSeriesBase implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(TileSeries, 'TileSeries', (<any>ShapeSeriesBase).$, [IMapRenderDeferralHandler_$type]);\r\n\tprotected get_ee(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>TileSeries).$;\r\n\t}\r\n\tprotected bv(): SeriesView {\r\n\t\treturn new TileSeriesView(this);\r\n\t}\r\n\tlo(a: SeriesView): void {\r\n\t\tsuper.lo(a);\r\n\t\tthis.se = <TileSeriesView>a;\r\n\t}\r\n\tprotected get_qu(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tprotected se: TileSeriesView;\r\n\tget si(): GeographicMapImagery {\r\n\t\treturn this.sg;\r\n\t}\r\n\tset si(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.si;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.si;\r\n\t\t\tthis.sg = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate sg: GeographicMapImagery = null;\r\n\tprivate sf: GeographicMapImagery = null;\r\n\tprotected get sh(): GeographicMapImagery {\r\n\t\treturn this.sf;\r\n\t}\r\n\tprotected set sh(a: GeographicMapImagery) {\r\n\t\tlet b = this.sf;\r\n\t\tthis.sf = a;\r\n\t\tthis.raisePropertyChanged(\"ActualTileImagery\", b, this.sf);\r\n\t}\r\n\tprotected lt(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.lt(a, b, c, d);\r\n\t\tlet e: GeographicMapImagery;\r\n\t\tlet f: GeographicMapImagery;\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.propertyChanged = delegateRemove(e.propertyChanged, runOn(this, this.sn));\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.propertyChanged = delegateCombine(f.propertyChanged, runOn(this, this.sn));\r\n\t\t\t}\r\n\t\t\tthis.se.de(e, f);\r\n\t\t\tthis.l7(false);\r\n\t\t\tthis.le();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.so));\r\n\t\t\t\te.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.so));\r\n\t\t\t\tf.deferralHandler = this;\r\n\t\t\t}\r\n\t\t\tthis.se.dd(e, f);\r\n\t\t\tif (f != null && typeCast<XamGeographicMap>((<any>XamGeographicMap).$, this.cb) !== null) {\r\n\t\t\t\tf.geographicMap = <XamGeographicMap>this.cb;\r\n\t\t\t\tthis.sq(this.by);\r\n\t\t\t\tthis.se.da(this.cb.r0);\r\n\t\t\t}\r\n\t\t\tthis.le();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.se.da(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WorldRect\":\r\n\t\t\tthis.se.dh(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tlet g = <SeriesViewer>c;\r\n\t\t\tlet h = <SeriesViewer>d;\r\n\t\t\tif (g != null && this.sh != null) {\r\n\t\t\t\tthis.sh.be(null);\r\n\t\t\t}\r\n\t\t\tif (h != null && this.sh != null) {\r\n\t\t\t\tthis.sh.be(this.by.w);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\r\n\t\t\tcase \"ActualThickness\":\r\n\t\t\tthis.lg();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate sn(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tif (b.propertyName == \"MultiScaleImage\") {\r\n\t\t\tthis.sq(this.by);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: EventArgs) => void = null;\r\n\tprivate so(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new EventArgs());\r\n\t\t}\r\n\t\tif (!this.sk) {\r\n\t\t\tthis.se.df();\r\n\t\t}\r\n\t}\r\n\tprivate sj: (arg1: boolean) => void = null;\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.sj = b;\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.sj = null;\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.l7(false);\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.gz != null) {\r\n\t\t\tthis.gz.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tprotected mt(a: Rect, b: Rect): void {\r\n\t\tthis.se.dg();\r\n\t\tsuper.mt(a, b);\r\n\t}\r\n\tprivate sk: boolean = false;\r\n\tl8(a: boolean): void {\r\n\t\tsuper.l8(a);\r\n\t\tthis.sp(a, this.by);\r\n\t}\r\n\tprotected sp(a: boolean, b: SeriesView): void {\r\n\t\tlet c: Rect;\r\n\t\tlet d: Rect;\r\n\t\tlet e = <TileSeriesView>b;\r\n\t\tlet f = b.getViewInfo(c, d);\r\n\t\tc = f.p0;\r\n\t\td = f.p1;\r\n\t\tthis.sq(b);\r\n\t\tif (this.sj != null) {\r\n\t\t\tthis.sk = true;\r\n\t\t\tthis.sj(a);\r\n\t\t\tthis.sk = false;\r\n\t\t}\r\n\t\te.df();\r\n\t}\r\n\tl6(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tsuper.l6(a, b, c, d, e);\r\n\t\tlet f = this.e8.item(d);\r\n\t\tf.a1(c);\r\n\t\tif (this.cu(f)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.ry(f);\r\n\t}\r\n\tprivate sq(a: SeriesView): void {\r\n\t\tlet b: Rect;\r\n\t\tlet c: Rect;\r\n\t\tlet d = a.getViewInfo(b, c);\r\n\t\tb = d.p0;\r\n\t\tc = d.p1;\r\n\t\tif (this.si != null && this.si.ao != null) {\r\n\t\t\tif (this.si != this.sh) {\r\n\t\t\t\tthis.sh = this.si;\r\n\t\t\t}\r\n\t\t\tif (this.sh != null && !b.isEmpty) {\r\n\t\t\t\tif (this.sh.width != b.width) {\r\n\t\t\t\t\tthis.sh.width = b.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.sh.height != b.height) {\r\n\t\t\t\t\tthis.sh.height = b.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tko(a: boolean, b: SeriesView): void {\r\n\t\tsuper.ko(a, b);\r\n\t\t(<TileSeriesView>b).db();\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeriesView extends ShapeSeriesViewBase {\r\n\tstatic $t: Type = markType(TileSeriesView, 'TileSeriesView', (<any>ShapeSeriesViewBase).$);\r\n\tconstructor(a: TileSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.c7 = a;\r\n\t}\r\n\tprotected c7: TileSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.c7.ox = Defaults.ao;\r\n\t\t\tthis.c7.os = Defaults.an;\r\n\t\t}\r\n\t}\r\n\tprotected ch(a: FrameworkElement, b: PathGeometry): void {\r\n\t\tif (b.c.count > 0) {\r\n\t\t\tthis.di.d.add(b);\r\n\t\t}\r\n\t}\r\n\tprotected c2(a: number, b: List$1<PointCollection>): PathGeometry {\r\n\t\treturn this.c3(a, b, true);\r\n\t}\r\n\tprotected c1(a: number, b: any): FrameworkElement {\r\n\t\treturn null;\r\n\t}\r\n\tprotected cl(a: FrameworkElement, b: boolean): void {\r\n\t}\r\n\tcj(a: FrameworkElement, b: any, c: boolean): void {\r\n\t}\r\n\tprivate di: GeometryGroup = new GeometryGroup();\r\n\tcr(): void {\r\n\t\tsuper.cr();\r\n\t\tthis.di.d.clear();\r\n\t}\r\n\tcq(): void {\r\n\t\tsuper.cq();\r\n\t\tthis.aq();\r\n\t}\r\n\tda(a: Rect): void {\r\n\t\tif (this.c7.si != null) {\r\n\t\t\tthis.c7.si.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tprivate c9: DomWrapper = null;\r\n\tprivate c8: RenderingContext = null;\r\n\tdd(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.c9 == null) {\r\n\t\t\tthis.c9 = this.e.gz.createElement(\"canvas\");\r\n\t\t\tlet c = this.e.gz.get2DCanvasContext(this.c9);\r\n\t\t\tthis.c8 = new RenderingContext(new CanvasViewRenderer(), c);\r\n\t\t\tthis.c9.setAttribute(\"width\", this.bu.width.toString());\r\n\t\t\tthis.c9.setAttribute(\"height\", this.bu.height.toString());\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t\ta.imagesChanged = delegateRemove(a.imagesChanged, runOn(this, this.dc));\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tb.be(this.w);\r\n\t\t\t}\r\n\t\t\tb.bd(this.c8);\r\n\t\t\tb.bf(this.bu);\r\n\t\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.dc));\r\n\t\t}\r\n\t}\r\n\tprivate dc(a: any, b: EventArgs): void {\r\n\t\tthis.aq();\r\n\t}\r\n\tde(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t}\r\n\tdg(): void {\r\n\t\tif (this.c9 != null) {\r\n\t\t\tthis.c9.setAttribute(\"width\", this.bu.width.toString());\r\n\t\t\tthis.c9.setAttribute(\"height\", this.bu.height.toString());\r\n\t\t}\r\n\t\tif (this.c7.si != null) {\r\n\t\t\tthis.c7.si.bf(this.bu);\r\n\t\t}\r\n\t}\r\n\tprotected a6(a: RenderingContext, b: boolean): void {\r\n\t\tsuper.a6(a, b);\r\n\t\tif (b) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.c9 == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c: boolean = false;\r\n\t\tif (this.di.d.count > 0) {\r\n\t\t\tc = true;\r\n\t\t\tthis.k.z();\r\n\t\t\tthis.k.q(this.di);\r\n\t\t\tlet d = <CanvasRenderingContext2D>this.k.g();\r\n\t\t\td.clip();\r\n\t\t}\r\n\t\tlet e: number = <number>truncate(Math.round(this.bu.left));\r\n\t\tlet f: number = <number>truncate(Math.round(this.bu.top));\r\n\t\tlet g: number = <number>truncate(Math.round(this.bu.width));\r\n\t\tlet h: number = <number>truncate(Math.round(this.bu.height));\r\n\t\tthis.k.n(this.c9.getNativeElement(), 1, e, f, g, h, e, f, g, h);\r\n\t\tif (c) {\r\n\t\t\tthis.k.y();\r\n\t\t}\r\n\t}\r\n\tdf(): void {\r\n\t\tthis.aq();\r\n\t}\r\n\tdb(): void {\r\n\t}\r\n\tdh(a: Rect): void {\r\n\t\tif (this.c7.si != null) {\r\n\t\t\tthis.c7.si.a6();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nexport {TileSeries} from \"./TileSeries_combined\"\r\n"],"sourceRoot":""}