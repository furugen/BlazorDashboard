{"version":3,"sources":["webpack://InfragisticsBlazor/webpack/bootstrap","webpack://InfragisticsBlazor/./ig/igniteui-core/type.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/ArgumentException.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/number.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/colorCore.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/string.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/Color.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/TileWorkSettings.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/IArray.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/IArrayList.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/IComparer.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/IComparer$1.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/compareUtil.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/Comparer$1_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/ReadOnlyCollection$1.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/NotImplementedException.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/List$1.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/array.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/TileImageCreatedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/HeatTileImageCreatedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/HeatTileGeneratorWorker.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/ScalerVisibleBounds.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/Rect.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/HeatTileScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/ITileWorkCompletedSink.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/HeatTileGeneratorWebWorker_combined.ts","webpack://InfragisticsBlazor/./heatworker.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeIdentifierCache","_nextTypeIdentifier","Base","other","this","a","b","aIsNull","isNullable","hasValue","bIsNull","equals","Number","isNaN","Date","item1","item2","xComparable","typeCast","IComparable_$type","compareToObject","yComparable","compareSimple","undefined","$hashCode","nextHashCode","obj","getHashCode","Type","getPrimitiveHashCode","clone","$type","InstanceConstructor","e","Cons","prop","result","push","instanceConstructor","identifier","baseType","interfaces","staticInitializer","super","specializationCache","_staticInitializer","typeArguments","isEnumType","_isGenericType","_staticFields","_$nullNullable","enumInfo","_fullName","lastDotIndex","lastIndexOf","substr","types","length","typeName","stringId","toString","ret","type","indexOf","isGenericType","apply","replacement","j","updateCache","typeArg","initSelfReferences","specId","getSpecId","rest","Array","from","arguments","placeholders","hasPlaceholders","isFinite","specialize","generateString","_self","concat","slice","checkEquals","type1","type2","first","ValueType","tOther","isAssignableFrom","Number_$type","Boolean_$type","targetType","Nullable","getUnderlyingType","canAssignSimple","$t","Boolean","C","Error","createInstance","v","val","String","len","hash","charCodeAt","String_$type","Date_$type","typeGetValue","Array_$type","toNullable","typeCastObjTo$t","shouldWrap","pendingStaticCtors","markTypeInitialized","markType","staticInit","$","IConvertible_$type","Enum","EnumBox","provider","EnumUtil","getName","getBoxIfEnum","enumGetBox","_boxes","values","enumType","ignoreCase","upper","toUpperCase","x","firstChar","charAt","toLowerCase","actualNamesValuesMap","getValueFromName","namesValuesMap","flag","_nameMap","vals","getValues","names","getNames","map","zeroValueName","original","sort","unshift","join","actualNames","member","$tEnum","p2","parse","nullableType","isGenericTypeDefinition","Nullable$1","genericTypeArguments","_value","v1","v2","v1IsNull","v2IsNull","val1","val2","nullableEquals","getDefaultValue","canAssign","defaultValue","originalValue","IComparable$1_$type","PropertyChangedEventArgs","propertyName","_propertyName","IteratorWrapper","inner","getNew","_inner","_getNew","_hasNext","_current","next","done","EnumeratorWrapper","moveNext","current","EnumeratorWrapperObject","currentObject","getEn","arr","item","getEnumeratorObject","en","isArray","getEnumerator","EnumerableWrapper","iterator","EnumerableWrapperObject","fromEnum","IDisposable_$type","IEnumerable_$type","IEnumerator_$type","ICollection_$type","IList_$type","IEnumerable$1_$type","ICollection$1_$type","IList$1_$type","BaseError","initNumber","_message","_innerException","init1","init2","get_message","message","innerException","SystemException","NotSupportedException","FormatException","SeekOrigin","Stream","disposeCore","close","disposing","bytes","read","write","EventArgs","_empty","TypeRegistrar","isRegistered","htmlTagName","document","createElement","_registrar","set","has","igc","replace","igr","substring","internal","prefix","postfix","externalName","Map","_rest","intDivide","divisor","truncate","Math","floor","ceil","logBase","n2","log","isNaN_","wellKnownColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","stringCompareTo","target","_a","_r","_g","_b","_colorString","round","colorString","obj_","str","g","asColorName","parts","split","parseInt","parseFloat","check","stringStartsWith","a_","r_","g_","b_","markStruct","_scaler","_blurRadius","_maxBlurRadius","_useBlurRadiusAdjustedForZoom","_minimumColor","_maximumColor","_tileViewport","_yValues","_xValues","_values","_isNewData","_minimumVisibleLatitude","_maximumVisibleLatitude","_minimumVisibleLongitude","_maximumVisibleLongitude","_z","_x","_y","_window","_testRun","_globalMinimum","_globalMaximum","_useGlobalMinMax","_minimumValue","_maximumValue","_scaleColors","_scaleColorOffsets","_useLogarithmicScale","_logarithmBase","_image","minA_","minimumColor","minR_","minG_","minB_","maxA_","maximumColor","maxR_","maxG_","maxB_","scaleColors_","scaleColors","color_","blurRadius","maxBlurRadius","useBlurRadiusAdjustedForZoom","tileViewport","left","top","width","height","yValues","xValues","isNewData","minimumVisibleLatitude","minimumVisibleLongitude","maximumVisibleLatitude","maximumVisibleLongitude","z","y","window","testRun","globalMinimum","globalMaximum","useGlobalMinMax","minimumValue","maximumValue","scaleColorOffsets","useLogarithmicScale","logarithmBase","IArray_$type","IArrayList_$type","IComparer_$type","IComparer$1_$type","obj1","obj2","compare","compareTo","count","contains","copyTo","h","add","splice","shift","equalsStatic","u","index_","collection_","asArrayList","asArray","asList_","i_","item_","arr_","inn_","parr_","j_","numToRemove_","source","dest","index","arrayCopyTo","indexOf1","getTime","ab","compare_","defaultComparerValue","f","aa","func","self","runOn","_imageData","_url","_globalMinimumValue","_globalMaximumValue","_globalMaximumValueLongitude","_globalMaximumValueLatitude","_globalMinimumValueLongitude","_globalMinimumValueLatitude","w","k","_completedSink","scaler","sqrt","pow","q","abs","ac","ad","ae","aj","ak","al","am","af","ag","ah","ai","an","ao","ap","at","aq","ar","as","au","av","aw","ax","ay","az","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","completedSink","onCompleted","$ret","url","globalMinimumValue","globalMaximumValue","globalMaximumValueLongitude","globalMaximumValueLatitude","globalMinimumValueLongitude","globalMinimumValueLatitude","imageData","image","min","max","POSITIVE_INFINITY","NEGATIVE_INFINITY","l_op_Equality","isEmpty","containsLocation","right","bottom","intersectsWith","sin","exp","asin","ITileWorkCompletedSink_$type","_postmessage","args_","data_","data","yValues_","xValues_","values_","Float64Array","worker_","workers_","setInterval","worker","doWork","imageData_","Uint8ClampedArray","postmessage","onmessage","postMessage","start"],"mappings":"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","file":"heatWorker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*! \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nlet _typeIdentifierCache: { [val: string]: number } = {};\r\nlet _nextTypeIdentifier = 0;\r\n\r\n// interface Function {\r\n//     $type?: Type;\r\n// }\r\n\r\nexport function getInstanceType(obj: any): Type {\r\n    if (obj.$type) {\r\n        return obj.$type;\r\n    }\r\n    else if (typeof obj === 'number') {\r\n        return Number_$type;\r\n    }\r\n    else if (typeof obj === 'string') {\r\n        return String_$type;\r\n    }\r\n    else if (typeof obj === 'boolean') {\r\n        return Boolean_$type;\r\n    }\r\n    else if (obj instanceof Date) {\r\n        return Date_$type;\r\n    }\r\n\r\n    return (<any>Base).prototype.$type;\r\n}\r\n\r\nexport class Base {\r\n    constructor () {\r\n\r\n    }\r\n    equals(other: any) : boolean {\r\n        return this === other;\r\n    }\r\n    static equalsStatic(a: any, b: any): boolean {\r\n        var aIsNull = (a == null) || (!!(<any>a).isNullable && !(<any>a).hasValue);\r\n        var bIsNull = (b == null) || (!!(<any>b).isNullable && !(<any>b).hasValue);\r\n\r\n        if (aIsNull || bIsNull) {\r\n            return aIsNull && bIsNull;\r\n        }\r\n\r\n        if (a.equals) {\r\n            return a.equals(b);\r\n        }\r\n\r\n        if (b.equals) {\r\n            return b.equals(a);\r\n        }\r\n\r\n        if (Number.isNaN(<any>a) && Number.isNaN(<any>b)) {\r\n            return true;\r\n        }\r\n\r\n        if (a instanceof Date) {\r\n            return b instanceof Date && +a === +b;\r\n        }\r\n\r\n        return a == b && typeof a == typeof b;\r\n    }\r\n\r\n    static equalsSimple(item1: any, item2: any): boolean {\r\n\t\treturn item1 == item2;\r\n\t};\r\n\r\n\tstatic compareSimple(item1: any, item2: any): number {\r\n\t\tif (item1 == item2) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tif (item1 < item2) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\treturn 1;\r\n\t};\r\n\r\n\tstatic compare(item1: any, item2: any): number {\r\n\t\tif (item1 === item2) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar xComparable = typeCast<IComparable>(IComparable_$type, item1);\r\n\t\tif (xComparable !== null && xComparable.compareToObject) {\r\n\t\t\treturn xComparable.compareToObject(item2);\r\n\t\t}\r\n\r\n\t\tvar yComparable = typeCast<IComparable>(IComparable_$type, item2);\r\n\t\tif (yComparable !== null && yComparable.compareToObject) {\r\n\t\t\treturn -yComparable.compareToObject(item1);\r\n\t\t}\r\n\r\n\t\treturn Base.compareSimple(item1, item2);\r\n\t};\r\n\r\n    private $hashCode: number;\r\n    static nextHashCode: number = 0;\r\n    getHashCode(): number {\r\n        if (this.$hashCode === undefined) {\r\n            this.$hashCode = Base.nextHashCode++;\r\n        }\r\n        return this.$hashCode;\r\n    }\r\n    static getHashCodeStatic(obj: any): number {\r\n        if (obj.getHashCode) {\r\n            return obj.getHashCode();\r\n        }\r\n        if (obj.$hashCode !== undefined) {\r\n            return obj.$hashCode;\r\n        }\r\n        if (!(typeof obj == \"object\")) {\r\n            return Type.getPrimitiveHashCode(obj);\r\n        } else {\r\n            obj.$hashCode = Base.nextHashCode++;\r\n            return obj.$hashCode;\r\n        }\r\n    }\r\n    memberwiseClone(): Base {\r\n        var clone: any;\r\n        try {\r\n            clone = Object.create(this.$type.InstanceConstructor.prototype);\r\n        }\r\n        catch (e) {\r\n            class Cons {\r\n\r\n            }\r\n            Cons.prototype = this.$type.InstanceConstructor.prototype;\r\n            clone = new Cons();\r\n        }\r\n\r\n        for (var prop in this) {\r\n            if (this.hasOwnProperty(prop)) {\r\n                clone[ prop ] = this[ prop ];\r\n            }\r\n        }\r\n\r\n        return clone;\r\n    }\r\n    static referenceEquals(a: any, b: any): boolean {\r\n        return a === b || (a == null && b == null);\r\n    }\r\n    static getArrayOfValues(obj: any): any[] {\r\n\t\tvar result = [ ];\r\n\t\tfor (var i in obj) {\r\n\t\t\tif (obj.hasOwnProperty(i)) {\r\n\t\t\t\tresult.push(obj[ i ]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tstatic getArrayOfProperties(obj: any): any[] {\r\n\t\tvar result = [ ];\r\n\t\tfor (var i in obj) {\r\n\t\t\tif (obj.hasOwnProperty(i)) {\r\n\t\t\t\tresult.push(i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n    $type: Type\r\n}\r\n\r\nexport type InstanceConstructor = \r\n    Function;\r\n\r\nexport class Type extends Base {\r\n    public specializationCache: { [val: string]: Type } = null;\r\n    private _staticInitializer: () => void = null;\r\n    private _fullName: string;\r\n    public name: string = null;\r\n    public typeArguments: (number | Type)[] = null;\r\n    public baseType: Type = null;\r\n    public interfaces: Type[] = null;\r\n    public identifier: number;\r\n    public isEnumType: boolean = false;\r\n    private _isGenericType: boolean = undefined;\r\n    private _staticFields: object = null;\r\n    InstanceConstructor: InstanceConstructor;\r\n    public isNullable: boolean = false;\r\n    public stringId: string;\r\n\r\n    _$nullNullable: any = null;\r\n\r\n    enumInfo: EnumInfo = null;\r\n\r\n    constructor (\r\n        instanceConstructor: InstanceConstructor,\r\n        identifier: string, \r\n        baseType: Type = Base.prototype.$type, \r\n        interfaces: Type[] = null, \r\n        staticInitializer: () => void = null) {\r\n\r\n        super();\r\n        this.specializationCache = {};\r\n        this._staticInitializer = staticInitializer;\r\n        this._fullName = identifier;\r\n        this.name = identifier;\r\n\r\n        this.InstanceConstructor = instanceConstructor;\r\n        var lastDotIndex = this.name.lastIndexOf(\".\");\r\n        if (lastDotIndex >= 0) {\r\n            this.name = this.name.substr(lastDotIndex + 1);\r\n        }\r\n    \r\n        this.typeArguments = null;\r\n        this.baseType = null;\r\n        this.interfaces = null;\r\n        if (baseType) {\r\n            this.baseType = baseType;\r\n        }\r\n        if (interfaces) {\r\n            this.interfaces = interfaces;\r\n        }\r\n\r\n        if (_typeIdentifierCache[ identifier ]) {\r\n            this.identifier = _typeIdentifierCache[ identifier ];\r\n        } else {\r\n            this.identifier = _nextTypeIdentifier++;\r\n            _typeIdentifierCache[ identifier ] = this.identifier;\r\n        }\r\n\r\n        // rather than always evaluating a function on a type to see if it is an enum\r\n        // we can just cache it once on the type\r\n        // if (baseType && Enum && baseType == Enum.prototype.$type) {\r\n        //     this.isEnumType = true;\r\n        // }\r\n    }\r\n    get typeName(): string {\r\n        return this.name;\r\n    }\r\n    get fullName(): string {\r\n        return this._fullName;\r\n    }\r\n    getSpecId(types: (number | Type)[]): string {\r\n        if (types.length === 1) {\r\n            if (!types[ 0 ]) {\r\n                return \"undef\";\r\n            } else if (types[ 0 ] === -1) {\r\n                return undefined;\r\n            } else if (!(<any>types[ 0 ]).typeName) {\r\n                return types[ 0 ].toString();\r\n            } else if ((<any>types[ 0 ]).stringId) {\r\n                return (<any>types[ 0 ]).stringId;\r\n            } else {\r\n                return (<Type>types[ 0 ]).identifier.toString();\r\n            }\r\n        }\r\n\r\n        var ret = \"\";\r\n        for (var i = 0; i < types.length; i++) {\r\n            var type = types[ i ];\r\n            if (!type) {\r\n                ret += \"undef\";\r\n            } else if (type == -1) {\r\n                return undefined;\r\n            } else if (!(<any>type).typeName) {\r\n                ret += type.toString();\r\n            } else if ((<any>type).stringId) {\r\n                ret += (<any>type).stringId;\r\n            } else {\r\n                ret += (<Type>type).identifier.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    get isGenericType(): boolean {\r\n        if (this._isGenericType === undefined) {\r\n            this._isGenericType = this.name.indexOf(\"$\") >= 0;\r\n        }\r\n\r\n        return this._isGenericType;\r\n    }\r\n    get isGenericTypeDefinition() : boolean {\r\n        return this.typeArguments === null && this.isGenericType;\r\n    }\r\n    get genericTypeArguments(): (number | Type)[] {\r\n        return this.typeArguments;\r\n    }\r\n    getStaticFields(type?: Type): any {\r\n        if (type === undefined) {\r\n            type = this;\r\n        }\r\n\r\n        var t: Type | string = this;\r\n\r\n        while (t != null) {\r\n            if (t === type || t._fullName == type._fullName) {\r\n                if (t._staticFields == null && t._staticInitializer) {\r\n                    t._staticFields = {};\r\n                    t._staticInitializer.apply(t._staticFields, t.typeArguments);\r\n                }\r\n\r\n                return t._staticFields;\r\n            }\r\n\r\n            t = t.baseType;\r\n        }\r\n\r\n        return null;\r\n    }\r\n    initSelfReferences(replacement?: Type): Type {\r\n        var i, j;\r\n        if (replacement) {\r\n            if (this.typeArguments) {\r\n                var updateCache = false;\r\n\r\n                for (j = 0; j < this.typeArguments.length; j++) {\r\n                    var typeArg = this.typeArguments[ j ];\r\n                    if (typeArg == -1) {\r\n                        updateCache = true;\r\n                        this.typeArguments[ j ] = replacement;\r\n                    } else if (\r\n                        typeArg &&\r\n                        typeArg instanceof Type &&\r\n                        typeArg.initSelfReferences) {\r\n                        typeArg.initSelfReferences(replacement);\r\n                    }\r\n                }\r\n\r\n                if (updateCache) {\r\n                    var specId = this.getSpecId(this.typeArguments);\r\n                    var ret = this.specializationCache[ specId ];\r\n\r\n                    if (!ret) {\r\n                        this.specializationCache[ specId ] = this;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (this.baseType) {\r\n                this.baseType.initSelfReferences(this);\r\n            }\r\n\r\n            if (this.interfaces) {\r\n                for (i = 0; i < this.interfaces.length; i++) {\r\n                    this.interfaces[ i ].initSelfReferences(this);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n    specialize(...rest: (Type | number | Function)[]): Type {\r\n        var i;\r\n        if (!this.isGenericType) {\r\n            return this;\r\n        }\r\n\r\n        var specId = this.getSpecId(Array.from(arguments));\r\n        var ret = this.specializationCache[ specId ];\r\n        if (ret) {\r\n            return ret;\r\n        }\r\n        ret = new Type(this.InstanceConstructor, this._fullName, this.baseType, this.interfaces, this._staticInitializer);\r\n        ret.specializationCache = this.specializationCache;\r\n\r\n        var placeholders = this.typeArguments;\r\n        var hasPlaceholders = false;\r\n\r\n        // Make sure the placeholders are actually numbers. If they are types, we are re-specializing an\r\n        // already specialized type.\r\n        if (placeholders && placeholders.length) {\r\n            /* going back to how it used to be. we shouldn't assume that the number/order of the arguments\r\n                relates to the typearguments. this may be an interface that has its type information already\r\n                and either has placeholders or is a closed type\r\n            // you can have a mixed bag where some are placeholders and others are not and the\r\n            // placeholder doesn't have to be the first slot\r\n            for (i = 0; i < placeholders.length; i++) {\r\n                if (isFinite(placeholders[ i ])) {\r\n                    hasPlaceholders = true;\r\n                    break;\r\n                }\r\n            }*/\r\n            hasPlaceholders = true;\r\n        }\r\n\r\n        ret.typeArguments = [ ];\r\n        if (hasPlaceholders) {\r\n            for (i = 0; i < placeholders.length; i++) {\r\n\r\n                // if the argument being provided is a placeholder index and we already have\r\n                // a placeholder then keep the index we have. otherwise we're taking the index\r\n                // of the parent type\r\n                if (typeof placeholders[i] === \"number\" &&\r\n                    isFinite(<number>placeholders[ i ]) && !isFinite(arguments[<number>placeholders[ i ] ])) {\r\n                    ret.typeArguments[ i ] = arguments[ <number>placeholders[ i ] ];\r\n                } else {\r\n                    ret.typeArguments[ i ] = placeholders[ i ];\r\n                }\r\n            }\r\n        } else {\r\n            for (i = 0; i < arguments.length; i++) {\r\n                ret.typeArguments[ i ] = arguments[ i ];\r\n            }\r\n        }\r\n\r\n        // since the placeholder indexes for the basetype and interfaces implemented are based\r\n        // on the order of the type arguments for the defining types we should pass its typeargs\r\n        // and not the outermost type's type arguments which may be different in number and order\r\n        // than the base type of the base types and interfaces implemented\r\n        if (this.baseType && this.baseType.typeArguments) {\r\n            ret.baseType = this.specialize.apply(this.baseType, ret.typeArguments);\r\n        }\r\n\r\n        if (this.interfaces) {\r\n            ret.interfaces = [ ];\r\n            for (i = 0; i < this.interfaces.length; i++) {\r\n                ret.interfaces[ i ] = this.specialize.apply(this.interfaces[ i ], ret.typeArguments);\r\n            }\r\n        }\r\n\r\n        // rather than doing this check in various places we could just cache a field on the type\r\n        if (this._fullName == \"Nullable$1\" && ret.typeArguments.length == 1) {\r\n            ret.isNullable = true;\r\n        }\r\n\r\n        // if this was a self referencing type (e.g. IEquatable<Int32> for Int32 then we won't have the\r\n        // specId yet because we don't know the type argument. we'll update the cache when we update\r\n        // the self references. otherwise other types that use self references (but for a different type)\r\n        // will get and use the wrong type arguments\r\n        if (specId) {\r\n            this.specializationCache[ specId ] = ret;\r\n            ret.stringId = ret.generateString();\r\n        } else {\r\n            // the self referencing type needs to be able to put itself into the specialization cache\r\n            // of the original type\r\n            //ret.specializationCache = this.specializationCache;\r\n        }\r\n\r\n        if (this.InstanceConstructor != null) {\r\n            var _self = this;\r\n            ret.InstanceConstructor = function () {\r\n                _self.InstanceConstructor.apply(this,\r\n                    ret.typeArguments.concat(Array.prototype.slice.call(arguments, 0)));\r\n                return this;\r\n            };\r\n            ret.InstanceConstructor.prototype = this.InstanceConstructor.prototype;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    equals(other: Type) : boolean {\r\n        if (!(other instanceof Type)) {\r\n            return false;\r\n        }\r\n        if (this.identifier !== other.identifier) {\r\n            return false;\r\n        }\r\n        if (this.typeArguments === null && other.typeArguments === null) {\r\n            return true;\r\n        }\r\n        if (this.typeArguments === null && other.typeArguments !== null) {\r\n            return false;\r\n        }\r\n        if (this.typeArguments !== null && other.typeArguments === null) {\r\n            return false;\r\n        }\r\n        if (this.typeArguments.length !== other.typeArguments.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < this.typeArguments.length; i++) {\r\n\r\n            //TODO: handle covariance case here.\r\n            //if (!$.ig.util.canAssign(this.typeArguments[ i ], other.typeArguments[ i ])) {\r\n            //    return false;\r\n            //}\r\n            if (!Type.checkEquals(this.typeArguments[ i ], other.typeArguments[ i ])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n    static checkEquals(type1: any, type2: any): boolean {\r\n        if (type1 instanceof Type) {\r\n            return type1.equals(type2);\r\n        } else if (type2 instanceof Type) {\r\n            return type2.equals(type1);\r\n        } else {\r\n            return type1 === type2;\r\n        }\r\n    }\r\n\r\n    static op_Equality(type1: Type, type2: Type): boolean { \r\n        return type1.equals(type2);\r\n    }\r\n    static op_Inequality(type1: Type, type2: Type) { \r\n        return !type1.equals(type2);\r\n    }\r\n\r\n    generateString() : string {\r\n        if (!this.typeArguments || !this.typeArguments.length) {\r\n            return this.identifier.toString();\r\n        } else {\r\n            var ret = this.identifier.toString() + \"[\";\r\n            var first = true;\r\n            for (var i = 0; i < this.typeArguments.length; i++) {\r\n                if (this.typeArguments[ i ] == undefined) {\r\n                    continue;\r\n                }\r\n                if (first) { first = false; } else { ret += \",\"; }\r\n                if (this.typeArguments[ i ].toString) {\r\n                    ret += this.typeArguments[ i ].toString();\r\n                } else {\r\n                    ret += (<Type>this.typeArguments[ i ]).identifier.toString();\r\n                }\r\n            }\r\n            ret += \"]\";\r\n            return ret;\r\n        }\r\n    }\r\n    get isValueType() : boolean {\r\n        return this.baseType === ValueType.prototype.$type;\r\n    }\r\n    isAssignableFrom(tOther: Type): boolean {\r\n\r\n        // TODO: Unit test and make sure this is right (especially with generics\r\n        if (this === tOther) {\r\n            return true;\r\n        }\r\n\r\n        if (tOther.baseType && this.isAssignableFrom(tOther.baseType)) {\r\n            return true;\r\n        }\r\n\r\n        if (tOther.interfaces) {\r\n            for (var i = 0; i < tOther.interfaces.length; i++) {\r\n                if (this.isAssignableFrom(tOther.interfaces[ i ])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    isInstanceOfType(value: Type | string): boolean {\r\n        return typeCast(this, value) !== null;\r\n    }\r\n    get isPrimitive() {\r\n        return this === Number_$type ||\r\n            this === Boolean_$type;\r\n    }\r\n            \r\n    static canAssign(targetType: Type, type: Type) : boolean {\r\n\t\tif (targetType.name === 'Nullable$1' && type.name !== 'Nullable$1') {\r\n\t\t\ttargetType = Nullable.getUnderlyingType(targetType);\r\n\t\t}\r\n\r\n\t\treturn Type.canAssignSimple(targetType, type);\r\n\t}\r\n\r\n\tstatic canAssignSimple(targetType: Type, type: Type): boolean {\r\n\t\tif (targetType === type || Type.checkEquals(targetType, type)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (type.interfaces) {\r\n\t\t\tfor (var i = 0; i < type.interfaces.length; i++) {\r\n\t\t\t\tif (Type.canAssignSimple(targetType, type.interfaces[i])) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (type.baseType) {\r\n\t\t\treturn Type.canAssignSimple(targetType, type.baseType);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t\r\n\r\n    static createInstance<T>($t: Type | Function): T {\r\n        if ($t === Number || $t == Number_$type ||\r\n            (<Type>$t).isEnumType) {\r\n            return <T><any>0;\r\n        }\r\n\r\n        if ($t == Boolean || $t == Boolean_$type) {\r\n            return <T><any>false;\r\n        }\r\n\r\n        if ((<Type>$t).InstanceConstructor) {\r\n            var result;\r\n            //result = Object.create((<Type>$t).InstanceConstructor.prototype);\r\n\r\n            let C: any = (<Type>$t).InstanceConstructor;\r\n            //(<Type>$t).InstanceConstructor.apply(result, Array.prototype.slice.call(arguments, 1));\r\n            result = new C(...Array.prototype.slice.call(arguments, 1));\r\n            return <T>result;\r\n        }\r\n\r\n        throw new Error(\"Cannot find instance constructor for the type parameter\");\r\n    };\r\n\r\n    static getDefaultValue<T>($t: Type): T {\r\n\t\tif ($t === Number_$type ||\r\n\t\t\t$t.isEnumType) {\r\n\t\t\treturn <T><any>0;\r\n\t\t}\r\n\r\n\t\tif ($t == Boolean_$type) {\r\n\t\t\treturn <T><any>false;\r\n\t\t}\r\n\r\n\t\tif ($t.baseType === (<any>ValueType).$type) {\r\n\t\t\treturn Type.createInstance<T>($t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n    \r\n    static getPrimitiveHashCode(v: any): number {\r\n        var val = typeof v;\r\n        if (val === \"string\" || v instanceof String) {\r\n            var hash = 0, i, chr, len;\r\n\t\t\tif (v.length === 0) {\r\n\t\t\t\treturn hash;\r\n\t\t\t}\r\n\t\t\tfor (i = 0, len = this.length; i < len; i++) {\r\n\t\t\t\tchr = v.charCodeAt(i);\r\n\t\t\t\t/*jslint bitwise: true */\r\n\t\t\t\thash = ((hash << 5) - hash) + chr;\r\n\t\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t\t}\r\n\r\n\t\t\treturn hash;\r\n        } else if (val === \"boolean\" || v instanceof Boolean) {\r\n            return +v;\r\n        } else {\r\n            return v;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // static mark(t: Function, name: string,\r\n    //     baseType: Type = Base.prototype.$type, \r\n    //     interfaces: Type[] = null, \r\n    //     staticInitializer: () => void = null) {\r\n    //     t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\r\n    //     (<any>t).$type = t.prototype.$type;\r\n    // }\r\n\r\n    public static decodePropType(val: any): Type {\r\n        if (val === 0) {\r\n            return Boolean_$type;\r\n        }\r\n        else if (val === 1) {\r\n            return Number_$type;\r\n        }\r\n        else if (val === 2) {\r\n            return String_$type;\r\n        }\r\n        else if (val === 3) {\r\n            return Date_$type;\r\n        }\r\n        else {\r\n            return <Type>val;\r\n        }\r\n    }\r\n}\r\n\r\nexport function markDep(depProp: Function, PropMeta: Function, t: Function, changedFunction: string,\r\n    props: any[]) {\r\n    let names: string[] = [];\r\n    let currName = \"\";\r\n    let currOpts: any[] = [];\r\n    let hasDefaultValue = false;\r\n    let defaultValue: any = null;\r\n    let propType: Type = null;\r\n    let changeHandler : (sender: any, args: any) => void = null;\r\n    let setterFunc: (value: any) => void = null;\r\n    let getterFunc: () => any = null;\r\n    let aliasName: string = null;\r\n    let propertyAlias: string = null;\r\n\r\n    //debugger;\r\n    for (var i = 0; i < props.length; i++) {\r\n        if (i % 2 == 0) {\r\n            currName = props[i];\r\n            if (currName.indexOf(\":\") >= 0) {\r\n                let parts = currName.split(':');\r\n                if (parts.length == 2) {\r\n                    currName = parts[0];\r\n                    aliasName = parts[1];\r\n                    propertyAlias = currName.substring(0, 1).toLowerCase() + currName.substring(1) + \"Property\";\r\n                } else {\r\n                    currName = parts[0];\r\n                    aliasName = parts[1];\r\n                    if (aliasName.length == 0) {\r\n                        aliasName = currName.substring(0, 1).toLowerCase() + currName.substring(1);\r\n                    }\r\n                    propertyAlias = parts[2];\r\n                }\r\n            } else {\r\n                aliasName = currName.substring(0, 1).toLowerCase() + currName.substring(1);\r\n                propertyAlias = aliasName + \"Property\";\r\n            }\r\n            names.push(currName);\r\n        } else {\r\n            currOpts = props[i];\r\n            if (currOpts.length == 2) {\r\n                hasDefaultValue = true;\r\n                defaultValue = currOpts[1];\r\n                propType = Type.decodePropType(currOpts[0]);\r\n            } else {\r\n                hasDefaultValue = false;\r\n                propType = Type.decodePropType(currOpts[0]);\r\n            }\r\n\r\n            let changedName = currName;\r\n            changeHandler = (o: any, a: any) => {\r\n                o[changedFunction].call(o, changedName, a.oldValue, a.newValue);\r\n            }\r\n\r\n            let meta: any = null;\r\n                \r\n            if (hasDefaultValue) {\r\n                meta = (<any>PropMeta).createWithDefaultAndCallback(defaultValue, changeHandler);\r\n            } else { \r\n                meta = (<any>PropMeta).createWithCallback(changeHandler);\r\n            }\r\n\r\n            let dp = (<any>depProp).registerAlt(currName, propType, (<any>t).$type, meta);\r\n                \r\n            setterFunc = function (this: any, v: any): void {\r\n                (<any>this).setValueAlt(dp, v);\r\n            }\r\n\r\n            if (propType.isEnumType) {\r\n                getterFunc = function (this: any): any {\r\n                    return typeGetValue((<any>this).getValueAlt(dp));\r\n                }\r\n            }\r\n            else {\r\n                getterFunc = function (this: any): any {\r\n                    return (<any>this).getValueAlt(dp);\r\n                }\r\n            }\r\n\r\n            Object.defineProperty(t.prototype, aliasName, {\r\n                set: setterFunc,\r\n                get: getterFunc,\r\n                configurable: true\r\n            });\r\n\r\n            (<any>t)[propertyAlias] = dp; \r\n        }\r\n\r\n    }\r\n\r\n    // let superClass = (<any>t).$type.baseType;\r\n    // if (superClass !== null && superClass !== undefined) {\r\n    //     let superNames = superClass.InstanceConstructor.$$p;\r\n    //     if (superNames) {\r\n    //         for (var j = superNames.length - 1; j >= 0; j--) {\r\n    //             names.unshift(superNames[j]);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    //(<any>t).$$p = names;\r\n    return names;\r\n}\r\n\r\nexport function typeGetValue(v: any): any {\r\n    if (v !== null && v.$type && v.$type.isEnumType) {\r\n        return v.value;\r\n    }\r\n\r\n    return v;\r\n}\r\n\r\nexport function typeCast<T>(targetType: Type | Function, obj: any): T {\r\n    if (obj === undefined || obj === null) {\r\n        return null;\r\n    }\r\n\r\n    if (targetType === Array) {\r\n        return <T><any>((obj instanceof Array) ? obj : null);\r\n    }\r\n\r\n    if (targetType === String) {\r\n        targetType = String_$type;\r\n    }\r\n    if (targetType === Number) {\r\n        targetType = Number_$type;\r\n    }\r\n    if (targetType === Boolean) {\r\n        targetType = Boolean_$type;\r\n    }\r\n    if (targetType === Date) {\r\n        targetType = Date_$type;\r\n    }\r\n\r\n    var type = obj;\r\n\r\n    if (obj.$type) {\r\n        type = obj.$type;\r\n    }\r\n    else if (typeof obj === 'number') {\r\n        type = targetType === Number ? Number : Number_$type;\r\n    }\r\n    else if (typeof obj === 'string') {\r\n        type = String_$type;\r\n    }\r\n    else if (typeof obj === 'boolean') {\r\n        type = Boolean_$type;\r\n    }\r\n    else if (obj instanceof Date) {\r\n        type = Date_$type;\r\n    }\r\n    else if (obj instanceof Array) {\r\n        type = Array_$type;\r\n    }\r\n\r\n    if (Type.canAssignSimple(<Type>targetType, type)) {\r\n        return obj;\r\n    }\r\n\r\n    if (targetType.name === 'Nullable$1' && type.name !== 'Nullable$1') {\r\n        targetType = Nullable.getUnderlyingType(<Type>targetType);\r\n        if (Type.canAssignSimple(<Type>targetType, type)) {\r\n            return <T><any>toNullable(targetType, obj);\r\n        }\r\n\r\n        return <T><any>toNullable(targetType, null);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function typeCastObjTo$t<T>($t: Type, v: any) {\r\n\r\n    var shouldWrap = false;\r\n    if ($t.isNullable) {\r\n        $t = <Type>$t.typeArguments[ 0 ];\r\n        shouldWrap = true;\r\n    }\r\n\r\n    if (v !== null && $t.isEnumType) {\r\n        v = v.value;\r\n    }\r\n\r\n    return shouldWrap ? toNullable($t, v) : v;\r\n}\r\n\r\n\r\nlet pendingStaticCtors = new Array();\r\nexport function markStruct(t: Function, name: string,\r\n        baseType: Type = ValueType.prototype.$type, \r\n        interfaces: Type[] = null, \r\n        staticInitializer: () => void = null) {\r\n    t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\r\n\r\n    //TODO: do we need/want a flag on the function like we have in js?\r\n    if (typeof (<any>t).staticInit === \"function\") {\r\n        pendingStaticCtors.push(t);\r\n    }\r\n\r\n    (<any>t).$type = t.prototype.$type;\r\n    (<any>t).$ = t.prototype.$type;\r\n\r\n    return t.prototype.$type;\r\n}\r\n\r\nexport interface EnumInfo {\r\n    names: string[];\r\n    actualNames: string[];\r\n    namesValuesMap: { [index: string]: number };\r\n    actualNamesValuesMap: { [index: string]: number };\r\n}\r\n\r\n/* #__PURE__ */\r\nexport function markEnum(name: string, encodedDef: string): Type {\r\n    let t = new Type(null, name, Base.prototype.$type, [ IConvertible_$type ]);\r\n    t.isEnumType = true;\r\n\r\n    let parts = encodedDef.split(\"|\");\r\n    let names: string[] = [];\r\n    let actualNames: string[] = [];\r\n    let namesValuesMap: { [index: string]: number } = {};\r\n    let actualNamesValuesMap: { [index: string]: number } = {};\r\n\r\n    for (var i = 0; i < parts.length; i++) {\r\n        let subParts = parts[i].split(\",\");\r\n        let nameParts = subParts[0].split(\":\");\r\n\r\n        let name = nameParts[0];\r\n        let actualName = nameParts[0];\r\n        if (nameParts.length > 1) {\r\n            actualName = nameParts[1];\r\n        }\r\n        names.push(name);\r\n        actualNames.push(actualName);\r\n        //TODO: did we support string enums??\r\n        namesValuesMap[name] = parseInt(subParts[1]);\r\n        actualNamesValuesMap[actualName] = parseInt(subParts[1]);\r\n    }\r\n\r\n    let info: EnumInfo = {\r\n        names: names,\r\n        actualNames: actualNames,\r\n        namesValuesMap: namesValuesMap,\r\n        actualNamesValuesMap: actualNamesValuesMap\r\n    };\r\n    t.enumInfo = info;\r\n    \r\n    return t;\r\n}\r\n\r\nlet markTypeInitialized = false;\r\nexport function markType(t: Function, name: string,\r\n        baseType: Type = Base.prototype.$type, \r\n        interfaces: Type[] = null, \r\n        staticInitializer: () => void = null): Type {\r\n    t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\r\n    if (!markTypeInitialized) {\r\n        markTypeInitialized = true;\r\n        markType(Type, \"Type\");\r\n        markType(Base, \"Base\", null);\r\n    }\r\n\r\n    //TODO: do we need/want a flag on the function like we have in js?\r\n    if (typeof (<any>t).staticInit === \"function\") {\r\n        pendingStaticCtors.push(t);\r\n    }\r\n\r\n    //t.prototype.$ = t.prototype.$type;\r\n    (<any>t).$type = t.prototype.$type;\r\n    (<any>t).$ = t.prototype.$type;\r\n    return t.prototype.$type;\r\n}\r\n\r\nexport function callStaticConstructors() {\r\n    if (pendingStaticCtors.length > 0) {\r\n        //TODO: is the copy of the array needed? \r\n        let classes = Array.from(pendingStaticCtors);\r\n        pendingStaticCtors.length = 0;\r\n        for (let c of classes) {\r\n            c.staticInit();\r\n        }\r\n    }\r\n}\r\n//markType(Base, \"BaseObject\");\r\n//markType(Type, \"Type\");\r\n\r\nexport interface IConvertible {\r\n    toBoolean(provider: IFormatProvider): boolean;\r\n    toByte(provider: IFormatProvider): number;\r\n    toChar(provider: IFormatProvider): string;\r\n    toDateTime(provider: IFormatProvider): Date;\r\n    toDecimal(provider: IFormatProvider): number;\r\n    toDouble(provider: IFormatProvider): number;\r\n    toInt16(provider: IFormatProvider): number;\r\n    toInt32(provider: IFormatProvider): number;\r\n    toInt64(provider: IFormatProvider): number;\r\n    toSByte(provider: IFormatProvider): number;\r\n    toSingle(provider: IFormatProvider): number;\r\n    toString1(provider: IFormatProvider): string;\r\n    toUInt16(provider: IFormatProvider): number;\r\n    toUInt32(provider: IFormatProvider): number;\r\n    toUInt64(provider: IFormatProvider): number;\r\n}\r\nexport let IConvertible_$type = new Type(null, \"IConvertible\");\r\n\r\n\r\nexport class Enum extends Base {\r\n    static $t: Type = markType(Enum, \"Enum\");\r\n}\r\nclass EnumBox extends Enum {\r\n    constructor(public readonly value: number, type: Type) {\r\n        super();\r\n        this.$type = type;\r\n    }\r\n    getHashCode(): number {\r\n        return this.value;\r\n    }\r\n    // TODO: Fill out remaining IConvertible implementation\r\n    toDouble(provider: IFormatProvider): number {\r\n        return this.value;\r\n    }\r\n    toString(): string {\r\n        return EnumUtil.getName(this.$type, this.value);\r\n    }\r\n}\r\n\r\nexport function getBoxIfEnum<T>($t: Type, v: any) {\r\n    if (v !== null && $t) { // TODO: Remove the $t check here and fix the null ref issue\r\n        if ($t.isNullable) {\r\n            $t = <Type>$t.typeArguments[ 0 ];\r\n        }\r\n\r\n        if ($t.isEnumType) {\r\n            return enumGetBox<T>($t, v);\r\n        }\r\n    }\r\n\r\n    return v;\r\n};\r\n\r\nexport function enumGetBox<T>($t: Type, v: number): T {\r\n    if (!(<any>$t)._boxes) {\r\n        (<any>$t)._boxes = {};\r\n    }\r\n\r\n    if (!(<any>$t)._boxes[ v ]) {\r\n        (<any>$t)._boxes[v] = new EnumBox(v, $t);\r\n    }\r\n\r\n    return (<any>$t)._boxes[ v ];\r\n}\r\n\r\nexport class EnumUtil {\r\n    private static getValueFromName(values: any, enumType: Type, value: string, ignoreCase: boolean) {\r\n        if (values.hasOwnProperty(value)) {\r\n            return enumGetBox(enumType, values[value]);\r\n        } else if (ignoreCase) {\r\n            var upper = value.toUpperCase();\r\n\r\n            for (var x in values) {\r\n                if (x.toUpperCase() === upper) {\r\n                    return enumGetBox(enumType, values[x]);\r\n                }\r\n            }\r\n        } else {\r\n            // A.S. Nov 4, 2016 Adjusted to handle case where leading char is _.\r\n            var firstChar = value.charAt(0);\r\n            if (firstChar != \"_\") {\r\n                value = firstChar.toLowerCase() + value.substr(1);\r\n            } else {\r\n                value = \"_\" + value.charAt(1).toLowerCase() + value.substr(2);\r\n            }\r\n            if (values.hasOwnProperty(value)) {\r\n                return enumGetBox(enumType, values[value]);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static parse(enumType: Type, value: string, ignoreCase: boolean) {\r\n        //var info = Type.getDefinedNameAndNamespace(enumType.fullName);\r\n\r\n        //if (Type.canAssign(this.$type, enumType)) \r\n        {\r\n            //var p = info.namespace[ info.name ].prototype;\r\n            var values = enumType.isEnumType ? enumType.enumInfo.actualNamesValuesMap : enumType.InstanceConstructor.prototype;\r\n\r\n            let val = EnumUtil.getValueFromName(values, enumType, value, ignoreCase);\r\n            if (val !== null) {\r\n                return val;\r\n            }\r\n\r\n            if (enumType.isEnumType) {\r\n                values = enumType.enumInfo.namesValuesMap;\r\n\r\n                let val = EnumUtil.getValueFromName(values, enumType, value, ignoreCase);\r\n                if (val !== null) {\r\n                    return val;\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new Error(\"Invalid \" + enumType.name + \" value: \" + value);\r\n    }\r\n    \r\n    // static $getName(value: number): string {\r\n\r\n    // }\r\n    // static $value(): number {\r\n\r\n    // }\r\n    //private _v: number;\r\n\r\n    static enumHasFlag(value: number, flag: number): boolean {\r\n\t\t/*jslint bitwise: true */\r\n\t\treturn (value & flag) === flag;\r\n\t}\r\n\r\n    \r\n    static toString(enumType: Type, value: any): string {\r\n        return EnumUtil.getName<any>(enumType, value);\r\n    }\r\n\r\n    static getName<T>(enumType: Type, v: number): string {\r\n        if ((<any>enumType)._nameMap == undefined) {\r\n            let vals = EnumUtil.getValues<T>(enumType);\r\n            let names = enumType.isEnumType ? enumType.enumInfo.names : EnumUtil.getNames<T>(enumType);\r\n\r\n            let map: any = {};\r\n            for (let i = 0; i < vals.length; i++) {\r\n                map[vals[i]] = names[i];\r\n            }\r\n            (<any>enumType)._nameMap = map;\r\n        }\r\n        let lookup = (<any>enumType)._nameMap;\r\n        return lookup[v];\r\n    }\r\n\r\n    static getFlaggedName(enumType: Type, v: number, getName: (v: number) => string): string {\r\n        var names = [ ];\r\n        var original = v;\r\n        var zeroValueName;\r\n        var value;\r\n\r\n        var values: string[] = [ ];\r\n        for (var p in this) {\r\n            if (this.hasOwnProperty(p)) {\r\n                value = (<any>enumType)[ p ];\r\n                if (typeof (<any>enumType)[ p ] == \"number\") {\r\n                    values.push(p);\r\n                }\r\n            }\r\n        }\r\n\r\n        values.sort((a, b) => { return (<any>this)[ a ] - (<any>this)[ b ]; });\r\n\r\n        for (var i = values.length - 1; i >= 0; i--) {\r\n            value = <number>(<any>this)[ values[ i ] ];\r\n            if (value === 0) {\r\n                zeroValueName = getName(0);\r\n            }\r\n                /*jslint bitwise: true */\r\n            else if ((v & value) === value) {\r\n                v -= value;\r\n                names.unshift(getName(value));\r\n            }\r\n        }\r\n\r\n        if (v !== 0) {\r\n            return original.toString();\r\n        }\r\n\r\n        if (original !== 0) {\r\n            return names.join(\", \");\r\n        }\r\n\r\n        return zeroValueName || \"0\";\r\n    }\r\n    static getValues<T>($t: Type): number[] {\r\n        var result = [ ];\r\n\r\n        if ($t.isEnumType) {\r\n            for (let i = 0; i < $t.enumInfo.actualNames.length; i++) {\r\n                result.push($t.enumInfo.actualNamesValuesMap[$t.enumInfo.actualNames[i]]);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        var p = $t.isEnumType ?\r\n            $t.enumInfo.actualNames : $t.InstanceConstructor.prototype;\r\n        for (var member in p) {\r\n            if (p.hasOwnProperty(member)) {\r\n                if (typeof p[ member ] === \"number\") {\r\n                    result.push(p[ member ]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n    static getNames<T>($t: Type): string[] {\r\n        var result = [ ];\r\n\r\n        if ($t.isEnumType) {\r\n            for (let i = 0; i < $t.enumInfo.actualNames.length; i++) {\r\n                result.push($t.enumInfo.actualNames[i]);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        var p = $t.isEnumType ?\r\n            $t.enumInfo.actualNames : $t.InstanceConstructor.prototype;\r\n        for (var member in p) {\r\n            if (p.hasOwnProperty(member)) {\r\n                if (typeof p[ member ] === \"number\") {\r\n                    result.push(member);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n    \r\n    static getEnumValue<T>($t: Type, v: any): T {\r\n\t\tif (v !== null) {\r\n\t\t\tif (typeof v === \"number\") {\r\n\t\t\t\treturn <T><any>v;\r\n\t\t\t} else {\r\n\t\t\t\treturn v.value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn <T><any>0;\r\n\t}\r\n\r\n    static isDefined<T>($t: Type, value: T) {\r\n        value = typeGetValue(value);\r\n        var p = $t.isEnumType ?\r\n            $t.enumInfo.actualNamesValuesMap : $t.InstanceConstructor.prototype;\r\n        for (var member in p) {\r\n            if (p.hasOwnProperty(member)) {\r\n                if (p[ member ] === value) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // TODO: Fill out remaining IConvertible implementation\r\n    static toDouble(enumType: Type, value: any, provider: any): number {\r\n        return value.value;\r\n    }\r\n    static toObject<T>($t: Type, value: T): any {\r\n        return value;\r\n    }\r\n    static tryParse$1<TEnum>($tEnum: Type, value: string, ignoreCase: boolean, result: TEnum): { ret: boolean, p2: TEnum } {\r\n        try {\r\n            return {\r\n                ret: true,\r\n                p2: typeGetValue(EnumUtil.parse($tEnum, value, ignoreCase))\r\n            };\r\n        } catch (e) {\r\n            result = Type.createInstance<TEnum>($tEnum);\r\n            return {\r\n                ret: false,\r\n                p2: result\r\n            };\r\n        }\r\n    }\r\n}   \r\n\r\nexport class ValueType extends Base {\r\n    static $t: Type = markType(ValueType, \"ValueType\");\r\n}\r\n\r\nexport class Nullable extends Base {\r\n    static getUnderlyingType(nullableType: Type): Type {\r\n        if (nullableType.isGenericType !== undefined && nullableType.isGenericType &&\r\n            !nullableType.isGenericTypeDefinition &&\r\n            Nullable$1.prototype.$type.typeName == nullableType.typeName) {\r\n            return <Type>nullableType.genericTypeArguments[ 0 ];\r\n        }\r\n\r\n        return null;\r\n    }\r\n    static $t: Type = markType(Nullable, \"Nullable\");\r\n}\r\n\r\nexport class Nullable$1<T> extends Base {\r\n    protected $t: Type = null;\r\n    private _value: T = null;\r\n    constructor($t: Type, value: T) {\r\n        super();\r\n        this.$t = $t;\r\n        this.$type = this.$type.specialize(this.$t);\r\n        \r\n        if (value !== undefined) {\r\n            this._value = value;\r\n        }\r\n    }\r\n\r\n    static nullableEquals(v1: any, v2: any): boolean {\r\n\t\t/*jshint eqnull:true */\r\n\t\tvar v1IsNull = (v1 == null) || (!!v1.isNullable && !v1.hasValue);\r\n\t\tvar v2IsNull = (v2 == null) || (!!v2.isNullable && !v2.hasValue);\r\n\r\n\t\tif (v1IsNull && v2IsNull) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (v1IsNull != v2IsNull) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar val1 = v1;\r\n\t\tvar val2 = v2;\r\n\t\tif (v1.isNullable) {\r\n\t\t\tval1 = v1.value;\r\n\t\t}\r\n\t\tif (v2.isNullable) {\r\n\t\t\tval2 = v2.value;\r\n\t\t}\r\n\r\n\t\treturn val1 == val2;\r\n\t}\r\n\r\n    equals(value: Nullable$1<T>): boolean {\r\n        return Nullable$1.nullableEquals(this, value);\r\n    }\r\n    getHashCode(): number {\r\n        if (this._value === null) {\r\n            return 0;\r\n        }\r\n        if ((<any>this._value)[\"getHashCode\"] !== undefined) {\r\n            return (<any>this._value).getHashCode();\r\n        }\r\n        return Type.getPrimitiveHashCode(this._value);\r\n    }\r\n    get hasValue(): boolean {\r\n        return this._value !== null;\r\n    }\r\n    toString(): string {\r\n        return this._value === null ? \"\" : this._value.toString();\r\n    }\r\n    get value(): T {\r\n        return this._value;\r\n    }\r\n    set value(value: T) {\r\n        this._value = value;\r\n    }\r\n    getValueOrDefault(): T {\r\n        if (this.hasValue) {\r\n            return this._value;\r\n        } else {\r\n            return this.getDefaultValue();\r\n        }\r\n    }\r\n    getDefaultValue(): T {\r\n        if (Type.canAssign(Number_$type, this.$t)) {\r\n            return <T><any>0;\r\n        } else if (Type.canAssign(Boolean_$type, this.$t)) {\r\n            return <T><any>false;\r\n        } else if (this.$t.baseType == ValueType.prototype.$type) {\r\n            return Type.createInstance<T>(this.$t);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    getValueOrDefault1(defaultValue: T): T {\r\n        if (this.hasValue) {\r\n            return this._value;\r\n        } else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n    preIncrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        this._value = <T><any>((<number><any>this._value) + 1);\r\n        return this;\r\n    }\r\n    preDecrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        this._value = <T><any>((<number><any>this._value) - 1);\r\n        return this;\r\n    }\r\n    postIncrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        var originalValue = this._value;\r\n        this._value = <T><any>((<number><any>this._value) + 1);\r\n        return new Nullable$1(this.$t, originalValue);\r\n    }\r\n    postDecrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        var originalValue = this._value;\r\n        this._value = <T><any>((<number><any>this._value) - 1);\r\n        return new Nullable$1(this.$t, originalValue);\r\n    }\r\n    readonly isNullable = true;\r\n    static $t: Type = markType(Nullable$1, \"Nullable$1\");\r\n}\r\n\r\nexport function toNullable<T>(t: Type, value: T | Nullable$1<T>): Nullable$1<T> {\r\n\r\n    if (value == null) {\r\n        return t._$nullNullable || (t._$nullNullable = new Nullable$1<T>(t, null));\r\n    } else if ((<any>value).isNullable) {\r\n        return <Nullable$1<T>>value;\r\n    }\r\n\r\n    return new Nullable$1<T>(t, <T>value);\r\n}\r\n\r\nexport interface IComparable {\r\n    compareToObject(other: object): number;\r\n}\r\nexport let IComparable_$type = new Type(null, \"IComparable\");\r\nexport interface IComparable$1<T> {\r\n    compareTo(other: T): number;\r\n}\r\nexport let IComparable$1_$type = new Type(null, \"IComparable$1\");\r\nexport interface IEquatable$1<T> {\r\n    equals(other: T): boolean;\r\n}\r\nexport let IEquatable$1_$type = new Type(null, \"IEquatable$1\");\r\n\r\nexport interface INotifyPropertyChanged {\r\n    propertyChanged: (sender: object, args: PropertyChangedEventArgs) => void;\r\n}\r\nexport let INotifyPropertyChanged_$type = new Type(null, \"INotifyPropertyChanged\");\r\n\r\nexport class PropertyChangedEventArgs extends Base {\r\n    constructor(propertyName: string) {\r\n        super();\r\n        this._propertyName = propertyName;\r\n    }\r\n    private _propertyName: string = null;\r\n    get propertyName() : string {\r\n        return this._propertyName;\r\n    }\r\n    set propertyName(value: string) {\r\n        this._propertyName = value;\r\n    }\r\n\r\n    static $t: Type = markType(PropertyChangedEventArgs, \"PropertyChangedEventArgs\");\r\n}\r\n    \r\nexport class IteratorWrapper<T> implements IEnumerator$1<T> {\r\n    private _inner: Iterator<T> = null;\r\n    private _getNew: () => Iterator<T> = null;\r\n    constructor (inner: Iterator<T>, getNew: () => Iterator<T>) {\r\n        this._inner = inner;\r\n        this._getNew = getNew;\r\n    }\r\n    private _hasNext: boolean = true;\r\n    private _current: T = null;\r\n    moveNext(): boolean {\r\n        let next = this._inner.next();\r\n        this._hasNext = !next.done;\r\n        this._current = next.value;\r\n        return this._hasNext;\r\n    }\r\n    get current(): T {\r\n        return this._current;\r\n    }\r\n    get currentObject(): T {\r\n        return this._current;\r\n    }\r\n    dispose(): void {\r\n    }\r\n    reset(): void {\r\n        this._inner = this._getNew();\r\n        this._current = null;\r\n        this._hasNext = true;\r\n    }\r\n}\r\n\r\nexport class IterableWrapper<T> implements IEnumerable$1<T>, IEnumerable {\r\n    private _inner: () => Iterable<T> = null;\r\n    constructor (inner: () => Iterable<T>) {\r\n        this._inner = inner;\r\n    }\r\n    getEnumerator() : IEnumerator$1<T> {\r\n        return new IteratorWrapper<T>(this._inner()[Symbol.iterator](), () => this._inner()[Symbol.iterator]());\r\n    }\r\n    getEnumeratorObject(): IEnumerator {\r\n        return new IteratorWrapper<T>(this._inner()[Symbol.iterator](), () => this._inner()[Symbol.iterator]());\r\n    }\r\n}\r\n\r\nexport class EnumeratorWrapper<T> implements Iterator<T> {\r\n    private _inner: IEnumerator$1<T> = null;\r\n    \r\n    constructor (inner: IEnumerator$1<T>) {\r\n        this._inner = inner;\r\n    }\r\n    \r\n    next() : IteratorResult<T> {\r\n        let done = !this._inner.moveNext();\r\n        let value: T = null;\r\n        if (!done) {\r\n            value = this._inner.current;\r\n        }\r\n\r\n        return {\r\n            done: done,\r\n            value: value\r\n        };\r\n    }\r\n}\r\n\r\nexport class EnumeratorWrapperObject<T> implements Iterator<T> {\r\n    private _inner: IEnumerator = null;\r\n\r\n    constructor(inner: IEnumerator) {\r\n        this._inner = inner;\r\n    }\r\n\r\n    next(): IteratorResult<T> {\r\n        let done = !this._inner.moveNext();\r\n        let value: T = null;\r\n        if (!done) {\r\n            value = this._inner.currentObject;\r\n        }\r\n\r\n        return {\r\n            done: done,\r\n            value: value\r\n        };\r\n    }\r\n}\r\n\r\nexport function* getEn(arr: any[]) {\r\n    for (let item of arr) {\r\n        yield item;\r\n    }\r\n}\r\n\r\nexport function getEnumeratorObject(en: any): IEnumerator {\r\n    if ((en instanceof Array || Array.isArray(en))) {\r\n        let arr = <any[]>en;\r\n        return new IteratorWrapper<any>(getEn(arr), () => getEn(arr));\r\n    }\r\n    return en.getEnumeratorObject();\r\n}\r\n\r\nexport function getEnumerator(en: any): IEnumerator$1<any> {\r\n    if ((en instanceof Array || Array.isArray(en))) {\r\n        let arr = <any[]>en;\r\n        return new IteratorWrapper<any>(getEn(arr), () => getEn(arr));\r\n    }\r\n    return en.getEnumerator();\r\n}\r\n\r\nexport class EnumerableWrapper<T> implements Iterable<T> {\r\n    private _inner: IEnumerable$1<T> = null;\r\n    constructor (inner: IEnumerable$1<T>) {\r\n        this._inner = inner;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new EnumeratorWrapper<T>(\r\n            getEnumerator(\r\n            this._inner));\r\n    }\r\n}\r\n\r\nexport class EnumerableWrapperObject implements Iterable<any> {\r\n    private _inner: IEnumerable = null;\r\n    constructor (inner: IEnumerable) {\r\n        this._inner = inner;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new EnumeratorWrapperObject<any>(\r\n            getEnumeratorObject(\r\n            this._inner));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function toEnum<T>(v: () => Iterable<T>): IEnumerable$1<T> {\r\n    return new IterableWrapper<T>(v);\r\n}\r\n    \r\nexport function fromEnum<T>(v: IEnumerable$1<T>): Iterable<T> {\r\n    return new EnumerableWrapper<T>(v);\r\n}\r\n\r\nexport function toEn(v: () => Iterable<any>): IEnumerable {\r\n    return new IterableWrapper<any>(v);\r\n}\r\n    \r\nexport function fromEn<T>(v: IEnumerable): Iterable<T> {\r\n    return new EnumerableWrapperObject(v);\r\n}\r\n\r\nexport function *fromDict<T>(v: Map<string, any>): Iterable<{ key: string, value: any }> {\r\n    for (let item of v) {\r\n        let [key, value] = item;\r\n        yield { key: key, value: value };\r\n    }\r\n}\r\n\r\n\r\nexport let Number_$type: Type = new Type(Number, \"Number\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let String_$type: Type = new Type(String, \"String\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let Date_$type: Type = new Type(Date, \"Date\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let Boolean_$type: Type = new Type(Boolean, \"Boolean\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let Void_$type: Type = new Type(null, \"Void\", Base.prototype.$type);\r\nexport let n$ = Number_$type;\r\nexport let s$ = String_$type;\r\nexport let d$ = Date_$type;\r\nexport let b$ = Boolean_$type;\r\nexport let v$ = Void_$type;\r\n\r\nexport interface Delegate extends Function {\r\n    enumerate?(arr: any[]): void;\r\n    original?: any;\r\n    target?: any;\r\n}\r\n\r\nexport let Delegate_$type = new Type(null, \"Delegate\");\r\n\r\nexport function runOn<T>(target: any, func: T): T {\r\n    var self = <Function><any>func;\r\n    var ret: any = function () {\r\n        return self.apply(target, arguments);\r\n    };\r\n    ret.original = self;\r\n    ret.target = target;\r\n\r\n    return <T>ret;\r\n}\r\n\r\nexport function delegateCombine<T extends Delegate>(del1: T, del2: T): T {\r\n    if (!del1) {\r\n        return del2;\r\n    }\r\n\r\n    if (!del2) {\r\n        return del1;\r\n    }\r\n\r\n    var ret = function () {\r\n        del1.apply(null, arguments);\r\n        return del2.apply(null, arguments);\r\n    };\r\n    (<any>ret).enumerate = function (arr: any[]) {\r\n        if (del1) {\r\n            if (del1.enumerate) {\r\n                del1.enumerate(arr);\r\n            } else {\r\n                arr.push(del1);\r\n            }\r\n        }\r\n        if (del2) {\r\n            if (del2.enumerate) {\r\n                del2.enumerate(arr);\r\n            } else {\r\n                arr.push(del2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return <T><any>ret;\r\n};\r\n\r\n\r\nexport function delegateRemove<T extends Delegate>(del1: T, del2: T): T {\r\n    if (!del1) {\r\n        return null;\r\n    }\r\n    if (!del2) {\r\n        return del1;\r\n    }\r\n\r\n    var arr: any[] = [ ];\r\n    var del = null;\r\n    if (del1.enumerate) {\r\n        del1.enumerate(arr);\r\n    } else {\r\n        arr.push(del1);\r\n    }\r\n\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (del2.original) {\r\n            if (arr[ i ].original == del2.original &&\r\n                arr[ i ].target == del2.target) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (arr[ i ] == del2) {\r\n            continue;\r\n        }\r\n\r\n        del = delegateCombine(del, arr[ i ]);\r\n    }\r\n\r\n    return del;\r\n};\r\n\r\n\r\nexport interface IDisposable {\r\n    dispose(): void\r\n}\r\nexport let IDisposable_$type = new Type(null, 'IDisposable');\r\n\r\nexport interface IEnumerable {\r\n    getEnumeratorObject() : IEnumerator\r\n}\r\nexport let IEnumerable_$type = new Type(null, \"IEnumerable\");\r\n\r\nexport interface IEnumerator {\r\n    currentObject: any;\r\n    moveNext(): boolean;\r\n    reset(): void;\r\n}\r\nexport let IEnumerator_$type = new Type(null, \"IEnumerator\");\r\n\r\nexport interface IEqualityComparer$1<T> {   \r\n    equalsC(x: T, y: T): boolean;\r\n    getHashCodeC(obj: T): number;\r\n}\r\nexport let IEqualityComparer$1_$type = new Type(null, \"IEqualityComparer$1\");\r\n\r\nexport interface IEqualityComparer {   \r\n    equals(x: any, y: any): boolean;\r\n    getHashCode(obj: any): number;\r\n}\r\nexport let IEqualityComparer_$type = new Type(null, \"IEqualityComparer\");\r\n\r\n\r\nexport interface ICollection extends IEnumerable {\r\n    readonly count: number;\r\n    copyTo(array: any[], index: number): void;\r\n    readonly isSynchronized: boolean;\r\n    readonly syncRoot: any;  \r\n}\r\nexport let ICollection_$type = new Type(null, \"ICollection\", null, [ IEnumerable_$type ]);\r\nexport interface IList extends ICollection {\r\n    readonly isFixedSize: boolean;\r\n    readonly isReadOnly: boolean;\r\n    isSynchronized: boolean;\r\n    item(index: number, value?: any): any;\r\n    add(item: any): void;\r\n    clear(): void;\r\n    contains(item: any): boolean;\r\n    indexOf(item: any): number;\r\n    insert(index: number, item: any): void;\r\n    remove(item: any): boolean;\r\n    removeAt(index: number): void;\r\n}\r\nexport let IList_$type = new Type(null, \"IList\", null, [ IEnumerable_$type, ICollection_$type ]);\r\n\r\nexport interface IEnumerable$1<T> extends IEnumerable {\r\n    getEnumerator() : IEnumerator$1<T>\r\n}\r\nexport let IEnumerable$1_$type = new Type(null, \"IEnumerable$1\", null, [ IEnumerable_$type ]);\r\n\r\nexport interface ICollection$1<T> extends IEnumerable$1<T>, IEnumerable {\r\n        readonly count: number;\r\n        readonly isReadOnly: boolean;\r\n        add(item: T): void;   \r\n        clear(): void;\r\n        contains(item: T): boolean;\r\n        copyTo(array: T[], arrayIndex: number): void;\r\n\t\tremove(item: T): boolean;\r\n}\r\nexport let ICollection$1_$type = new Type(null, \"ICollection$1\", null, [ IEnumerable$1_$type.specialize(0), IEnumerable_$type ]);\r\n\r\nexport interface IList$1<T> extends ICollection$1<T>, IEnumerable$1<T>, IEnumerable {\r\n        item(index: number, value?: T): T;\r\n        indexOf(item: T): number;\r\n        insert(index: number, item: T): void;\r\n        removeAt(index: number): void;\r\n}\r\nexport let IList$1_$type = new Type(null, \"IList$1\", null,  [ \r\n    ICollection$1_$type.specialize(0),\r\n    IEnumerable$1_$type.specialize(0),\r\n    IEnumerable_$type ]);\r\n\r\nexport interface IEnumerator$1<T> extends IEnumerator, IDisposable {\r\n    current: T;\r\n    moveNext(): boolean;\r\n    reset(): void;\r\n}\r\nexport let IEnumerator$1_$type = new Type(null, \"IEnumerator$1\", null, [ IEnumerator_$type, IDisposable_$type ]);\r\n\r\nexport interface IDictionary {\r\n    // count: number;\r\n    // isFixedSize: boolean;\r\n    // isReadOnly: boolean;\r\n    // isSynchronized: boolean;\r\n    // item(key: any): object;\r\n    \r\n    // add(key: any, item: any): void;\r\n    // clear(): void;\r\n    // contains(key: any): boolean;\r\n    // remove(key: any): boolean;\r\n}\r\nexport let IDictionary_$type = new Type(null, \"IDictionary\");\r\n\r\nexport class BaseError extends Base {\r\n    static $t: Type = markType(BaseError, \"BaseError\");\r\n    constructor(initNumber: number = -1, ...rest: any[]) {\r\n        super();\r\n        if (initNumber >= 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n        }\r\n        return;\r\n    }   \r\n    protected get_message(): string {\r\n        return this._message;\r\n    }\r\n    get message() : string {\r\n        return this.get_message();\r\n    }\r\n    get innerException(): any {\r\n        return this._innerException;\r\n    }\r\n    private _message: string = null;\r\n    private _innerException: any = null;\r\n    init1(initNumber: number, message: string) {\r\n        this._message = message;\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        this._message = message;\r\n        this._innerException = innerException;\r\n    }\r\n    toString() : string {\r\n        return this._message;\r\n    }\r\n}\r\n\r\nexport class SystemException extends BaseError {\r\n\tconstructor(initNumber: number, ...rest: any[]) {\r\n        super(0);\r\n        if (initNumber > 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n        //super(0);\r\n    }\r\n    init1(initNumber: number, message: string) {\r\n        super.init1(1, message);\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        super.init2(2, message, innerException);\r\n    }\r\n    static $t: Type = markType(SystemException, \"SystemException\", BaseError.prototype.$type);\r\n}\r\n\r\nexport class NotSupportedException extends SystemException {\r\n    constructor (initNumber: number, ...rest: any[]) {\r\n        super(0);\r\n        if (initNumber > 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    init1(initNumber: number, message: string) {\r\n        super.init1(1, message);\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        super.init2(2, message, innerException);\r\n    }\r\n    static $t: Type = markType(NotSupportedException, \"NotSupportedException\", SystemException.prototype.$type);\r\n}\r\n\r\nexport class FormatException extends SystemException {\r\n    constructor (initNumber: number, ...rest: any[]) {\r\n        super(0);\r\n        if (initNumber > 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    init1(initNumber: number, message: string) {\r\n        super.init1(1, message);\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        super.init2(2, message, innerException);\r\n    }\r\n    static $t: Type = markType(FormatException, \"FormatException\", SystemException.prototype.$type);\r\n}\r\n\r\nexport class PointUtil {\r\n    static equals(p1: Point, p2: Point): boolean {\r\n        if (p1 == null && p2 == null) {\r\n            return true;\r\n        }\r\n        if (p1 == null && p2 != null) {\r\n            return false\r\n        }\r\n        if (p1 != null && p2 == null) {\r\n            return false;\r\n        }\r\n        return p1.x == p2.x && p1.y == p2.y;\r\n    }\r\n    static notEquals(p1: Point, p2: Point): boolean {\r\n        return !PointUtil.equals(p1, p2);\r\n    }\r\n    static create() {\r\n        return { x: 0, y: 0, $type: Point_$type };\r\n    }\r\n    static createXY(x: number, y: number) {\r\n        return { x: x, y: y, $type: Point_$type };\r\n    }\r\n}\r\nexport interface Point {\r\n    x: number;\r\n    y: number;\r\n}\r\nexport let Point_$type = new Type(null, \"Point\");\r\n\r\nexport enum SeekOrigin {\r\n    Begin,\r\n    Current,\r\n    End\r\n}\r\n\r\nexport abstract class Stream extends Base {\r\n\t\tclose(): void {\r\n\t\t\tthis.disposeCore(true);\r\n\t\t}\r\n\t\tdispose(): void {\r\n\t\t\tthis.close();\r\n\t\t}\r\n\t\tprotected disposeCore(disposing: boolean): void {\r\n\t\t}\r\n\t\tabstract flush(): void;\r\n\t\treadByte(): number {\r\n\t\t\tvar bytes = [ 0 ];\r\n\t\t\tvar count = (<any>this).read(bytes, 0, 1);\r\n\t\t\tif (count === 0) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\r\n\t\t\treturn bytes[ 0 ];\r\n\t\t}\r\n\t\twriteByte(value: number) {\r\n\t\t\t(<any>this).write([ value ], 0, 1);\r\n        }\r\n        abstract read(bytes: number[], offset: number, count: number): number;\r\n        abstract seek(offset: number, origin: SeekOrigin): number;\r\n        abstract setLength(value: number): void;\r\n        abstract write(buffer: number[], offset: number, count: number): void;\r\n        abstract get canRead(): boolean;\r\n        abstract get canSeek(): boolean;\r\n        abstract get canWrite(): boolean;\r\n        abstract get length(): number;\r\n        abstract get position(): number;\r\n        abstract set position(value: number);\r\n\r\n        static $t: Type = markType(Stream, \"Stream\");\r\n    }\r\n\r\n    export class EventArgs extends Base {\r\n        private static _empty: EventArgs;\r\n        static get empty(): EventArgs {\r\n            if (EventArgs._empty) {\r\n                return EventArgs._empty;\r\n            }\r\n            EventArgs._empty = new EventArgs;\r\n            return EventArgs._empty;\r\n        }\r\n        static $t: Type = markType(EventArgs, \"EventArgs\");\r\n    }\r\n\r\n    export interface IFormatProvider {\r\n        getFormat(formatType: Type): any;\r\n    }\r\n    export let IFormatProvider_$type = new Type(null, 'IFormatProvider');\r\n\r\nexport let Array_$type: Type = new Type(Array, \"Array\", Base.prototype.$type, [IEnumerable_$type, ICollection_$type]);\r\nexport let a$ = Array_$type;\r\n\r\nexport class TypeRegistrar {\r\n    static _registrar: Map<string, Function> = new Map<string, Function>();\r\n    static create(typeName: string, ...rest: any[]): any {\r\n        if (TypeRegistrar.isRegistered(typeName)) {\r\n            let C: any = TypeRegistrar.get(typeName);\r\n            if (C.htmlTagName) {\r\n                return document.createElement(C.htmlTagName);\r\n            } else {\r\n                return new C(...rest);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static register(typeName: string, type: Type): void {\r\n        TypeRegistrar._registrar.set(typeName, type.InstanceConstructor);\r\n    }\r\n\r\n    static registerCons(typeName: string, type: Function): void {\r\n        TypeRegistrar._registrar.set(typeName, type);\r\n    }\r\n\r\n    static callRegister(typeName: string): void {\r\n        let type = TypeRegistrar.get(typeName);\r\n        if (type !== undefined && type !== null &&\r\n            type[\"register\"] !== undefined) {\r\n            type[\"register\"]();\r\n        }\r\n    }\r\n\r\n    static isRegistered(typeName: string): boolean {\r\n        return TypeRegistrar.get(typeName) !== null;\r\n    }\r\n\r\n    static get(typeName: string): any {\r\n        if (TypeRegistrar._registrar.has(typeName)) {\r\n            return TypeRegistrar._registrar.get(typeName);\r\n        }\r\n\r\n        if (typeName.indexOf(\"Igx\") == 0) {\r\n            let igc = typeName.replace(\"Igx\", \"Igc\");\r\n            if (TypeRegistrar._registrar.has(igc)) {\r\n                return TypeRegistrar._registrar.get(igc);\r\n            }\r\n            let igr = typeName.replace(\"Igx\", \"Igr\");\r\n            if (igr.indexOf(\"Component\") == igr.length - 9) {\r\n                igr = igr.substring(0, igr.length - 9);\r\n            }\r\n            if (TypeRegistrar._registrar.has(igr)) {\r\n                return TypeRegistrar._registrar.get(igr);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static createFromInternal(internal: any, prefix: string, postfix: string): any {\r\n        if (!internal) {\r\n            return null;\r\n        }\r\n        if (!internal.$type) {\r\n            return null;\r\n        }\r\n        let name = internal.$type.name;\r\n        let externalName = prefix + name + postfix;\r\n        if (!TypeRegistrar.isRegistered(externalName)) {\r\n            return null;\r\n        }\r\n        return TypeRegistrar.create(externalName);\r\n    }\r\n}\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseError, Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArgumentException extends BaseError {\r\n\tstatic $t: Type = markType(ArgumentException, 'ArgumentException', (<any>BaseError).$);\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: string);\r\n\tconstructor(a: number, b: string, c: string);\r\n\tconstructor(a: number, b: string, c: BaseError);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: string = <string>_rest[0];\r\n\t\t\t\tsuper(1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tlet c: string = <string>_rest[0];\r\n\t\t\t\tlet d: string = <string>_rest[1];\r\n\t\t\t\tsuper(1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t{\r\n\t\t\t\tlet c: string = <string>_rest[0];\r\n\t\t\t\tlet d: BaseError = <BaseError>_rest[1];\r\n\t\t\t\tsuper(2, c, d);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nexport function log10(value: number): number {\r\n\t\treturn Math.log(value) / Math.log(10);\r\n}\r\nexport function toDouble(value: number): number {\r\n\t\treturn +value;\r\n}\r\nexport let toDecimal = toDouble;\r\nexport function compareTo(value: number, other: number) {\r\n\tif (value == other) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tif (value < other) {\r\n\t\t\treturn -1;\r\n\t}\r\n\treturn 1;\r\n}\r\nexport function isInfinity(value: number): boolean {\r\n\t\treturn !isFinite(value) && !isNaN_(value);\r\n}\r\nexport function intDivide(value: number, divisor: number): number {\r\n\tvar result = value / divisor;\r\n\treturn truncate(result);\r\n}\r\nexport function truncate(val: number): number {\r\n\tif (val >= 0) {\r\n\t\treturn Math.floor(val);\r\n\t} else {\r\n\t\treturn Math.ceil(val);\r\n\t}\r\n}\r\nexport function logBase(n: number, n2: number): number {\r\n\treturn Math.log(n) / Math.log(n2);\r\n}\r\nexport function tryParseNumber(s: string, v?: number) : { p1: number, ret: boolean } {\r\n\tvar value = Number(s);\r\n\tif (value !== null && isFinite(value) && s.trim().length !== 0) {\r\n\t\treturn {\r\n\t\t\tp1: value,\r\n\t\t\tret: true\r\n\t\t};\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tp1: 0,\r\n\t\t\tret: false\r\n\t\t};\r\n\t}\r\n}\r\nexport function isNegativeInfinity(v: number) {\r\n\treturn v == Number.NEGATIVE_INFINITY;\r\n}\r\nexport function isPositiveInfinity(v: number) {\r\n\treturn v == Number.POSITIVE_INFINITY;\r\n}\r\nexport function isNaN_(v: number) {\r\n\treturn v !== v; // http://us6.campaign-archive1.com/?u=2cc20705b76fa66ab84a6634f&id=43bf7f05e9\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n    export function getColorStringSafe(v: any): string {\r\n\t\t/*jshint eqnull:true */\r\n\t\treturn v == null ? null : v.colorString();\r\n\t};\r\n\r\n\texport const wellKnownColors: { [val: string]: string } = {\r\n\t\taliceblue: \"f0f8ff\",\r\n\t\tantiquewhite: \"faebd7\",\r\n\t\taqua: \"00ffff\",\r\n\t\taquamarine: \"7fffd4\",\r\n\t\tazure: \"f0ffff\",\r\n\t\tbeige: \"f5f5dc\",\r\n\t\tbisque: \"ffe4c4\",\r\n\t\tblack: \"000000\",\r\n\t\tblanchedalmond: \"ffebcd\",\r\n\t\tblue: \"0000ff\",\r\n\t\tblueviolet: \"8a2be2\",\r\n\t\tbrown: \"a52a2a\",\r\n\t\tburlywood: \"deb887\",\r\n\t\tcadetblue: \"5f9ea0\",\r\n\t\tchartreuse: \"7fff00\",\r\n\t\tchocolate: \"d2691e\",\r\n\t\tcoral: \"ff7f50\",\r\n\t\tcornflowerblue: \"6495ed\",\r\n\t\tcornsilk: \"fff8dc\",\r\n\t\tcrimson: \"dc143c\",\r\n\t\tcyan: \"00ffff\",\r\n\t\tdarkblue: \"00008b\",\r\n\t\tdarkcyan: \"008b8b\",\r\n\t\tdarkgoldenrod: \"b8860b\",\r\n\t\tdarkgray: \"a9a9a9\",\r\n\t\tdarkgreen: \"006400\",\r\n\t\tdarkkhaki: \"bdb76b\",\r\n\t\tdarkmagenta: \"8b008b\",\r\n\t\tdarkolivegreen: \"556b2f\",\r\n\t\tdarkorange: \"ff8c00\",\r\n\t\tdarkorchid: \"9932cc\",\r\n\t\tdarkred: \"8b0000\",\r\n\t\tdarksalmon: \"e9967a\",\r\n\t\tdarkseagreen: \"8fbc8f\",\r\n\t\tdarkslateblue: \"483d8b\",\r\n\t\tdarkslategray: \"2f4f4f\",\r\n\t\tdarkturquoise: \"00ced1\",\r\n\t\tdarkviolet: \"9400d3\",\r\n\t\tdeeppink: \"ff1493\",\r\n\t\tdeepskyblue: \"00bfff\",\r\n\t\tdimgray: \"696969\",\r\n\t\tdodgerblue: \"1e90ff\",\r\n\t\tfeldspar: \"d19275\",\r\n\t\tfirebrick: \"b22222\",\r\n\t\tfloralwhite: \"fffaf0\",\r\n\t\tforestgreen: \"228b22\",\r\n\t\tfuchsia: \"ff00ff\",\r\n\t\tgainsboro: \"dcdcdc\",\r\n\t\tghostwhite: \"f8f8ff\",\r\n\t\tgold: \"ffd700\",\r\n\t\tgoldenrod: \"daa520\",\r\n\t\tgray: \"808080\",\r\n\t\tgreen: \"008000\",\r\n\t\tgreenyellow: \"adff2f\",\r\n\t\thoneydew: \"f0fff0\",\r\n\t\thotpink: \"ff69b4\",\r\n\t\tindianred: \"cd5c5c\",\r\n\t\tindigo: \"4b0082\",\r\n\t\tivory: \"fffff0\",\r\n\t\tkhaki: \"f0e68c\",\r\n\t\tlavender: \"e6e6fa\",\r\n\t\tlavenderblush: \"fff0f5\",\r\n\t\tlawngreen: \"7cfc00\",\r\n\t\tlemonchiffon: \"fffacd\",\r\n\t\tlightblue: \"add8e6\",\r\n\t\tlightcoral: \"f08080\",\r\n\t\tlightcyan: \"e0ffff\",\r\n\t\tlightgoldenrodyellow: \"fafad2\",\r\n\t\tlightgrey: \"d3d3d3\",\r\n\t\tlightgreen: \"90ee90\",\r\n\t\tlightpink: \"ffb6c1\",\r\n\t\tlightsalmon: \"ffa07a\",\r\n\t\tlightseagreen: \"20b2aa\",\r\n\t\tlightskyblue: \"87cefa\",\r\n\t\tlightslateblue: \"8470ff\",\r\n\t\tlightslategray: \"778899\",\r\n\t\tlightsteelblue: \"b0c4de\",\r\n\t\tlightyellow: \"ffffe0\",\r\n\t\tlime: \"00ff00\",\r\n\t\tlimegreen: \"32cd32\",\r\n\t\tlinen: \"faf0e6\",\r\n\t\tmagenta: \"ff00ff\",\r\n\t\tmaroon: \"800000\",\r\n\t\tmediumaquamarine: \"66cdaa\",\r\n\t\tmediumblue: \"0000cd\",\r\n\t\tmediumorchid: \"ba55d3\",\r\n\t\tmediumpurple: \"9370d8\",\r\n\t\tmediumseagreen: \"3cb371\",\r\n\t\tmediumslateblue: \"7b68ee\",\r\n\t\tmediumspringgreen: \"00fa9a\",\r\n\t\tmediumturquoise: \"48d1cc\",\r\n\t\tmediumvioletred: \"c71585\",\r\n\t\tmidnightblue: \"191970\",\r\n\t\tmintcream: \"f5fffa\",\r\n\t\tmistyrose: \"ffe4e1\",\r\n\t\tmoccasin: \"ffe4b5\",\r\n\t\tnavajowhite: \"ffdead\",\r\n\t\tnavy: \"000080\",\r\n\t\toldlace: \"fdf5e6\",\r\n\t\tolive: \"808000\",\r\n\t\tolivedrab: \"6b8e23\",\r\n\t\torange: \"ffa500\",\r\n\t\torangered: \"ff4500\",\r\n\t\torchid: \"da70d6\",\r\n\t\tpalegoldenrod: \"eee8aa\",\r\n\t\tpalegreen: \"98fb98\",\r\n\t\tpaleturquoise: \"afeeee\",\r\n\t\tpalevioletred: \"d87093\",\r\n\t\tpapayawhip: \"ffefd5\",\r\n\t\tpeachpuff: \"ffdab9\",\r\n\t\tperu: \"cd853f\",\r\n\t\tpink: \"ffc0cb\",\r\n\t\tplum: \"dda0dd\",\r\n\t\tpowderblue: \"b0e0e6\",\r\n\t\tpurple: \"800080\",\r\n\t\tred: \"ff0000\",\r\n\t\trosybrown: \"bc8f8f\",\r\n\t\troyalblue: \"4169e1\",\r\n\t\tsaddlebrown: \"8b4513\",\r\n\t\tsalmon: \"fa8072\",\r\n\t\tsandybrown: \"f4a460\",\r\n\t\tseagreen: \"2e8b57\",\r\n\t\tseashell: \"fff5ee\",\r\n\t\tsienna: \"a0522d\",\r\n\t\tsilver: \"c0c0c0\",\r\n\t\tskyblue: \"87ceeb\",\r\n\t\tslateblue: \"6a5acd\",\r\n\t\tslategray: \"708090\",\r\n\t\tsnow: \"fffafa\",\r\n\t\tspringgreen: \"00ff7f\",\r\n\t\tsteelblue: \"4682b4\",\r\n\t\ttan: \"d2b48c\",\r\n\t\tteal: \"008080\",\r\n\t\tthistle: \"d8bfd8\",\r\n\t\ttomato: \"ff6347\",\r\n\t\tturquoise: \"40e0d0\",\r\n\t\tviolet: \"ee82ee\",\r\n\t\tvioletred: \"d02090\",\r\n\t\twheat: \"f5deb3\",\r\n\t\twhite: \"ffffff\",\r\n\t\twhitesmoke: \"f5f5f5\",\r\n\t\tyellow: \"ffff00\",\r\n        yellowgreen: \"9acd32\"\r\n\t};\r\n\r\nexport function strToColor(str: string) {\r\n    var ret = {\r\n        a: 255,\r\n        r: 0,\r\n        g: 0,\r\n        b: 0\r\n    };\r\n\r\n    var asColorName = str.replace(\" \", \"\").toLowerCase();\r\n\r\n    if (asColorName === \"transparent\") {\r\n        return { a: 0, r: 0, g: 0, b: 0 };\r\n    }\r\n\r\n    if (wellKnownColors[ asColorName ] !== undefined) {\r\n        str = wellKnownColors[ asColorName ];\r\n    }\r\n    var parts;\r\n    if (str.lastIndexOf(\"rgba\", 0) === 0) {\r\n        str = str.replace(\"rgba\", \"\").replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\");\r\n        parts = str.split(\",\");\r\n        ret.r = parseInt(parts[ 0 ], 10);\r\n        ret.g = parseInt(parts[ 1 ], 10);\r\n        ret.b = parseInt(parts[ 2 ], 10);\r\n        ret.a = parseFloat(parts[ 3 ]) * 255.0;\r\n    } else if (str.lastIndexOf(\"rgb\", 0) === 0) {\r\n        str = str.replace(\"rgb\", \"\").replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\");\r\n        parts = str.split(\",\");\r\n        ret.r = parseInt(parts[ 0 ], 10);\r\n        ret.g = parseInt(parts[ 1 ], 10);\r\n        ret.b = parseInt(parts[ 2 ], 10);\r\n    } else {\r\n        str = str.replace(\"#\", \"\").replace(\" \", \"\");\r\n        if (str.length === 8) {\r\n\t\t\tret.r = parseInt(str.substr(0, 2), 16);\r\n\t\t\tret.g = parseInt(str.substr(2, 2), 16);\r\n            ret.b = parseInt(str.substr(4, 2), 16);\r\n            ret.a = parseInt(str.substr(6, 2), 16);\r\n\t\t} else if (str.length === 6) {\r\n            ret.r = parseInt(str.substr(0, 2), 16);\r\n            ret.g = parseInt(str.substr(2, 2), 16);\r\n            ret.b = parseInt(str.substr(4, 2), 16);\r\n        } else if (str.length === 3) {\r\n            ret.r = parseInt(str.substr(0, 1) + str.substr(0, 1), 16);\r\n            ret.g = parseInt(str.substr(1, 1) + str.substr(1, 1), 16);\r\n            ret.b = parseInt(str.substr(2, 1) + str.substr(2, 1), 16);\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n\r\nexport function rgbToHex(color: string): string {\r\n    /* Convert color from RGB to HEX format. null if non-rgb color is provided.\r\n        paramType=\"string\" optional=\"false\" Color in RGB format.\r\n        returnType=\"string|null\" Returns converted color from RGB to HEX format. null if non-rgb color is provided.\r\n    */\r\n    var r, g, b, colHex = null;\r\n\r\n    if (color.charAt(0) === \"r\") {\r\n        let colorArr = color.replace(\"rgb(\", \"\").replace(\")\", \"\").split(\",\");\r\n        r = parseInt(colorArr[ 0 ], 10).toString(16);\r\n        g = parseInt(colorArr[ 1 ], 10).toString(16);\r\n        b = parseInt(colorArr[ 2 ], 10).toString(16);\r\n        r = r.length === 1 ? \"0\" + r : r;\r\n        g = g.length === 1 ? \"0\" + g : g;\r\n        b = b.length === 1 ? \"0\" + b : b;\r\n        colHex = \"#\" + r + g + b;\r\n    }\r\n    return colHex;\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IEnumerable$1, Type, FormatException } from \"./type\";\r\nimport { getEnumerator } from \"./type\";\r\nimport { EnumUtil } from './type';\r\n\r\nexport const enum CompareOptions {\r\n    None = 0,\r\n    IgnoreCase = 1,\r\n    IgnoreNonSpace = 2,\r\n    IgnoreSymbols = 4,\r\n    IgnoreKanaType = 8,\r\n    IgnoreWidth = 16,\r\n    OrdinalIgnoreCase = 268435456,\r\n    StringSort = 536870912,\r\n    Ordinal = 1073741824\r\n}\r\n\r\nexport const enum StringComparison {\r\n    CurrentCulture = 0,\r\n    CurrentCultureIgnoreCase = 1,\r\n    InvariantCulture = 2,\r\n    InvariantCultureIgnoreCase = 3,\r\n    Ordinal = 4,\r\n    OrdinalIgnoreCase = 5\r\n}\r\n\r\n\r\n\r\nexport function stringStartsWith(str: string, check: string): boolean {\r\n    return str.indexOf(check) == 0;\r\n}\r\nexport function stringEndsWith(str: string, check: string): boolean {\r\n    let ind = str.lastIndexOf(check);\r\n    return ind >= 0 && ind == str.length - check.length;\r\n}\r\nexport function stringContains(str: string, check: string): boolean {\r\n    return str.indexOf(check) != -1;\r\n}\r\n\r\nexport function stringCreateFromCharArray(charArray: string[]): string {\r\n    return charArray.join(\"\");\r\n}\r\n\r\nexport function stringCreateFromChar(char: string, count: number): string {\r\n    var ret = \"\";\r\n    for (var i = 0; i < count; i++) {\r\n        ret = ret + char;\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nexport function stringCreateFromCharArraySlice(charArray: string[], start: number, length: number): string {\r\n    var ret = \"\";\r\n    for (var i = 0; i < length; i++) {\r\n        ret = ret + charArray[start + i];\r\n    }\r\n\r\n    return ret;\r\n};\r\n\r\nexport function stringToCharArray(target: string): string[] {\r\n    return target.split(\"\");\r\n}\r\n\r\nexport function stringCopyToCharArray(source: string, sourceIndex: number, destination: string[], destinationIndex: number, count: number) {\r\n    for (var i = destinationIndex; i < destinationIndex + count; i++) {\r\n        destination[i] = source.charAt(sourceIndex + i - destinationIndex);\r\n    }\r\n};\r\n\r\nexport function stringIsDigit(str: string, index?: number): boolean {\r\n    index = index || 0;\r\n    var ch = str.charAt(index);\r\n    if (ch >= \"0\" && ch <= \"9\") {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport function charMaxValue(): string {\r\n    return \"\\uffff\";\r\n}\r\n\r\nexport function charMinValue(): string {\r\n    return \"\\u0000\";\r\n}\r\n\r\n// static toDateTime(target: string) {\r\n// \tvar result = new Date(target);\r\n// \tif (!isNaN(+result)) {\r\n// \t\treturn result;\r\n// \t}\r\n\r\n// \t// TODO: Cache this regex?\r\n// \tif (/^((([0-9]{1,4})\\s*(\\s+((a|p)m?)\\s*))|(([0-9]{1,4})\\s*:\\s*([0-9]?[0-9])\\s*(:\\s*([0-9]?[0-9])\\s*(.\\s*([0-9]{0,4})[0-9]*\\s*)?)?(\\s+((a|p)m?)\\s*)?)|(\\s*([0-9]?[0-9])\\s*:\\s*([0-9]?[0-9])\\s*.\\s*([0-9]{0,4})[0-9]*\\s*(\\s+((a|p)m?)\\s*)?))$/i.test(target)) {\r\n// \t\t// The string can be a time string only, in which case we should return today at that time.\r\n// \t\treturn new Date(new Date().toDateString() + \" \" + target);\r\n// \t}\r\n\r\n// \tthrow new FormatException(1, \"The string cannot be converted to a date\");\r\n// }\r\n// static toDecimal(target: string) {\r\n// \tvar result = +target;\r\n\r\n// \tif (isNaN(result)) {\r\n// \t\tnew FormatException(1, \"The string cannot be converted to a number\");\r\n// \t}\r\n\r\n// \treturn result;\r\n// }\r\nexport function stringToString1(target: string): string {\r\n    return target.toString();\r\n}\r\n\r\nexport function stringRemove(target: string, index: number, count?: number): string {\r\n    if (!count || ((index + count) > target.length)) {\r\n        return target.substr(0, index);\r\n    }\r\n    return target.substr(0, index) + target.substr(index + count);\r\n}\r\n\r\nexport function stringCompareTo(target: string, other: string) {\r\n    if (target == other) {\r\n        return 0;\r\n    }\r\n    if (target < other) {\r\n        return -1;\r\n    }\r\n    return 1;\r\n}\r\nexport let stringCompare = stringCompareTo;\r\n\r\nexport function stringIsNullOrEmpty(target: string) { return !target || target.length < 1; }\r\nexport function stringIsNullOrWhiteSpace(target: string) { return !target || target.trim().length < 1; }\r\nexport function stringEmpty() { return \"\"; }\r\nexport function stringEquals(target: string, other: string) { return target == other }\r\n\r\nexport function stringEscapeRegExp(str: string): string {\r\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n}\r\n\r\nexport function createGuid() {\r\n    /*jslint bitwise: true */\r\n    function S4() {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    }\r\n\r\n    return (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() +\r\n        S4() + S4()).toLowerCase();\r\n}\r\n\r\nexport function stringConcat(...s: string[]) {\r\n    return String.prototype.concat(...s);\r\n}\r\n\r\nexport function stringReplace(str: string, oldValue: string, newValue: string): string {\r\n    return str.replace(new RegExp(stringEscapeRegExp(oldValue), \"g\"), newValue);\r\n}\r\n\r\nexport function stringJoin(sep: string, ...vals: string[]): string {\r\n    return vals.join(sep);\r\n}\r\n\r\nexport function stringJoin1<T>($t: Type, sep: string, vals: IEnumerable$1<T>) {\r\n    var result;\r\n    var en = getEnumerator(vals);\r\n    while (en.moveNext()) {\r\n        var v = en.current.toString();\r\n\r\n        if (result === undefined) {\r\n            result = v;\r\n        } else {\r\n            result += sep + v;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function stringToString$1<T>($t: Type, v: any) {\r\n    if (v !== null && $t) {\r\n        if ($t.isNullable) {\r\n            $t = <Type>$t.typeArguments[0];\r\n        }\r\n\r\n        if ($t.isEnumType) {\r\n            return EnumUtil.getName($t, v);\r\n        }\r\n    }\r\n\r\n    return v.toString();\r\n}\r\n\r\nexport function stringToLocaleLower(str: string, locale?: any): string {\r\n    if (locale == null || locale.name == null)\r\n        return str.toLocaleLowerCase();\r\n\r\n    return (<any>str).toLocaleLowerCase(locale.name);\r\n}\r\n\r\nexport function stringToLocaleUpper(str: string, locale?: any): string {\r\n    if (locale == null || locale.name == null)\r\n        return str.toLocaleUpperCase();\r\n\r\n    return (<any>str).toLocaleUpperCase(locale.name);\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ValueType, Base, typeCast, Nullable$1, markStruct, Type } from \"./type\";\r\nimport { ArgumentException } from \"./ArgumentException\";\r\nimport { truncate } from \"./number\";\r\nimport { strToColor } from \"./colorCore\";\r\nimport { stringStartsWith } from \"./string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class Color extends ValueType {\r\n\tstatic $t: Type = markStruct(Color, 'Color');\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tprivate _a: number = 0;\r\n\tget l(): number {\r\n\t\treturn this._a;\r\n\t}\r\n\tset l(a: number) {\r\n\t\tthis._a = <number>truncate(Math.round(<number>a));\r\n\t\tthis.a = true;\r\n\t}\r\n\tprivate _r: number = 0;\r\n\tget o(): number {\r\n\t\treturn this._r;\r\n\t}\r\n\tset o(a: number) {\r\n\t\tthis._r = <number>truncate(Math.round(<number>a));\r\n\t\tthis.a = true;\r\n\t}\r\n\tprivate _g: number = 0;\r\n\tget n(): number {\r\n\t\treturn this._g;\r\n\t}\r\n\tset n(a: number) {\r\n\t\tthis._g = <number>truncate(Math.round(<number>a));\r\n\t\tthis.a = true;\r\n\t}\r\n\tprivate _b: number = 0;\r\n\tget m(): number {\r\n\t\treturn this._b;\r\n\t}\r\n\tset m(a: number) {\r\n\t\tthis._b = <number>truncate(Math.round(<number>a));\r\n\t\tthis.a = true;\r\n\t}\r\n\tprivate _colorString: string = null;\r\n\tget colorString(): string {\r\n\t\tif (this.a || this._colorString == null) {\r\n\t\t\tthis.a = false;\r\n\t\t\tthis.s();\r\n\t\t}\r\n\t\treturn this._colorString;\r\n\t}\r\n\tset colorString(a: string) {\r\n\t\tthis._colorString = a;\r\n\t\tthis.r();\r\n\t}\r\n\tprivate a: boolean = false;\r\n\tstatic create(a: any): Color {\r\n\t\tif (typeCast<Color>((<any>Color).$, a) !== null) {\r\n\t\t\treturn <Color>a;\r\n\t\t}\r\n\t\tlet b = new Color();\r\n\t\tif (typeof a === 'string') {\r\n\t\t\tb.colorString = <string>a;\r\n\t\t} else if (a != null) {\r\n\t\t\tthrow new ArgumentException(1, \"Unknown color type\");\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tprivate s(): void {\r\n\t\tthis._colorString = \"rgba(\" + this._r + \",\" + this._g + \",\" + this._b + \",\" + this._a / 255 + \")\";\r\n\t}\r\n\tprivate r(): void {\r\n\t\tif (this.colorString == null) {\r\n\t\t\tthis.l = this.o = this.n = this.m = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet obj_ = strToColor(this._colorString);\r\n\t\tthis._a = typeof obj_.a != 'undefined' ? Math.round(obj_.a) : 0;\r\n\t\tthis._r = typeof obj_.r != 'undefined' ? Math.round(obj_.r) : 0;\r\n\t\tthis._g = typeof obj_.g != 'undefined' ? Math.round(obj_.g) : 0;\r\n\t\tthis._b = typeof obj_.b != 'undefined' ? Math.round(obj_.b) : 0;\r\n\t\tif (stringStartsWith(this._colorString, \"#\") && this._colorString.length == 9) {\r\n\t\t\tthis.s();\r\n\t\t}\r\n\t}\r\n\tstatic u(a_: number, r_: number, g_: number, b_: number): Color {\r\n\t\tlet a: Color = new Color();\r\n\t\ta._a = <number>(a_ | 0);\r\n\t\ta._r = <number>(r_ | 0);\r\n\t\ta._g = <number>(g_ | 0);\r\n\t\ta._b = <number>(b_ | 0);\r\n\t\ta.a = true;\r\n\t\treturn a;\r\n\t}\r\n\tequals(a: any): boolean {\r\n\t\tif ((typeCast<Color>((<any>Color).$, a) !== null) == false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet b = <Color>a;\r\n\t\treturn this._a == b._a && this._r == b._r && this._g == b._g && this._b == b._b;\r\n\t}\r\n\tgetHashCode(): number {\r\n\t\treturn (this._a << 24) | (this._r << 16) | (this._g << 8) | this._b;\r\n\t}\r\n\tstatic d(a: Color, b: Color): boolean {\r\n\t\treturn !(Color.b(a, b));\r\n\t}\r\n\tstatic e(a: Nullable$1<Color>, b: Nullable$1<Color>): boolean {\r\n\t\tif (!a.hasValue) {\r\n\t\t\treturn b.hasValue;\r\n\t\t} else if (!b.hasValue) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn Color.d(a.value, b.value);\r\n\t}\r\n\tstatic b(a: Color, b: Color): boolean {\r\n\t\treturn a._a == b._a && a._r == b._r && a._g == b._g && a._b == b._b;\r\n\t}\r\n\tstatic c(a: Nullable$1<Color>, b: Nullable$1<Color>): boolean {\r\n\t\tif (!a.hasValue) {\r\n\t\t\treturn !b.hasValue;\r\n\t\t} else if (!b.hasValue) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn Color.b(a.value, b.value);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"./type\";\r\nimport { HeatTileScaler } from \"./HeatTileScaler\";\r\nimport { Color } from \"./Color\";\r\nimport { Rect } from \"./Rect\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileWorkSettings extends Base {\r\n\tstatic $t: Type = markType(TileWorkSettings, 'TileWorkSettings');\r\n\tprivate _scaler: HeatTileScaler = null;\r\n\tget scaler(): HeatTileScaler {\r\n\t\treturn this._scaler;\r\n\t}\r\n\tset scaler(a: HeatTileScaler) {\r\n\t\tthis._scaler = a;\r\n\t}\r\n\tprivate _blurRadius: number = 0;\r\n\tget blurRadius(): number {\r\n\t\treturn this._blurRadius;\r\n\t}\r\n\tset blurRadius(a: number) {\r\n\t\tthis._blurRadius = a;\r\n\t}\r\n\tprivate _maxBlurRadius: number = 0;\r\n\tget maxBlurRadius(): number {\r\n\t\treturn this._maxBlurRadius;\r\n\t}\r\n\tset maxBlurRadius(a: number) {\r\n\t\tthis._maxBlurRadius = a;\r\n\t}\r\n\tprivate _useBlurRadiusAdjustedForZoom: boolean = false;\r\n\tget useBlurRadiusAdjustedForZoom(): boolean {\r\n\t\treturn this._useBlurRadiusAdjustedForZoom;\r\n\t}\r\n\tset useBlurRadiusAdjustedForZoom(a: boolean) {\r\n\t\tthis._useBlurRadiusAdjustedForZoom = a;\r\n\t}\r\n\tprivate _minimumColor: Color = new Color();\r\n\tget minimumColor(): Color {\r\n\t\treturn this._minimumColor;\r\n\t}\r\n\tset minimumColor(a: Color) {\r\n\t\tthis._minimumColor = a;\r\n\t}\r\n\tprivate _maximumColor: Color = new Color();\r\n\tget maximumColor(): Color {\r\n\t\treturn this._maximumColor;\r\n\t}\r\n\tset maximumColor(a: Color) {\r\n\t\tthis._maximumColor = a;\r\n\t}\r\n\tprivate _tileViewport: Rect = null;\r\n\tget tileViewport(): Rect {\r\n\t\treturn this._tileViewport;\r\n\t}\r\n\tset tileViewport(a: Rect) {\r\n\t\tthis._tileViewport = a;\r\n\t}\r\n\tprivate _yValues: number[] = null;\r\n\tget yValues(): number[] {\r\n\t\treturn this._yValues;\r\n\t}\r\n\tset yValues(a: number[]) {\r\n\t\tthis._yValues = a;\r\n\t}\r\n\tprivate _xValues: number[] = null;\r\n\tget xValues(): number[] {\r\n\t\treturn this._xValues;\r\n\t}\r\n\tset xValues(a: number[]) {\r\n\t\tthis._xValues = a;\r\n\t}\r\n\tprivate _values: number[] = null;\r\n\tget values(): number[] {\r\n\t\treturn this._values;\r\n\t}\r\n\tset values(a: number[]) {\r\n\t\tthis._values = a;\r\n\t}\r\n\tprivate _isNewData: boolean = false;\r\n\tget isNewData(): boolean {\r\n\t\treturn this._isNewData;\r\n\t}\r\n\tset isNewData(a: boolean) {\r\n\t\tthis._isNewData = a;\r\n\t}\r\n\tprivate _minimumVisibleLatitude: number = 0;\r\n\tget minimumVisibleLatitude(): number {\r\n\t\treturn this._minimumVisibleLatitude;\r\n\t}\r\n\tset minimumVisibleLatitude(a: number) {\r\n\t\tthis._minimumVisibleLatitude = a;\r\n\t}\r\n\tprivate _maximumVisibleLatitude: number = 0;\r\n\tget maximumVisibleLatitude(): number {\r\n\t\treturn this._maximumVisibleLatitude;\r\n\t}\r\n\tset maximumVisibleLatitude(a: number) {\r\n\t\tthis._maximumVisibleLatitude = a;\r\n\t}\r\n\tprivate _minimumVisibleLongitude: number = 0;\r\n\tget minimumVisibleLongitude(): number {\r\n\t\treturn this._minimumVisibleLongitude;\r\n\t}\r\n\tset minimumVisibleLongitude(a: number) {\r\n\t\tthis._minimumVisibleLongitude = a;\r\n\t}\r\n\tprivate _maximumVisibleLongitude: number = 0;\r\n\tget maximumVisibleLongitude(): number {\r\n\t\treturn this._maximumVisibleLongitude;\r\n\t}\r\n\tset maximumVisibleLongitude(a: number) {\r\n\t\tthis._maximumVisibleLongitude = a;\r\n\t}\r\n\tprivate _z: number = 0;\r\n\tget z(): number {\r\n\t\treturn this._z;\r\n\t}\r\n\tset z(a: number) {\r\n\t\tthis._z = a;\r\n\t}\r\n\tprivate _x: number = 0;\r\n\tget x(): number {\r\n\t\treturn this._x;\r\n\t}\r\n\tset x(a: number) {\r\n\t\tthis._x = a;\r\n\t}\r\n\tprivate _y: number = 0;\r\n\tget y(): number {\r\n\t\treturn this._y;\r\n\t}\r\n\tset y(a: number) {\r\n\t\tthis._y = a;\r\n\t}\r\n\tprivate _window: Rect = null;\r\n\tget window(): Rect {\r\n\t\treturn this._window;\r\n\t}\r\n\tset window(a: Rect) {\r\n\t\tthis._window = a;\r\n\t}\r\n\tprivate _testRun: boolean = false;\r\n\tget testRun(): boolean {\r\n\t\treturn this._testRun;\r\n\t}\r\n\tset testRun(a: boolean) {\r\n\t\tthis._testRun = a;\r\n\t}\r\n\tprivate _globalMinimum: number = 0;\r\n\tget globalMinimum(): number {\r\n\t\treturn this._globalMinimum;\r\n\t}\r\n\tset globalMinimum(a: number) {\r\n\t\tthis._globalMinimum = a;\r\n\t}\r\n\tprivate _globalMaximum: number = 0;\r\n\tget globalMaximum(): number {\r\n\t\treturn this._globalMaximum;\r\n\t}\r\n\tset globalMaximum(a: number) {\r\n\t\tthis._globalMaximum = a;\r\n\t}\r\n\tprivate _useGlobalMinMax: boolean = false;\r\n\tget useGlobalMinMax(): boolean {\r\n\t\treturn this._useGlobalMinMax;\r\n\t}\r\n\tset useGlobalMinMax(a: boolean) {\r\n\t\tthis._useGlobalMinMax = a;\r\n\t}\r\n\tprivate _minimumValue: number = 0;\r\n\tget minimumValue(): number {\r\n\t\treturn this._minimumValue;\r\n\t}\r\n\tset minimumValue(a: number) {\r\n\t\tthis._minimumValue = a;\r\n\t}\r\n\tprivate _maximumValue: number = 0;\r\n\tget maximumValue(): number {\r\n\t\treturn this._maximumValue;\r\n\t}\r\n\tset maximumValue(a: number) {\r\n\t\tthis._maximumValue = a;\r\n\t}\r\n\tprivate _scaleColors: Color[] = null;\r\n\tget scaleColors(): Color[] {\r\n\t\treturn this._scaleColors;\r\n\t}\r\n\tset scaleColors(a: Color[]) {\r\n\t\tthis._scaleColors = a;\r\n\t}\r\n\tprivate _scaleColorOffsets: number[] = null;\r\n\tget scaleColorOffsets(): number[] {\r\n\t\treturn this._scaleColorOffsets;\r\n\t}\r\n\tset scaleColorOffsets(a: number[]) {\r\n\t\tthis._scaleColorOffsets = a;\r\n\t}\r\n\tprivate _useLogarithmicScale: boolean = false;\r\n\tget useLogarithmicScale(): boolean {\r\n\t\treturn this._useLogarithmicScale;\r\n\t}\r\n\tset useLogarithmicScale(a: boolean) {\r\n\t\tthis._useLogarithmicScale = a;\r\n\t}\r\n\tprivate _logarithmBase: number = 0;\r\n\tget logarithmBase(): number {\r\n\t\treturn this._logarithmBase;\r\n\t}\r\n\tset logarithmBase(a: number) {\r\n\t\tthis._logarithmBase = a;\r\n\t}\r\n\tprivate _image: any = null;\r\n\tget image(): any {\r\n\t\treturn this._image;\r\n\t}\r\n\tset image(a: any) {\r\n\t\tthis._image = a;\r\n\t}\r\n\tflatten(): any {\r\n\t\tlet minA_ = this.minimumColor.l;\r\n\t\tlet minR_ = this.minimumColor.o;\r\n\t\tlet minG_ = this.minimumColor.n;\r\n\t\tlet minB_ = this.minimumColor.m;\r\n\t\tlet maxA_ = this.maximumColor.l;\r\n\t\tlet maxR_ = this.maximumColor.o;\r\n\t\tlet maxG_ = this.maximumColor.n;\r\n\t\tlet maxB_ = this.maximumColor.m;\r\n\t\tlet scaleColors_: any[] = null;\r\n\t\tif (this.scaleColors != null) {\r\n\t\t\tscaleColors_ = <any[]>new Array(this.scaleColors.length);\r\n\t\t\tfor (let a = 0; a < this.scaleColors.length; a++) {\r\n\t\t\t\tlet a_ = this.scaleColors[a].l;\r\n\t\t\t\tlet r_ = this.scaleColors[a].o;\r\n\t\t\t\tlet g_ = this.scaleColors[a].n;\r\n\t\t\t\tlet b_ = this.scaleColors[a].m;\r\n\t\t\t\tlet color_ = { a: a_, r: r_, g: g_, b: b_ };\r\n\t\t\t\tscaleColors_[a] = color_;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t\tblurRadius: this.blurRadius,\r\n\t\t\t\tmaxBlurRadius: this.maxBlurRadius,\r\n                //isLinearScaler: this.isLinearScaler,\r\n                //linearScalerMinimumXValue: this.linearScalerMinimumXValue,\r\n                //linearScalerMinimumYValue: this.linearScalerMinimumYValue,\r\n                //linearScalerMaximumXValue: this.linearScalerMaximumXValue,\r\n                //linearScalerMaximumYValue: this.linearScalerMaximumYValue,\r\n                //linearScalerXIsInverted: this.linearScalerXIsInverted,\r\n                //linearScalerYIsInverted: this.linearScalerYIsInverted,\r\n\t\t\t\tuseBlurRadiusAdjustedForZoom: this.useBlurRadiusAdjustedForZoom,\r\n\t\t\t\tminimumColor: { a: minA_, r: minR_, g: minG_, b: minB_ },\r\n\t\t\t\tmaximumColor: { a: maxA_, r: maxR_, g: maxG_, b: maxB_ },\r\n\t\t\t\ttileViewport: { left: this.tileViewport.left, top: this.tileViewport.top, width: this.tileViewport.width, height: this.tileViewport.height },\r\n\t\t\t\tyValues:   this.yValues,\r\n\t\t\t\txValues: this.xValues,\r\n\t\t\t\tvalues: this.values,\r\n\t\t\t\tisNewData: this.isNewData,\r\n\t\t\t\tminimumVisibleLatitude: this.minimumVisibleLatitude,\r\n\t\t\t\tminimumVisibleLongitude: this.minimumVisibleLongitude,\r\n\t\t\t\tmaximumVisibleLatitude: this.maximumVisibleLatitude,\r\n\t\t\t\tmaximumVisibleLongitude: this.maximumVisibleLongitude,\r\n\t\t\t\tz: this.z,\r\n\t\t\t\tx: this.x,\r\n\t\t\t\ty: this.y,\r\n\t\t\t\twindow: { left: this.window.left, top: this.window.top, width: this.window.width, height: this.window.height },\r\n\t\t\t\ttestRun: this.testRun,\r\n\t\t\t\tglobalMinimum: this.globalMinimum,\r\n\t\t\t\tglobalMaximum: this.globalMaximum,\r\n\t\t\t\tuseGlobalMinMax: this.useGlobalMinMax,\r\n\t\t\t\tminimumValue: this.minimumValue,\r\n\t\t\t\tmaximumValue: this.maximumValue,\r\n\t\t\t\tscaleColorOffsets: this.scaleColorOffsets,\r\n\t\t\t\tscaleColors: scaleColors_,\r\n\t\t\t\tuseLogarithmicScale: this.useLogarithmicScale,\r\n\t\t\t\tlogarithmBase: this.logarithmBase\r\n\t\t\t}\r\n            ;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IArray { \r\n\tasArray(): any[];\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IArray_$type = new Type(null, 'IArray');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ArrayBox$1 } from \"./array\";\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IArrayList { \r\n\tasArrayList(): ArrayBox$1<any>;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IArrayList_$type = new Type(null, 'IArrayList');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IComparer { \r\n\tcompareObject(a: any, b: any): number;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IComparer_$type = new Type(null, 'IComparer');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IComparer$1<T> { \r\n\tcompare(a: T, b: T): number;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IComparer$1_$type = new Type(null, 'IComparer$1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Type, Base } from \"./type\";\r\n\r\nexport class CompareUtil {\r\n    static compareToObject(obj1: any, obj2: any): number {\r\n        if (obj1.compareToObject) {\r\n            return <number>obj1.compareToObject(obj2);\r\n        }\r\n        return Base.compare(obj1, obj2);\r\n    }\r\n    static compareTo(obj1: any, obj2: any) {\r\n        if (obj1.compareTo) {\r\n            return <number>obj1.compareTo(obj2);\r\n        }\r\n        return Base.compare(obj1, obj2);\r\n    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, typeCastObjTo$t, markType, IComparable$1, IComparable$1_$type, typeCast } from \"./type\";\r\nimport { IComparer, IComparer_$type } from \"./IComparer\";\r\nimport { IComparer$1, IComparer$1_$type } from \"./IComparer$1\";\r\nimport { CompareUtil } from \"./compareUtil\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class Comparer$1<T> extends Base implements IComparer, IComparer$1<T> {\r\n\tstatic $t: Type = markType(Comparer$1, 'Comparer$1', (<any>Base).$, [IComparer_$type, IComparer$1_$type.specialize(0)]);\r\n\tprotected $t: Type = null;\r\n\tconstructor($t: Type) {\r\n\t\tsuper();\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t}\r\n\tstatic defaultComparerValue<T>($t: Type): Comparer$1<T> {\r\n\t\treturn new DefaultComparer$1<T>($t);\r\n\t}\r\n\tabstract compare(a: T, b: T): number;\r\n\tstatic a<T>($t: Type, a: (x: T, y: T) => number): Comparer$1<T> {\r\n\t\treturn null;\r\n\t}\r\n\tcompareObject(a: any, b: any): number {\r\n\t\treturn this.compare(typeCastObjTo$t<T>(this.$t, a), typeCastObjTo$t<T>(this.$t, b));\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DefaultComparer$1<T> extends Comparer$1<T> {\r\n\tstatic $t: Type = markType(DefaultComparer$1, 'DefaultComparer$1', (<any>Comparer$1).$.specialize(0));\r\n\tprotected $t: Type = null;\r\n\tconstructor($t: Type) {\r\n\t\tsuper($t);\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t}\r\n\tcompare(a: T, b: T): number {\r\n\t\tlet c = typeCast<IComparable$1<T>>(IComparable$1_$type.specialize(this.$t), a);\r\n\t\tif (c != null) {\r\n\t\t\treturn CompareUtil.compareTo(c, b);\r\n\t\t}\r\n\t\tlet d = typeCast<IComparable$1<T>>(IComparable$1_$type.specialize(this.$t), b);\r\n\t\tif (d != null) {\r\n\t\t\treturn -CompareUtil.compareTo(d, a);\r\n\t\t}\r\n\t\treturn <number>(Base.compare(a, b));\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, IList$1, IList$1_$type, ICollection$1, ICollection$1_$type, IEnumerable$1, IEnumerable$1_$type, IEnumerable, IEnumerable_$type, IList, IList_$type, ICollection, ICollection_$type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, Type, typeCastObjTo$t, markType, getEnumerator } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ReadOnlyCollection$1<T> extends Base implements IList$1<T>, IList {\r\n\tstatic $t: Type = markType(ReadOnlyCollection$1, 'ReadOnlyCollection$1', (<any>Base).$, [IList$1_$type.specialize(0), IList_$type]);\r\n\tprotected $t: Type = null;\r\n\tconstructor($t: Type, a: number);\r\n\tconstructor($t: Type, a: number, b: IList$1<T>);\r\n\tconstructor($t: Type, a: number, ..._rest: any[]);\r\n\tconstructor($t: Type, a: number, ..._rest: any[]) {\r\n\t\tsuper();\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0: break;\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IList$1<T> = <IList$1<T>>_rest[0];\r\n\t\t\t\tthis.a = c;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate a: IList$1<T> = null;\r\n\titem(a: number, b?: T): T {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tthis.a.item(a, b);\r\n\t\t\treturn b;\r\n\t\t} else {\r\n\t\t\treturn this.a.item(a);\r\n\t\t}\r\n\t}\r\n\tindexOf(a: T): number {\r\n\t\treturn this.a.indexOf(a);\r\n\t}\r\n\tinsert(a: number, b: T): void {\r\n\t}\r\n\tremoveAt(a: number): void {\r\n\t}\r\n\tget count(): number {\r\n\t\treturn this.a.count;\r\n\t}\r\n\tget isReadOnly(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tadd(a: T): void {\r\n\t}\r\n\tclear(): void {\r\n\t}\r\n\tcontains(a: T): boolean {\r\n\t\treturn this.a.contains(a);\r\n\t}\r\n\tcopyTo(a: T[], b: number): void {\r\n\t\tthis.a.copyTo(a, b);\r\n\t}\r\n\tremove(a: T): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tgetEnumerator(): IEnumerator$1<T> {\r\n\t\treturn getEnumerator(this.a);\r\n\t}\r\n\tgetEnumeratorObject(): IEnumerator {\r\n\t\treturn getEnumerator(this.a);\r\n\t}\r\n\tget isFixedSize(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tadd1(a: any): number {\r\n\t\treturn -1;\r\n\t}\r\n\tcontains1(a: any): boolean {\r\n\t\treturn this.a.contains(typeCastObjTo$t<T>(this.$t, a));\r\n\t}\r\n\tindexOf1(a: any): number {\r\n\t\treturn this.a.indexOf(typeCastObjTo$t<T>(this.$t, a));\r\n\t}\r\n\tinsert1(a: number, b: any): void {\r\n\t}\r\n\tremove1(a: any): void {\r\n\t}\r\n\tcopyTo1(a: any[], b: number): void {\r\n\t\tthis.a.copyTo(<T[]>a, b);\r\n\t}\r\n\tprotected get b(): IList$1<T> {\r\n\t\treturn this.a;\r\n\t}\r\n\tget isSynchronized(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprivate readonly c: any = {};\r\n\tget syncRoot(): any {\r\n\t\treturn this.c;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseError, Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class NotImplementedException extends BaseError {\r\n\tstatic $t: Type = markType(NotImplementedException, 'NotImplementedException', (<any>BaseError).$);\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: string);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(1, \"not implemented\");\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: string = <string>_rest[0];\r\n\t\t\t\tsuper(1, c);\r\n\t\t\t\tthrow new NotImplementedException(0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, IList$1, IList$1_$type, ICollection$1, ICollection$1_$type, IEnumerable$1, IEnumerable$1_$type, IEnumerable, IEnumerable_$type, IList, IList_$type, ICollection, ICollection_$type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, Type, fromEnum, getBoxIfEnum, typeCast, typeCastObjTo$t, fromEn, Number_$type, typeGetValue, Date_$type, runOn, markType, String_$type, getEnumeratorObject } from \"./type\";\r\nimport { IArray, IArray_$type } from \"./IArray\";\r\nimport { IArrayList, IArrayList_$type } from \"./IArrayList\";\r\nimport { ArrayBox$1, arrayCopyTo } from \"./array\";\r\nimport { Comparer$1 } from \"./Comparer$1\";\r\nimport { IComparer$1 } from \"./IComparer$1\";\r\nimport { ReadOnlyCollection$1 } from \"./ReadOnlyCollection$1\";\r\nimport { NotImplementedException } from \"./NotImplementedException\";\r\nimport { intDivide } from \"./number\";\r\nimport { stringCompareTo } from \"./string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class List$1<T> extends Base implements IList$1<T>, IArray, IList {\r\n\tstatic $t: Type = markType(List$1, 'List$1', (<any>Base).$, [IList$1_$type.specialize(0), IArray_$type, IList_$type]);\r\n\tprotected $t: Type = null;\r\n\t_inner: T[] = null;\r\n\tprivate readonly c: boolean = false;\r\n\tconstructor($t: Type, a: number);\r\n\tconstructor($t: Type, a: number, b: IEnumerable$1<T>);\r\n\tconstructor($t: Type, a: number, b: number);\r\n\tconstructor($t: Type, a: number, ..._rest: any[]);\r\n\tconstructor($t: Type, a: number, ..._rest: any[]) {\r\n\t\tsuper();\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tthis._inner = <T[]>([]);\r\n\t\t\t\tthis.c = <boolean>(this.$t.InstanceConstructor && this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<T> = <IEnumerable$1<T>>_rest[0];\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._inner = <T[]>([]);\r\n\t\t\t\t\tthis.c = <boolean>(this.$t.InstanceConstructor && this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.d(0, c, true)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let d of fromEnum<T>(c)) {\r\n\t\t\t\t\tthis.add(d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tlet c: number = <number>_rest[0];\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._inner = <T[]>([]);\r\n\t\t\t\t\tthis.c = <boolean>(this.$t.InstanceConstructor && this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected x(a: number, b: T): void {\r\n\t\tthis._inner[a] = b;\r\n\t}\r\n\tprotected r(a: number, b: T): void {\r\n\t\tthis._inner.splice(a, 0, b);\r\n\t}\r\n\tprotected n(a: T): void {\r\n\t\tthis._inner.push(a);\r\n\t}\r\n\tprotected u(a: number): void {\r\n\t\tif (a == 0) {\r\n\t\t\tthis._inner.shift();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._inner.splice(a, 1);\r\n\t}\r\n\tprotected p(): void {\r\n\t\tthis._inner = <T[]>([]);\r\n\t}\r\n\titem(a: number, b?: T): T {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tthis.x(a, b);\r\n\t\t\treturn b;\r\n\t\t} else {\r\n\t\t\treturn this._inner[a];\r\n\t\t}\r\n\t}\r\n\tindexOf(a: T): number {\r\n\t\tif (this.c) {\r\n\t\t\treturn <number>(this._inner.indexOf(a));\r\n\t\t}\r\n\t\tfor (let b: number = 0; b < this._inner.length; b++) {\r\n\t\t\tif (Base.equalsStatic(getBoxIfEnum<T>(this.$t, a), getBoxIfEnum<T>(this.$t, this._inner[b]))) {\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tindexOf2(a: T, b: number): number {\r\n\t\tif (this.c) {\r\n\t\t\treturn <number>(this._inner.indexOf(a, b));\r\n\t\t}\r\n\t\tfor (; b < this._inner.length; b++) {\r\n\t\t\tif (Base.equalsStatic(getBoxIfEnum<T>(this.$t, a), getBoxIfEnum<T>(this.$t, this._inner[b]))) {\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tk(a: T): number {\r\n\t\tif (this.c) {\r\n\t\t\treturn <number>(this._inner.lastIndexOf(a));\r\n\t\t}\r\n\t\tfor (let b: number = this._inner.length - 1; b >= 0; b--) {\r\n\t\t\tif (Base.equalsStatic(getBoxIfEnum<T>(this.$t, a), getBoxIfEnum<T>(this.$t, this._inner[b]))) {\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tinsert(a: number, b: T): void {\r\n\t\tthis.r(a, b);\r\n\t}\r\n\tremoveAt(a: number): void {\r\n\t\tthis.u(a);\r\n\t}\r\n\tget count(): number {\r\n\t\treturn this._inner.length;\r\n\t}\r\n\tget isReadOnly(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tadd(a: T): void {\r\n\t\tthis.n(a);\r\n\t}\r\n\tclear(): void {\r\n\t\tthis.p();\r\n\t}\r\n\tcontains(a: T): boolean {\r\n\t\treturn this.indexOf(a) >= 0;\r\n\t}\r\n\tcopyTo(a: T[], b: number): void {\r\n\t\tfor (let c: number = 0; c < this._inner.length; c++) {\r\n\t\t\ta[b + c] = this._inner[c];\r\n\t\t}\r\n\t}\r\n\tremove(a: T): boolean {\r\n\t\tlet b: number = this.indexOf(a);\r\n\t\tif (b < 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.u(b);\r\n\t\treturn true;\r\n\t}\r\n\tgetEnumerator(): IEnumerator$1<T> {\r\n\t\treturn <IEnumerator$1<T>><any>getEnumeratorObject(this._inner);\r\n\t}\r\n\tgetEnumeratorObject(): IEnumerator {\r\n\t\treturn getEnumeratorObject(this._inner);\r\n\t}\r\n\tasArray(): any[] {\r\n\t\treturn this._inner;\r\n\t}\r\n\tprivate d(index_: number, collection_: any, a: boolean): boolean {\r\n\t\tlet b = typeCast<IArrayList>(IArrayList_$type, collection_);\r\n\t\tif (b != null) {\r\n\t\t\tlet a_ = b.asArrayList();\r\n\t\t\tArray.prototype.splice.apply(this._inner, Array.prototype.concat.apply([index_, 0], a_));\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet c = typeCast<IArray>(IArray_$type, collection_);\r\n\t\tif (c != null) {\r\n\t\t\tlet a_ = c.asArray();\r\n\t\t\tArray.prototype.splice.apply(this._inner, Array.prototype.concat.apply([index_, 0], a_));\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet asList_ = typeCast<IList$1<T>>(IList$1_$type.specialize(this.$t), collection_);\r\n\t\tif (asList_ != null) {\r\n\t\t\tfor (let i_: number = 0; i_ < asList_.count; i_++) {\r\n\t\t\t\tlet item_ = asList_.item(i_);\r\n\t\t\t\tthis._inner.splice(index_ + i_, 0, item_);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet arr_ = <any[]>(Array.isArray(collection_) ? collection_ : null);\r\n\t\tif (arr_ != null) {\r\n\t\t\tlet inn_ = this._inner;\r\n\t\t\tif (this._inner.length == 0) {\r\n\t\t\t\tif (a) {\r\n\t\t\t\t\tlet parr_ = <T[]>arr_;\r\n\t\t\t\t\tlet d = arr_.length;\r\n\t\t\t\t\tfor (let i_ = 0; i_ < d; i_++) {\r\n\t\t\t\t\t\tinn_[index_++] = parr_[i_];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet e = arr_.length;\r\n\t\t\t\t\tfor (let i_ = 0; i_ < e; i_++) {\r\n\t\t\t\t\t\tinn_[index_++] = typeCastObjTo$t<T>(this.$t, arr_[i_]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i_ = 0; i_ < arr_.length; i_++) {\r\n\t\t\t\t\tinn_.splice(index_++, 0, arr_[i_]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tt(a: number, b: IEnumerable): void {\r\n\t\tif (this.d(a, b, false)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet j_: number = a;\r\n\t\tfor (let item_ of fromEn<any>(b)) {\r\n\t\t\tthis._inner.splice(j_, 0, item_);\r\n\t\t\tj_++;\r\n\t\t}\r\n\t}\r\n\ts(a: number, b: IEnumerable$1<T>): void {\r\n\t\tif (this.d(a, b, true)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet j_: number = a;\r\n\t\tfor (let item_ of fromEnum<T>(b)) {\r\n\t\t\tthis._inner.splice(j_, 0, item_);\r\n\t\t\tj_++;\r\n\t\t}\r\n\t}\r\n\tv(index_: number, numToRemove_: number): void {\r\n\t\tif (index_ == 0 && numToRemove_ == 1) {\r\n\t\t\tthis._inner.shift();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._inner.splice(index_, numToRemove_);\r\n\t}\r\n\tcopyTo1(a: any[], b: number): void {\r\n\t\tarrayCopyTo(this._inner, a, b);\r\n\t}\r\n\tget isFixedSize(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tadd1(a: any): number {\r\n\t\tthis.n(typeCastObjTo$t<T>(this.$t, a));\r\n\t\treturn this._inner.length - 1;\r\n\t}\r\n\tcontains1(a: any): boolean {\r\n\t\treturn this.indexOf1(a) >= 0;\r\n\t}\r\n\tindexOf1(a: any): number {\r\n\t\treturn this.indexOf(typeCastObjTo$t<T>(this.$t, a));\r\n\t}\r\n\tinsert1(a: number, b: any): void {\r\n\t\tthis.r(a, typeCastObjTo$t<T>(this.$t, b));\r\n\t}\r\n\tremove1(a: any): void {\r\n\t\tlet b = this.indexOf1(a);\r\n\t\tif (b < 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.u(b);\r\n\t}\r\n\ty(): void {\r\n\t\tlet a: (obj1: any, obj2: any) => number = null;\r\n\t\tif (this.$t == Number_$type) {\r\n\t\t\ta = (b: any, c: any) => {\r\n\t\t\t\tlet d = <number>b;\r\n\t\t\t\tlet e = <number>c;\r\n\t\t\t\tif (d < e) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (d == e) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else if (this.$t == Number_$type) {\r\n\t\t\ta = (b: any, c: any) => {\r\n\t\t\t\tlet d = <number>b;\r\n\t\t\t\tlet e = <number>c;\r\n\t\t\t\tif (d < e) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (d == e) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else if (this.$t == Number_$type) {\r\n\t\t\ta = (b: any, c: any) => {\r\n\t\t\t\tlet d = typeGetValue(b);\r\n\t\t\t\tlet e = typeGetValue(c);\r\n\t\t\t\tif (d < e) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (d == e) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else if (this.$t == Date_$type) {\r\n\t\t\ta = (b: any, c: any) => {\r\n\t\t\t\tlet d = <Date>b;\r\n\t\t\t\tlet e = <Date>c;\r\n\t\t\t\tif (d.getTime() < e.getTime()) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (d.getTime() == e.getTime()) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\ta = (b: any, c: any) => stringCompareTo((<string>b), <string>c);\r\n\t\t}\r\n\t\tthis.ab(a);\r\n\t}\r\n\tprivate ab(compare_: (obj1: any, obj2: any) => number): void {\r\n\t\tthis._inner.sort(compare_);\r\n\t}\r\n\taa(compare_: (arg1: T, arg2: T) => number): void {\r\n\t\tthis._inner.sort(compare_);\r\n\t}\r\n\th: number = 0;\r\n\to(a: IEnumerable$1<T>): void {\r\n\t\tfor (let item_ of fromEnum<T>(a)) {\r\n\t\t\tthis._inner.push(item_);\r\n\t\t}\r\n\t}\r\n\ttoArray(): T[] {\r\n\t\treturn this._inner;\r\n\t}\r\n\tq(a: (arg1: T) => void): void {\r\n\t\tfor (let b: number = 0; b < this._inner.length; b++) {\r\n\t\t\ta(this._inner[b]);\r\n\t\t}\r\n\t}\r\n\tget isSynchronized(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprivate readonly m: any = {};\r\n\tget syncRoot(): any {\r\n\t\treturn this.m;\r\n\t}\r\n\tf(a: T): number {\r\n\t\treturn this.g(a, Comparer$1.defaultComparerValue<T>(this.$t));\r\n\t}\r\n\tg(a: T, b: IComparer$1<T>): number {\r\n\t\tlet c: number = 0;\r\n\t\tlet d: number = this.count - 1;\r\n\t\twhile (c <= d) {\r\n\t\t\tlet e: number = c + (intDivide((d - c), 2));\r\n\t\t\tlet f: T = this._inner[e];\r\n\t\t\tlet g: number = b.compare(f, a);\r\n\t\t\tif (g == 0) {\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\t\t\tif (g < 0) {\r\n\t\t\t\tc = e + 1;\r\n\t\t\t} else {\r\n\t\t\t\td = e - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ~c;\r\n\t}\r\n\te(): ReadOnlyCollection$1<T> {\r\n\t\treturn new ReadOnlyCollection$1<T>(this.$t, 1, this);\r\n\t}\r\n\tw(): void {\r\n\t\tfor (let a: number = 0; a < intDivide(this.count, 2); a++) {\r\n\t\t\tlet b = this.count - a - 1;\r\n\t\t\tlet c = this._inner[a];\r\n\t\t\tthis._inner[a] = this._inner[b];\r\n\t\t\tthis._inner[b] = c;\r\n\t\t}\r\n\t}\r\n\tz(a: IComparer$1<T>): void {\r\n\t\tthis.aa(runOn(a, a.compare));\r\n\t}\r\n\ti(a: (obj: T) => boolean): number {\r\n\t\tfor (let b: number = 0; b < this._inner.length; b++) {\r\n\t\t\tif (a(this._inner[b])) {\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tl(a: (obj: T) => boolean): number {\r\n\t\tthrow new NotImplementedException(0);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IList, ICollection, IEnumerable, IEnumerable$1, IEnumerator, IEnumerator$1, IteratorWrapper, IList$1, getEnumerator, getEnumeratorObject, Base, Type, Array_$type } from \"./type\";\r\n\r\n\texport function arrayCopyTo(source: any[], dest: any[], index: number) {\r\n\t\tfor (var i = 0; i < source.length; i++) {\r\n\t\t\tdest[ index++ ] = source[ i ];\r\n\t\t}\r\n\t}\r\n    export function arrayCopy(source: any[], sourceIndex: number, dest: any[], destIndex: number, count: number) {\r\n\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\tdest[ destIndex + i ] = source[ sourceIndex + i ];\r\n        }\r\n    }\r\n    export function arrayInsert(target: any[], index: number, item: any) {\r\n        target.splice(index, 0, item);\r\n    }\r\n    export function arrayRemoveAt(target: any[], index: number) {\r\n\t\ttarget.splice(index, 1);\r\n\t}\r\n\r\n\texport function arrayRemoveItem(target: any[], item: any) {\r\n\t\tvar index = target.indexOf(item);\r\n\t\tif (index >= 0) {\r\n\t\t\ttarget.splice(index, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n    }\r\n    \r\n    export function arrayGetValue(target: any[], index: number) {\r\n        return target[index];\r\n    }\r\n    \r\n    export function arrayGetLength(target: any[], dimension: number) {\r\n\r\n\t\t// TODO: Is there a better way to do this? Maybe attach the rank values to the array?\r\n\r\n\t\tvar array = target;\r\n\t\tvar dim = dimension;\r\n\r\n\t\twhile (array) {\r\n\t\t\tif (dim === 0) {\r\n\t\t\t\treturn array.length;\r\n\t\t\t}\r\n\r\n\t\t\tdim--;\r\n\t\t\tarray = array[ 0 ];\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n    }\r\n\r\n    export function arrayGetRank(target: any[]) {\r\n        return 1;\r\n    }\r\n    \r\n    export function arrayResize<T>(target: T[], length: number) {\r\n        target.length = 0;\r\n    }\r\n\r\n    export function arrayInsertRange(target: any[], index: number, items: any[]) {\r\n\t\tvar i = 0;\r\n\t\tif (target.length === 0) {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget[ index++ ] = items[ i ];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget.splice(index++, 0, items[ i ]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport function arrayInsertRange1(target: any[], index: number, items: any[]) {\r\n\r\n\t\t//TODO: adjust this later, but this is the safest change to make right now.\r\n\t\tvar i = 0;\r\n\t\tif (target.length === 0) {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget[ index++ ] = items[ i ];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget.splice(index++, 0, items[ i ]);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    \r\n    export function arrayShallowClone(arr: any[]) {\r\n\t\tvar newArr = [];\r\n\t\tfor (var i = 0; i < arr.length; i++) {\r\n\t\t\tnewArr[ i ] = arr[ i ];\r\n\t\t}\r\n\t\treturn newArr;\r\n    }\r\n    \r\n    export function arrayClear(arr: any[]) {\r\n        arr.length = 0;\r\n\t\t}\r\n\r\n //   export function listItem(list: any, index: number, item?: any): void {\r\n //       if ((<any>list).$type === undefined) {\r\n //           let arr = <any[]>list;\r\n //           if (item !== undefined) {\r\n //               arr[index] = item;\r\n //               return item;\r\n //           } else {\r\n //               return arr[index];\r\n //           }\r\n //       }\r\n //       if (item !== undefined) {\r\n //           list.item(index, item);\r\n //           return item;\r\n //       }\r\n //       return list.item(index);\r\n //   }\r\n\r\n\t//export function  listAdd(list: any, item: any): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\tarrayInsert(arr, arr.length, item);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.add(item);\r\n\t//\t}\r\n\t//export function  listClear(list: any): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\tarrayClear(arr);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.clear();\r\n\t//\t}\r\n\t//export function listContains(list: any, item: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn arr.indexOf(item) > -1;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.contains(item);\r\n\t//\t}\r\n\t//export function listIndexOf(list: any, item: any): number {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn arr.indexOf(item);\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.indexOf(item);\r\n\t//\t}\r\n\t//export function listInsert(list: any, index: number, item: any): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\tarrayInsert(arr, index, item);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.contains(item);\r\n\t//\t}\r\n\t//export function listRemove(list: any, item: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n //                       arrayRemoveItem(arr, item);\r\n //                       return true;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.remove(item);\r\n\t//\t}\r\n\t//export function listRemoveAt(list: any, index: number): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n //                       arrayRemoveAt(arr, index);\r\n //                       return;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.removeAt(index);\r\n\t//\t}\r\n\t//export function listIsFixedSize(list: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn false;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.isFixedSize;\r\n\t//\t}\r\n\t//export function listIsReadOnly(list: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn false;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.isReadOnly;\r\n\t//\t}\r\n\t//export function collectionCount(collection: any): number {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\treturn arr.length;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.count;\r\n\t//\t}\r\n\t//export function collectionCopyTo(collection: any, array: any[], index: number): void {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\tarrayCopy(arr, 0, array, index, arr.length);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.copyTo(array, index);\r\n\t//\t}\r\n\t//export function collectionIsSynchronized(collection: any): boolean {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\treturn false;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.isSynchronized;\r\n\t//\t}\r\n\t//export function collectionSyncRoot(collection: any): any {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\treturn arr;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.syncRoot;\r\n //   }\r\n\r\nexport function boxArray$1<T>(array: any): ArrayBox$1<T> {\r\n    return new ArrayBox$1<T>(array);\r\n}\r\n\r\nexport function unboxArray<T>(box: any): T[] {\r\n    if (box.$arrayWrapper) {\r\n        return <T[]>box._target;\r\n    }\r\n    return <T[]>box;\r\n}\r\n\r\nexport function arrayListCreate(): ArrayBox$1<any> {\r\n    return new ArrayBox$1<any>([]);\r\n}\r\n\r\nexport class ArrayBox$1<T> implements IList, IList$1<T>, ICollection, IEnumerable, IEnumerable$1<T> {\r\n\tisFixedSize: boolean = false;\r\n\tisSynchronized: boolean = false;\r\n\tsyncRoot: any = null;\r\n\r\n\tprivate _target: any[];\r\n\tconstructor(target: any) {\r\n\t\tthis._target = target;\r\n\t}\r\n\r\n    item(index: number, value?: T): T {\r\n        if (arguments.length === 2) {\r\n            this._target[index] = value;\r\n            return value;\r\n        } else {\r\n            return <T>this._target[index];\r\n        }\r\n    }\r\n\tindexOf(item: T): number {\r\n\t\treturn this._target.indexOf(item);\r\n\t}\r\n\tinsert(index: number, item: T): void {\r\n\t\tthis._target.splice(index, 0, item);\r\n    }\r\n    insertRange(index: number, items: any[]) {\r\n        arrayInsertRange(this._target, index, items);\r\n    }\r\n    removeRange(index: number, count: number) {\r\n        this._target.splice(index, count);\r\n    }\r\n\tremoveAt(index: number): void {\r\n\t\tthis._target.splice(index, 1);\r\n\t}\r\n\tget count(): number {\r\n\t\treturn this._target.length;\r\n\t}\r\n\tisReadOnly: boolean = false;\r\n\tadd(item: T): void {\r\n\t\tthis._target.push(item);\r\n\t}\r\n\tclear(): void {\r\n\t\tthis._target.length = 0;\r\n\t}\r\n\tcontains(item: T): boolean {\r\n\t\treturn this._target.indexOf(item) >= 0;\r\n\t}\r\n\tcopyTo(array: T[], arrayIndex: number): void {\r\n\t\tfor (let i = 0; i < this._target.length; i++) {\r\n\t\t\tarray[i + arrayIndex] = this._target[i];\r\n\t\t}\r\n\t}\r\n\tremove(item: T): boolean {\r\n\t\tlet index = this._target.indexOf(item);\r\n\t\tif (index < 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis._target.splice(index, 1);\r\n\t\treturn true;\r\n\t}\r\n\tgetEnumerator(): IEnumerator$1<T> {\r\n\t\treturn getEnumerator(this._target);\r\n\t}\r\n\tgetEnumeratorObject(): IEnumerator {\r\n\t\treturn getEnumeratorObject(this._target);\r\n    }\r\n    getHashCode(): number {\r\n\t\treturn Base.getHashCodeStatic(this._target);\r\n\t}\r\n\t$arrayWrapper: boolean = true;\r\n\tequals(other: any): boolean {\r\n\t\tif (other.$arrayWrapper) {\r\n\t\t\tother = other._target;\r\n\t\t}\r\n\t\treturn this._target === other;\r\n    }\r\n    get $type(): Type {\r\n        return Array_$type;\r\n    }\r\n    reverse(): void {\r\n        let len = this._target.length;\r\n        for (let i = 0; i < len / 2.0; i++) {\r\n            let swap = this._target[(len - 1) - i];\r\n            this._target[(len - 1) - i] = this._target[i];\r\n            this._target[i] = swap;\r\n        }    \r\n    }\r\n}\r\n\r\n\t\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileImageCreatedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(TileImageCreatedEventArgs, 'TileImageCreatedEventArgs', (<any>EventArgs).$);\r\n\tprivate _imageData: number[] = null;\r\n\tget imageData(): number[] {\r\n\t\treturn this._imageData;\r\n\t}\r\n\tset imageData(a: number[]) {\r\n\t\tthis._imageData = a;\r\n\t}\r\n\tprivate _image: any = null;\r\n\tget image(): any {\r\n\t\treturn this._image;\r\n\t}\r\n\tset image(a: any) {\r\n\t\tthis._image = a;\r\n\t}\r\n\tprivate _z: number = 0;\r\n\tget z(): number {\r\n\t\treturn this._z;\r\n\t}\r\n\tset z(a: number) {\r\n\t\tthis._z = a;\r\n\t}\r\n\tprivate _x: number = 0;\r\n\tget x(): number {\r\n\t\treturn this._x;\r\n\t}\r\n\tset x(a: number) {\r\n\t\tthis._x = a;\r\n\t}\r\n\tprivate _y: number = 0;\r\n\tget y(): number {\r\n\t\treturn this._y;\r\n\t}\r\n\tset y(a: number) {\r\n\t\tthis._y = a;\r\n\t}\r\n\tprivate _url: string = null;\r\n\tget url(): string {\r\n\t\treturn this._url;\r\n\t}\r\n\tset url(a: string) {\r\n\t\tthis._url = a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileImageCreatedEventArgs extends TileImageCreatedEventArgs {\r\n\tstatic $t: Type = markType(HeatTileImageCreatedEventArgs, 'HeatTileImageCreatedEventArgs', (<any>TileImageCreatedEventArgs).$);\r\n\tprivate _globalMinimumValue: number = 0;\r\n\tget globalMinimumValue(): number {\r\n\t\treturn this._globalMinimumValue;\r\n\t}\r\n\tset globalMinimumValue(a: number) {\r\n\t\tthis._globalMinimumValue = a;\r\n\t}\r\n\tprivate _globalMaximumValue: number = 0;\r\n\tget globalMaximumValue(): number {\r\n\t\treturn this._globalMaximumValue;\r\n\t}\r\n\tset globalMaximumValue(a: number) {\r\n\t\tthis._globalMaximumValue = a;\r\n\t}\r\n\tprivate _globalMaximumValueLongitude: number = 0;\r\n\tget globalMaximumValueLongitude(): number {\r\n\t\treturn this._globalMaximumValueLongitude;\r\n\t}\r\n\tset globalMaximumValueLongitude(a: number) {\r\n\t\tthis._globalMaximumValueLongitude = a;\r\n\t}\r\n\tprivate _globalMaximumValueLatitude: number = 0;\r\n\tget globalMaximumValueLatitude(): number {\r\n\t\treturn this._globalMaximumValueLatitude;\r\n\t}\r\n\tset globalMaximumValueLatitude(a: number) {\r\n\t\tthis._globalMaximumValueLatitude = a;\r\n\t}\r\n\tprivate _globalMinimumValueLongitude: number = 0;\r\n\tget globalMinimumValueLongitude(): number {\r\n\t\treturn this._globalMinimumValueLongitude;\r\n\t}\r\n\tset globalMinimumValueLongitude(a: number) {\r\n\t\tthis._globalMinimumValueLongitude = a;\r\n\t}\r\n\tprivate _globalMinimumValueLatitude: number = 0;\r\n\tget globalMinimumValueLatitude(): number {\r\n\t\treturn this._globalMinimumValueLatitude;\r\n\t}\r\n\tset globalMinimumValueLatitude(a: number) {\r\n\t\tthis._globalMinimumValueLatitude = a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Number_$type, Type, markType } from \"./type\";\r\nimport { TileWorkSettings } from \"./TileWorkSettings\";\r\nimport { ITileWorkCompletedSink } from \"./ITileWorkCompletedSink\";\r\nimport { HeatTileScaler } from \"./HeatTileScaler\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { Rect } from \"./Rect\";\r\nimport { Color } from \"./Color\";\r\nimport { HeatTileImageCreatedEventArgs } from \"./HeatTileImageCreatedEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { truncate, isNaN_, logBase } from \"./number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileGeneratorWorker extends Base {\r\n\tstatic $t: Type = markType(HeatTileGeneratorWorker, 'HeatTileGeneratorWorker');\r\n\tprivate f: TileWorkSettings = null;\r\n\tprivate a: number[] = null;\r\n\tprivate n: number = 0;\r\n\tprivate o: number = 0;\r\n\tprivate p: number = 0;\r\n\tprivate w: string = null;\r\n\tprivate static v: any = {};\r\n\tprivate static s: number = 0;\r\n\tu: number = 0;\r\n\th: boolean = false;\r\n\tprivate r: number = 0;\r\n\tget t(): number {\r\n\t\treturn this.r;\r\n\t}\r\n\tget g(): TileWorkSettings {\r\n\t\treturn this.f;\r\n\t}\r\n\tconstructor(a: TileWorkSettings) {\r\n\t\tsuper();\r\n\t\tthis.f = a;\r\n\t\tHeatTileGeneratorWorker.s++;\r\n\t\tif (HeatTileGeneratorWorker.s == 0x7FFFFFFFFFFFFFFF) {\r\n\t\t\tHeatTileGeneratorWorker.s = 0;\r\n\t\t}\r\n\t\tthis.r = HeatTileGeneratorWorker.s;\r\n\t}\r\n\tdoWork(): void {\r\n\t\tlet a: number = this.g.blurRadius;\r\n\t\tlet b: number = a;\r\n\t\tlet c: number = this.g.maxBlurRadius;\r\n\t\tlet d: HeatTileScaler = this.g.scaler;\r\n\t\tthis.n = this.g.x;\r\n\t\tthis.o = this.g.y;\r\n\t\tthis.p = this.g.z;\r\n\t\tif (this.g.useBlurRadiusAdjustedForZoom && this.p > 0) {\r\n\t\t\tlet e = Math.sqrt(1 * 1 + 1 * 1) * Math.pow(2, this.p - 1);\r\n\t\t\tb = a * e;\r\n\t\t}\r\n\t\tif (!isNaN_(c)) {\r\n\t\t\tif (b > c) {\r\n\t\t\t\tb = c;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet f: number[] = this.g.xValues;\r\n\t\tlet g: number[] = this.g.yValues;\r\n\t\tlet h: number[] = this.g.values;\r\n\t\tlet i: number = this.g.xValues.length;\r\n\t\tlet j: number = this.g.yValues.length;\r\n\t\tlet k: number;\r\n\t\tlet l: number;\r\n\t\tlet m: number;\r\n\t\tlet n: number;\r\n\t\tlet o: number;\r\n\t\tlet p: number;\r\n\t\tlet q: number;\r\n\t\tlet r: number = this.g.minimumVisibleLongitude;\r\n\t\tlet s: number = this.g.maximumVisibleLongitude;\r\n\t\tlet t: number = this.g.minimumVisibleLatitude;\r\n\t\tlet u: number = this.g.maximumVisibleLatitude;\r\n\t\tlet v: number = this.q(this.g.tileViewport, b);\r\n\t\tlet w: number[] = this.c(v, b);\r\n\t\tlet x: number = Math.abs(d.t(0, this.g.window, this.g.tileViewport) - d.t(b, this.g.window, this.g.tileViewport));\r\n\t\tlet y: number = Math.abs(d.u(0, this.g.window, this.g.tileViewport) - d.u(b, this.g.window, this.g.tileViewport));\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: List$1<number> = new List$1<number>(Number_$type, 0);\r\n\t\tlet ac: List$1<number> = new List$1<number>(Number_$type, 0);\r\n\t\tlet ad: List$1<number> = new List$1<number>(Number_$type, 0);\r\n\t\tfor (let ae = 0; ae < i; ae++) {\r\n\t\t\tk = f[ae];\r\n\t\t\tl = g[ae];\r\n\t\t\tm = h[ae];\r\n\t\t\tn = k - y;\r\n\t\t\to = k + y;\r\n\t\t\tp = l - x;\r\n\t\t\tq = l + x;\r\n\t\t\tif (o < r || q < t || p > u || n > s) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tab.add(k);\r\n\t\t\tac.add(l);\r\n\t\t\tad.add(m);\r\n\t\t}\r\n\t\tlet af: number[] = this.d(this.g.tileViewport);\r\n\t\tlet ag: number[] = this.b(this.g.tileViewport);\r\n\t\tlet ah: number = <number>truncate(this.g.tileViewport.width);\r\n\t\tlet ai: number = ac.count;\r\n\t\td.v(ac, this.g.window, this.g.tileViewport);\r\n\t\td.w(ab, this.g.window, this.g.tileViewport);\r\n\t\tlet aj: number;\r\n\t\tlet ak: number;\r\n\t\tlet al: number;\r\n\t\tlet am: number;\r\n\t\tfor (let an = 0; an < ai; an++) {\r\n\t\t\tz = <number>truncate(Math.floor(ab._inner[an] - b));\r\n\t\t\taa = <number>truncate(Math.floor(ac._inner[an] - b));\r\n\t\t\tfor (let ao = z; ao < z + v; ao++) {\r\n\t\t\t\tfor (let ap = aa; ap < aa + v; ap++) {\r\n\t\t\t\t\taj = ao - z;\r\n\t\t\t\t\tak = ap - aa;\r\n\t\t\t\t\tif (ao < 0 || ao > (ah - 1) || ap < 0 || ap > (ah - 1)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tal = w[ak * v + aj];\r\n\t\t\t\t\tam = ad._inner[an] * al;\r\n\t\t\t\t\tag[ap * ah + ao] = ag[ap * ah + ao] + am;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet aq: number = ag.length;\r\n\t\tlet ar: number = -1.7976931348623157E+308;\r\n\t\tlet as: number = 1.7976931348623157E+308;\r\n\t\tlet at: number;\r\n\t\tif (!isNaN_(this.g.globalMinimum) && !isNaN_(this.g.globalMaximum) && this.g.useGlobalMinMax && !this.g.testRun) {\r\n\t\t\tas = this.g.globalMinimum;\r\n\t\t\tar = this.g.globalMaximum;\r\n\t\t\tif (!isNaN_(this.g.minimumValue)) {\r\n\t\t\t\tas = this.g.minimumValue;\r\n\t\t\t}\r\n\t\t\tif (!isNaN_(this.g.maximumValue)) {\r\n\t\t\t\tar = this.g.maximumValue;\r\n\t\t\t}\r\n\t\t} else if (!isNaN_(this.g.minimumValue) && !isNaN_(this.g.maximumValue)) {\r\n\t\t\tas = this.g.minimumValue;\r\n\t\t\tar = this.g.maximumValue;\r\n\t\t} else {\r\n\t\t\tlet au: number = -1;\r\n\t\t\tlet av: number = -1;\r\n\t\t\tfor (let aw = 0; aw < aq; aw++) {\r\n\t\t\t\tat = ag[aw];\r\n\t\t\t\tif (at > 0) {\r\n\t\t\t\t\tif (at > ar) {\r\n\t\t\t\t\t\tar = at;\r\n\t\t\t\t\t\tau = aw;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (at < as) {\r\n\t\t\t\t\t\tas = at;\r\n\t\t\t\t\t\tav = aw;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet ax: number = <number>truncate(Math.floor(au / <number>ah));\r\n\t\t\tlet ay: number = au % ah;\r\n\t\t\tlet az: number = <number>truncate(Math.floor(av / <number>ah));\r\n\t\t\tlet a0: number = av % ah;\r\n\t\t\tthis.g.globalMinimum = as;\r\n\t\t\tthis.g.globalMaximum = ar;\r\n\t\t\tlet a1: number = 0;\r\n\t\t\tlet a2: number = 0;\r\n\t\t\tlet a3: number = 0;\r\n\t\t\tlet a4: number = 0;\r\n\t\t\tlet a5: number = 0;\r\n\t\t\tlet a6: number = 0;\r\n\t\t\tfor (let a7 = 0; a7 < ai; a7++) {\r\n\t\t\t\tz = <number>truncate(Math.floor(ab._inner[a7] - b));\r\n\t\t\t\taa = <number>truncate(Math.floor(ac._inner[a7] - b));\r\n\t\t\t\tfor (let a8 = z; a8 < z + v; a8++) {\r\n\t\t\t\t\tfor (let a9 = aa; a9 < aa + v; a9++) {\r\n\t\t\t\t\t\taj = a8 - z;\r\n\t\t\t\t\t\tak = a9 - aa;\r\n\t\t\t\t\t\tif (a8 < 0 || a8 > (ah - 1) || a9 < 0 || a9 > (ah - 1)) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (a8 == ay && a9 == ax) {\r\n\t\t\t\t\t\t\ta1++;\r\n\t\t\t\t\t\t\ta3 = a3 + d.t(ac._inner[a7], this.g.window, this.g.tileViewport);\r\n\t\t\t\t\t\t\ta4 = a4 + d.u(ab._inner[a7], this.g.window, this.g.tileViewport);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (a8 == a0 && a9 == az) {\r\n\t\t\t\t\t\t\ta2++;\r\n\t\t\t\t\t\t\ta5 = a5 + d.t(ac._inner[a7], this.g.window, this.g.tileViewport);\r\n\t\t\t\t\t\t\ta6 = a6 + d.u(ab._inner[a7], this.g.window, this.g.tileViewport);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.i = a3 / a1;\r\n\t\t\tthis.j = a4 / a1;\r\n\t\t\tthis.k = a5 / a2;\r\n\t\t\tthis.l = a6 / a2;\r\n\t\t\tif (!isNaN_(this.g.minimumValue)) {\r\n\t\t\t\tas = this.g.minimumValue;\r\n\t\t\t}\r\n\t\t\tif (!isNaN_(this.g.maximumValue)) {\r\n\t\t\t\tar = this.g.maximumValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.g.testRun) {\r\n\t\t\tthis.x(af, ag, ar, as);\r\n\t\t\tthis.a = af;\r\n\t\t}\r\n\t\tthis.z();\r\n\t}\r\n\tprivate x(a: number[], b: number[], c: number, d: number): void {\r\n\t\tlet e: number;\r\n\t\tlet f: number = b.length;\r\n\t\tif (this.g.useLogarithmicScale) {\r\n\t\t\tif (d <= 0) {\r\n\t\t\t\td = 0;\r\n\t\t\t} else {\r\n\t\t\t\td = logBase(d, this.g.logarithmBase);\r\n\t\t\t}\r\n\t\t\tif (c <= 0) {\r\n\t\t\t\tc = 0;\r\n\t\t\t} else {\r\n\t\t\t\tc = logBase(c, this.g.logarithmBase);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = c - d;\r\n\t\tif (isNaN_(h) || h <= 0) {\r\n\t\t\th = 1;\r\n\t\t}\r\n\t\tlet i: number;\r\n\t\tlet j: number;\r\n\t\tlet k: number;\r\n\t\tlet l: number;\r\n\t\tlet m = this.g.useLogarithmicScale;\r\n\t\tlet n = this.g.logarithmBase;\r\n\t\tif (this.g.scaleColors != null) {\r\n\t\t\tlet o: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet p: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet q: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet r: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet s: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet t: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet u: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet v: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet w: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet x: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet y: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet z: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet aa: number[] = this.g.scaleColorOffsets;\r\n\t\t\tif (aa == null || aa.length != this.g.scaleColors.length) {\r\n\t\t\t\taa = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\t\tif (aa.length == 1) {\r\n\t\t\t\t\taa[0] = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let ab = 0; ab < this.g.scaleColors.length; ab++) {\r\n\t\t\t\t\t\taa[ab] = <number>ab / <number>(this.g.scaleColors.length - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let ac = 0; ac < this.g.scaleColors.length; ac++) {\r\n\t\t\t\to[ac] = this.g.scaleColors[ac].l;\r\n\t\t\t\tq[ac] = this.g.scaleColors[ac].o;\r\n\t\t\t\ts[ac] = this.g.scaleColors[ac].n;\r\n\t\t\t\tu[ac] = this.g.scaleColors[ac].m;\r\n\t\t\t\tif (ac < this.g.scaleColors.length - 1) {\r\n\t\t\t\t\tp[ac] = this.g.scaleColors[ac + 1].l;\r\n\t\t\t\t\tr[ac] = this.g.scaleColors[ac + 1].o;\r\n\t\t\t\t\tt[ac] = this.g.scaleColors[ac + 1].n;\r\n\t\t\t\t\tv[ac] = this.g.scaleColors[ac + 1].m;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tp[ac] = this.g.scaleColors[ac].l;\r\n\t\t\t\t\tr[ac] = this.g.scaleColors[ac].o;\r\n\t\t\t\t\tt[ac] = this.g.scaleColors[ac].n;\r\n\t\t\t\t\tv[ac] = this.g.scaleColors[ac].m;\r\n\t\t\t\t}\r\n\t\t\t\tw[ac] = p[ac] - o[ac];\r\n\t\t\t\tx[ac] = r[ac] - q[ac];\r\n\t\t\t\ty[ac] = t[ac] - s[ac];\r\n\t\t\t\tz[ac] = v[ac] - u[ac];\r\n\t\t\t}\r\n\t\t\tfor (let ad = 0; ad < f; ad++) {\r\n\t\t\t\te = b[ad];\r\n\t\t\t\tif (e == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\tif (e <= 0) {\r\n\t\t\t\t\t\te = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\te = logBase(e, n);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tg = (e - d) / (h);\r\n\t\t\t\tif (g < 0) {\r\n\t\t\t\t\tg = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (g > 1) {\r\n\t\t\t\t\tg = 1;\r\n\t\t\t\t}\r\n\t\t\t\tlet ae: number = 0;\r\n\t\t\t\tfor (let af = 0; af < aa.length; af++) {\r\n\t\t\t\t\tif (aa[af] >= g) {\r\n\t\t\t\t\t\tae = af - 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (ae > aa.length - 2) {\r\n\t\t\t\t\tae = aa.length - 2;\r\n\t\t\t\t}\r\n\t\t\t\tif (ae < 0) {\r\n\t\t\t\t\tae = 0;\r\n\t\t\t\t}\r\n\t\t\t\tg = (g - aa[ae]) / (aa[ae + 1] - aa[ae]);\r\n\t\t\t\ti = <number>truncate(Math.floor(o[ae] + g * (w[ae])));\r\n\t\t\t\tj = <number>truncate(Math.floor(q[ae] + g * (x[ae])));\r\n\t\t\t\tk = <number>truncate(Math.floor(s[ae] + g * (y[ae])));\r\n\t\t\t\tl = <number>truncate(Math.floor(u[ae] + g * (z[ae])));\r\n\t\t\t\ta[4 * ad] = i;\r\n\t\t\t\ta[4 * ad + 1] = j;\r\n\t\t\t\ta[4 * ad + 2] = k;\r\n\t\t\t\ta[4 * ad + 3] = l;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet ag: number = this.g.minimumColor.l;\r\n\t\t\tlet ah: number = this.g.maximumColor.l;\r\n\t\t\tlet ai: number = this.g.minimumColor.o;\r\n\t\t\tlet aj: number = this.g.maximumColor.o;\r\n\t\t\tlet ak: number = this.g.minimumColor.n;\r\n\t\t\tlet al: number = this.g.maximumColor.n;\r\n\t\t\tlet am: number = this.g.minimumColor.m;\r\n\t\t\tlet an: number = this.g.maximumColor.m;\r\n\t\t\tlet ao: number = ah - ag;\r\n\t\t\tlet ap: number = aj - ai;\r\n\t\t\tlet aq: number = al - ak;\r\n\t\t\tlet ar: number = an - am;\r\n\t\t\tfor (let as = 0; as < f; as++) {\r\n\t\t\t\te = b[as];\r\n\t\t\t\tif (e == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\te = logBase(e, n);\r\n\t\t\t\t}\r\n\t\t\t\tg = (e - d) / (h);\r\n\t\t\t\tif (g < 0) {\r\n\t\t\t\t\tg = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (g > 1) {\r\n\t\t\t\t\tg = 1;\r\n\t\t\t\t}\r\n\t\t\t\ti = <number>truncate(Math.floor(ag + g * (ao)));\r\n\t\t\t\tj = <number>truncate(Math.floor(ai + g * (ap)));\r\n\t\t\t\tk = <number>truncate(Math.floor(ak + g * (aq)));\r\n\t\t\t\tl = <number>truncate(Math.floor(am + g * (ar)));\r\n\t\t\t\ta[4 * as] = i;\r\n\t\t\t\ta[4 * as + 1] = j;\r\n\t\t\t\ta[4 * as + 2] = k;\r\n\t\t\t\ta[4 * as + 3] = l;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate b(a: Rect): number[] {\r\n\t\tlet b = <number[]>new Array(<number>truncate(a.width) * <number>truncate(a.height));\r\n\t\tfor (let c = 0; c < b.length; c++) {\r\n\t\t\tb[c] = 0;\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tprivate d(a: Rect): number[] {\r\n\t\tlet b = <number[]>new Array(<number>truncate(a.width) * <number>truncate(a.height) * 4);\r\n\t\tfor (let c = 0; c < b.length; c++) {\r\n\t\t\tb[c] = 0;\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tprivate c(a: number, b: number): number[] {\r\n\t\tlet c = <number[]>new Array(<number>a * <number>a);\r\n\t\tfor (let d = 0; d < c.length; d++) {\r\n\t\t\tc[d] = 0;\r\n\t\t}\r\n\t\tlet e = a / 2;\r\n\t\tlet f = a / 2;\r\n\t\tfor (let g = 0; g < a; g++) {\r\n\t\t\tfor (let h = 0; h < a; h++) {\r\n\t\t\t\tlet i = Math.sqrt(Math.pow(g - f, 2) + Math.pow(h - f, 2));\r\n\t\t\t\tif (i > e) {\r\n\t\t\t\t\tc[h * a + g] = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc[h * a + g] = e - i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet j: number = 0;\r\n\t\tlet k: number = -1.7976931348623157E+308;\r\n\t\tlet l: number = 1.7976931348623157E+308;\r\n\t\tfor (let m = 0; m < a; m++) {\r\n\t\t\tfor (let n = 0; n < a; n++) {\r\n\t\t\t\tlet o = c[n * a + m];\r\n\t\t\t\tif (o == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tj += o;\r\n\t\t\t\tk = o > k ? o : k;\r\n\t\t\t\tl = o < l ? o : l;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let p = 0; p < a; p++) {\r\n\t\t\tfor (let q = 0; q < a; q++) {\r\n\t\t\t\tlet r = c[q * a + p];\r\n\t\t\t\tif (r == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlet s = (r - l) / (k - l);\r\n\t\t\t\tc[q * a + p] = 0.01 + s * (0.99);\r\n\t\t\t}\r\n\t\t}\r\n\t\tc[<number>truncate(f) * a + <number>truncate(f)] = 1;\r\n\t\treturn c;\r\n\t}\r\n\tprivate q(a: Rect, b: number): number {\r\n\t\treturn <number>truncate(Math.floor(b * 2));\r\n\t}\r\n\tprivate z(): void {\r\n\t\tif (this.completedSink == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.completedSink.onCompleted(((() => {\r\n\t\t\tlet $ret = new HeatTileImageCreatedEventArgs();\r\n\t\t\t$ret.url = this.w;\r\n\t\t\t$ret.x = this.n;\r\n\t\t\t$ret.y = this.o;\r\n\t\t\t$ret.z = this.p;\r\n\t\t\t$ret.globalMinimumValue = this.g.globalMinimum;\r\n\t\t\t$ret.globalMaximumValue = this.g.globalMaximum;\r\n\t\t\t$ret.globalMaximumValueLongitude = this.j;\r\n\t\t\t$ret.globalMaximumValueLatitude = this.i;\r\n\t\t\t$ret.globalMinimumValueLongitude = this.l;\r\n\t\t\t$ret.globalMinimumValueLatitude = this.k;\r\n\t\t\t$ret.imageData = this.a;\r\n\t\t\t$ret.image = this.g.image;\r\n\t\t\treturn $ret;\r\n\t\t})()));\r\n\t}\r\n\tprivate static m: number = 0;\r\n\tprivate i: number = 0;\r\n\tprivate j: number = 0;\r\n\tprivate k: number = 0;\r\n\tprivate l: number = 0;\r\n\tprivate _completedSink: ITileWorkCompletedSink = null;\r\n\tget completedSink(): ITileWorkCompletedSink {\r\n\t\treturn this._completedSink;\r\n\t}\r\n\tset completedSink(a: ITileWorkCompletedSink) {\r\n\t\tthis._completedSink = a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ScalerVisibleBounds extends Base {\r\n\tstatic $t: Type = markType(ScalerVisibleBounds, 'ScalerVisibleBounds');\r\n\tconstructor(a: number, b: number, c: number, d: number) {\r\n\t\tsuper();\r\n\t\tthis.b = a;\r\n\t\tthis.d = b;\r\n\t\tthis.c = c;\r\n\t\tthis.a = d;\r\n\t}\r\n\td: number = 0;\r\n\ta: number = 0;\r\n\tc: number = 0;\r\n\tb: number = 0;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Point, Type, markType } from \"./type\";\r\nimport { Size } from \"./Size\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class Rect extends Base {\r\n\tstatic $t: Type = markType(Rect, 'Rect');\r\n\tconstructor(a: number, b: number, c: number, d: number, e: number);\r\n\tconstructor(a: number, b: number, c: number, d: Size);\r\n\tconstructor(a: number, b: Point, c: Point);\r\n\tconstructor(a: number, b: Point, c: Size);\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\tsuper();\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tlet c: number = <number>_rest[0];\r\n\t\t\t\tlet d: number = <number>_rest[1];\r\n\t\t\t\tlet e: number = <number>_rest[2];\r\n\t\t\t\tlet f: number = <number>_rest[3];\r\n\t\t\t\tthis.top = d;\r\n\t\t\t\tthis.left = c;\r\n\t\t\t\tthis.width = e;\r\n\t\t\t\tthis.height = f;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: number = <number>_rest[0];\r\n\t\t\t\tlet d: number = <number>_rest[1];\r\n\t\t\t\tlet e: Size = <Size>_rest[2];\r\n\t\t\t\tthis.top = d;\r\n\t\t\t\tthis.left = c;\r\n\t\t\t\tthis.width = e.width;\r\n\t\t\t\tthis.height = e.height;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tlet c: Point = <Point>_rest[0];\r\n\t\t\t\tlet d: Point = <Point>_rest[1];\r\n\t\t\t\tthis.top = Math.min(c.y, d.y);\r\n\t\t\t\tthis.left = Math.min(c.x, d.x);\r\n\t\t\t\tthis.width = Math.max(Math.max(c.x, d.x) - this.left, 0);\r\n\t\t\t\tthis.height = Math.max(Math.max(c.y, d.y) - this.top, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t{\r\n\t\t\t\tlet c: Point = <Point>_rest[0];\r\n\t\t\t\tlet d: Size = <Size>_rest[1];\r\n\t\t\t\tthis.top = c.y;\r\n\t\t\t\tthis.left = c.x;\r\n\t\t\t\tthis.width = d.width;\r\n\t\t\t\tthis.height = d.height;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t{\r\n\t\t\t\tthis.top = 0;\r\n\t\t\t\tthis.left = 0;\r\n\t\t\t\tthis.width = 0;\r\n\t\t\t\tthis.height = 0;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate s: number = 0;\r\n\tget x(): number {\r\n\t\treturn this.s;\r\n\t}\r\n\tset x(a: number) {\r\n\t\tthis.s = a;\r\n\t\tthis.o = this.s;\r\n\t\tthis.p = this.o + this.r;\r\n\t}\r\n\tprivate t: number = 0;\r\n\tget y(): number {\r\n\t\treturn this.t;\r\n\t}\r\n\tset y(a: number) {\r\n\t\tthis.t = a;\r\n\t\tthis.q = this.t;\r\n\t\tthis.m = this.q + this.n;\r\n\t}\r\n\tprivate r: number = 0;\r\n\tget width(): number {\r\n\t\treturn this.r;\r\n\t}\r\n\tset width(a: number) {\r\n\t\tthis.r = a;\r\n\t\tthis.p = this.o + this.r;\r\n\t}\r\n\tprivate n: number = 0;\r\n\tget height(): number {\r\n\t\treturn this.n;\r\n\t}\r\n\tset height(a: number) {\r\n\t\tthis.n = a;\r\n\t\tthis.m = this.q + this.n;\r\n\t}\r\n\tprivate q: number = 0;\r\n\tget top(): number {\r\n\t\treturn this.q;\r\n\t}\r\n\tset top(a: number) {\r\n\t\tthis.q = a;\r\n\t\tthis.y = this.q;\r\n\t}\r\n\tprivate o: number = 0;\r\n\tget left(): number {\r\n\t\treturn this.o;\r\n\t}\r\n\tset left(a: number) {\r\n\t\tthis.o = a;\r\n\t\tthis.x = this.o;\r\n\t}\r\n\tprivate p: number = 0;\r\n\tget right(): number {\r\n\t\treturn this.p;\r\n\t}\r\n\tset right(a: number) {\r\n\t\tthis.p = a;\r\n\t\tthis.r = this.p - this.o;\r\n\t}\r\n\tprivate m: number = 0;\r\n\tget bottom(): number {\r\n\t\treturn this.m;\r\n\t}\r\n\tset bottom(a: number) {\r\n\t\tthis.m = a;\r\n\t\tthis.n = this.m - this.q;\r\n\t}\r\n\tget isEmpty(): boolean {\r\n\t\treturn this.r < 0;\r\n\t}\r\n\tstatic get empty(): Rect {\r\n\t\treturn new Rect(0, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\r\n\t}\r\n\tequals1(a: Rect): boolean {\r\n\t\tif (Rect.l_op_Equality(a, null)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (a.x == this.x && a.y == this.y && a.width == this.width && a.height == this.height) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate d(a: number, b: number): boolean {\r\n\t\treturn a >= this.s && a - this.r <= this.s && b >= this.t && b - this.n <= this.t;\r\n\t}\r\n\tcontainsLocation(a: number, b: number): boolean {\r\n\t\treturn !this.isEmpty && this.d(a, b);\r\n\t}\r\n\tcontainsPoint(a: Point): boolean {\r\n\t\treturn this.containsLocation(a.x, a.y);\r\n\t}\r\n\tcontainsRect(a: Rect): boolean {\r\n\t\treturn !this.isEmpty && !a.isEmpty && (this.s <= a.s && this.t <= a.t && this.s + this.r >= a.s + a.r) && this.t + this.n >= a.t + a.n;\r\n\t}\r\n\tinflate(a: number, b: number): void {\r\n\t\tthis.x -= a;\r\n\t\tthis.y -= b;\r\n\t\tthis.width += a * 2;\r\n\t\tthis.height += b * 2;\r\n\t\tif (this.r < 0 || this.n < 0) {\r\n\t\t\tthis.af();\r\n\t\t}\r\n\t}\r\n\tprivate af(): void {\r\n\t\tthis.top = Number.POSITIVE_INFINITY;\r\n\t\tthis.left = Number.POSITIVE_INFINITY;\r\n\t\tthis.width = Number.NEGATIVE_INFINITY;\r\n\t\tthis.height = Number.NEGATIVE_INFINITY;\r\n\t}\r\n\tintersectsWith(a: Rect): boolean {\r\n\t\tif (this.isEmpty || a.isEmpty) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn a.left < this.right && this.left < a.right && a.top < this.bottom && this.top < a.bottom;\r\n\t}\r\n\tintersect(a: Rect): void {\r\n\t\tif (!this.intersectsWith(a)) {\r\n\t\t\tthis.af();\r\n\t\t} else {\r\n\t\t\tlet b: number = Math.max(this.x, a.x);\r\n\t\t\tlet c: number = Math.max(this.y, a.y);\r\n\t\t\tlet d: number = Math.min(this.x + this.width, a.x + a.width) - b;\r\n\t\t\tlet e: number = Math.min(this.y + this.height, a.y + a.height) - c;\r\n\t\t\tif (d < 0) {\r\n\t\t\t\td = 0;\r\n\t\t\t}\r\n\t\t\tif (e < 0) {\r\n\t\t\t\te = 0;\r\n\t\t\t}\r\n\t\t\tthis.r = d;\r\n\t\t\tthis.n = e;\r\n\t\t\tthis.s = b;\r\n\t\t\tthis.t = c;\r\n\t\t\tthis.o = this.s;\r\n\t\t\tthis.q = this.t;\r\n\t\t\tthis.p = this.o + this.r;\r\n\t\t\tthis.m = this.q + this.n;\r\n\t\t}\r\n\t}\r\n\tunion(a: Rect): void {\r\n\t\tif (this.isEmpty) {\r\n\t\t\tthis.s = a.x;\r\n\t\t\tthis.t = a.y;\r\n\t\t\tthis.r = a.width;\r\n\t\t\tthis.n = a.height;\r\n\t\t\tthis.o = this.s;\r\n\t\t\tthis.q = this.t;\r\n\t\t\tthis.p = this.o + this.r;\r\n\t\t\tthis.m = this.q + this.n;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!a.isEmpty) {\r\n\t\t\tlet b: number = Math.min(this.x, a.x);\r\n\t\t\tlet c: number = Math.min(this.y, a.y);\r\n\t\t\tlet d: number = this.width;\r\n\t\t\tlet e: number = this.height;\r\n\t\t\tif (a.width == Number.POSITIVE_INFINITY || this.width == Number.POSITIVE_INFINITY) {\r\n\t\t\t\td = Number.POSITIVE_INFINITY;\r\n\t\t\t} else {\r\n\t\t\t\tlet f: number = Math.max(this.right, a.right);\r\n\t\t\t\td = f - b;\r\n\t\t\t}\r\n\t\t\tif (a.height == Number.POSITIVE_INFINITY || this.height == Number.POSITIVE_INFINITY) {\r\n\t\t\t\te = Number.POSITIVE_INFINITY;\r\n\t\t\t} else {\r\n\t\t\t\tlet g: number = Math.max(this.bottom, a.bottom);\r\n\t\t\t\te = g - c;\r\n\t\t\t}\r\n\t\t\tthis.s = b;\r\n\t\t\tthis.t = c;\r\n\t\t\tthis.r = d;\r\n\t\t\tthis.n = e;\r\n\t\t\tthis.o = this.s;\r\n\t\t\tthis.q = this.t;\r\n\t\t\tthis.p = this.o + this.r;\r\n\t\t\tthis.m = this.q + this.n;\r\n\t\t}\r\n\t}\r\n\tequals(a: any): boolean {\r\n\t\tif (a == null) {\r\n\t\t\treturn super.equals(a);\r\n\t\t}\r\n\t\tlet b = <Rect>a;\r\n\t\treturn b.left == this.left && b.top == this.top && b.width == this.width && b.height == this.height;\r\n\t}\r\n\tgetHashCode(): number {\r\n\t\treturn (this.s) ^ (this.t) ^ (this.r) ^ (this.n);\r\n\t}\r\n\tcopy(): Rect {\r\n\t\treturn new Rect(0, this.x, this.y, this.width, this.height);\r\n\t}\r\n\tstatic l_op_Equality(a: Rect, b: Rect): boolean {\r\n\t\tif (<any>a == null) {\r\n\t\t\treturn <any>b == null;\r\n\t\t} else if (<any>b == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn a.s == b.s && a.t == b.t && a.r == b.r && a.n == b.n;\r\n\t}\r\n\tstatic l_op_Inequality(a: Rect, b: Rect): boolean {\r\n\t\tif (<any>a == null) {\r\n\t\t\treturn <any>b != null;\r\n\t\t} else if (<any>b == null) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn a.s != b.s || a.t != b.t || a.r != b.r || a.n != b.n;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"./type\";\r\nimport { ScalerVisibleBounds } from \"./ScalerVisibleBounds\";\r\nimport { Rect } from \"./Rect\";\r\nimport { List$1 } from \"./List$1\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileScaler extends Base {\r\n\tstatic $t: Type = markType(HeatTileScaler, 'HeatTileScaler');\r\n\tprivate b: number = 0;\r\n\tprivate c: number = 0;\r\n\tprivate d: number = 0;\r\n\tprivate e: number = 0;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.b = 85.05112878 - -85.05112878;\r\n\t\tthis.c = 180 - -180;\r\n\t\tthis.d = this.k(85.05112878);\r\n\t\tthis.e = this.k(85.05112878) - this.k(-85.05112878);\r\n\t}\r\n\tprivate k(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tprivate static a(a: Rect, b: Rect): ScalerVisibleBounds {\r\n\t\tlet c = new Rect(0, b.left / a.width, b.top / a.height, b.width / a.width, b.height / a.height);\r\n\t\tlet d = c.left + c.width * a.left;\r\n\t\tlet e = c.left + c.width * a.right;\r\n\t\tlet f = c.top + c.height * a.top;\r\n\t\tlet g = c.top + c.height * a.bottom;\r\n\t\tlet h = new ScalerVisibleBounds(d, f, e, g);\r\n\t\treturn h;\r\n\t}\r\n\tstatic m(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tt(a: number, b: Rect, c: Rect): number {\r\n\t\tlet d = (a - c.top) * b.width + b.top * c.height;\r\n\t\td = this.k(85.05112878) - d / (c.height / this.e);\r\n\t\treturn HeatTileScaler.m(d);\r\n\t}\r\n\tr(a: number, b: Rect, c: Rect): number {\r\n\t\tlet d = c.top + this.l(a, c.height);\r\n\t\treturn (d - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate l(a: number, b: number): number {\r\n\t\ta = a > -85.05112878 ? (a < 85.05112878 ? a : 85.05112878) : -85.05112878;\r\n\t\tlet c = this.k(a);\r\n\t\tlet d = (this.d - c) * b / this.e;\r\n\t\treturn (d);\r\n\t}\r\n\tu(a: number, b: Rect, c: Rect): number {\r\n\t\tlet d: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\treturn -180 + d * (this.c);\r\n\t}\r\n\ts(a: number, b: Rect, c: Rect): number {\r\n\t\tlet d: number = (a - -180) / (this.c);\r\n\t\treturn c.left + c.width * (d - b.left) / b.width;\r\n\t}\r\n\ti(a: Rect, b: Rect): number {\r\n\t\tlet c = HeatTileScaler.a(a, b);\r\n\t\treturn this.t(b.bottom, a, b);\r\n\t}\r\n\tg(a: Rect, b: Rect): number {\r\n\t\tlet c = HeatTileScaler.a(a, b);\r\n\t\treturn this.t(b.top, a, b);\r\n\t}\r\n\tj(a: Rect, b: Rect): number {\r\n\t\tlet c = HeatTileScaler.a(a, b);\r\n\t\treturn this.u(b.left, a, b);\r\n\t}\r\n\th(a: Rect, b: Rect): number {\r\n\t\tlet c = HeatTileScaler.a(a, b);\r\n\t\treturn this.u(b.right, a, b);\r\n\t}\r\n\tv(a: List$1<number>, b: Rect, c: Rect): void {\r\n\t\tlet d = c.height;\r\n\t\tlet e = c.top;\r\n\t\tfor (let f = 0; f < a.count; f++) {\r\n\t\t\tlet g: number = a._inner[f];\r\n\t\t\tg = g > -85.05112878 ? (g < 85.05112878 ? g : 85.05112878) : -85.05112878;\r\n\t\t\tlet h: number = g * (0.017453292519943295);\r\n\t\t\tlet i: number = Math.sin(h);\r\n\t\t\tlet j: number = 0.5 * Math.log((1 + i) / (1 - i));\r\n\t\t\tlet k = (this.d - j) * d / this.e;\r\n\t\t\tk = e + k;\r\n\t\t\ta._inner[f] = (k - b.top * d) / b.width;\r\n\t\t}\r\n\t}\r\n\tw(a: List$1<number>, b: Rect, c: Rect): void {\r\n\t\tlet d: number = c.left;\r\n\t\tlet e: number = c.width;\r\n\t\tlet f: number = b.left;\r\n\t\tlet g: number = b.width;\r\n\t\tfor (let h = 0; h < a.count; h++) {\r\n\t\t\tlet i: number = (a._inner[h] - -180) / (this.c);\r\n\t\t\ta._inner[h] = c.left + c.width * (i - b.left) / b.width;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface ITileWorkCompletedSink { \r\n\tonCompleted(a: TileImageCreatedEventArgs): void;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let ITileWorkCompletedSink_$type = new Type(null, 'ITileWorkCompletedSink');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, typeGetValue, Type, markType } from \"./type\";\r\nimport { TileWorkSettings } from \"./TileWorkSettings\";\r\nimport { Color } from \"./Color\";\r\nimport { HeatTileGeneratorWorker } from \"./HeatTileGeneratorWorker\";\r\nimport { HeatTileScaler } from \"./HeatTileScaler\";\r\nimport { Rect } from \"./Rect\";\r\nimport { ITileWorkCompletedSink, ITileWorkCompletedSink_$type } from \"./ITileWorkCompletedSink\";\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { HeatTileImageCreatedEventArgs } from \"./HeatTileImageCreatedEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileGeneratorWebWorker extends Base {\r\n\tstatic $t: Type = markType(HeatTileGeneratorWebWorker, 'HeatTileGeneratorWebWorker');\r\n\tprivate static e: HeatTileScaler = new HeatTileScaler();\r\n\tprivate static b: HeatTileGeneratorWorker[] = <HeatTileGeneratorWorker[]>[];\r\n\tprivate static _postmessage: any = null;\r\n\tstatic get postmessage(): any {\r\n\t\treturn HeatTileGeneratorWebWorker._postmessage;\r\n\t}\r\n\tstatic set postmessage(a: any) {\r\n\t\tHeatTileGeneratorWebWorker._postmessage = a;\r\n\t}\r\n\tprivate static _yValues: number[] = null;\r\n\tprivate static _xValues: number[] = null;\r\n\tprivate static _values: number[] = null;\r\n\tstatic onmessage(args_: any): void {\r\n\t\tlet data_ = args_.data;\r\n\t\tlet a: boolean = <boolean>(data_.cancelTile);\r\n\t\tlet b = <number>(data_.z);\r\n\t\tlet c = <number>(data_.y);\r\n\t\tlet d = <number>(data_.x);\r\n\t\tif (a) {\r\n\t\t\tfor (let i_ = 0; i_ < HeatTileGeneratorWebWorker.b.length; i_++) {\r\n\t\t\t\tlet e = HeatTileGeneratorWebWorker.b[i_];\r\n\t\t\t\tif (e.g.testRun) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (e.g.z == b && e.g.x == d && e.g.y == c) {\r\n\t\t\t\t\tlet workers_ = HeatTileGeneratorWebWorker.b;\r\n\t\t\t\t\tworkers_.splice(i_, 1);\r\n\t\t\t\t\ti_--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet f = new TileWorkSettings();\r\n\t\tlet g: any = <any><any>data_;\r\n\t\tif (!<boolean>g[\"messageId\"]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (<boolean>g[\"isNewData\"]) {\r\n\t\t\tlet yValues_ = g[\"yValues\"];\r\n\t\t\tlet xValues_ = g[\"xValues\"];\r\n\t\t\tlet values_ = g[\"values\"];\r\n\t\t\tHeatTileGeneratorWebWorker._yValues = <number[]><any>(new Float64Array(yValues_));\r\n\t\t\tHeatTileGeneratorWebWorker._xValues = <number[]><any>(new Float64Array(xValues_));\r\n\t\t\tHeatTileGeneratorWebWorker._values = <number[]><any>(new Float64Array(values_));\r\n\t\t}\r\n\t\tlet h: any[] = <any[]>g[\"scaleColors\"];\r\n\t\tlet i: Color[] = <Color[]>new Array(h.length);\r\n\t\tfor (let j = 0; j < h.length; j++) {\r\n\t\t\ti[j] = Color.u(typeGetValue(h[j][\"a\"]), typeGetValue(h[j][\"r\"]), typeGetValue(h[j][\"g\"]), typeGetValue(h[j][\"b\"]));\r\n\t\t}\r\n\t\tf.scaler = HeatTileGeneratorWebWorker.e;\r\n\t\tf.blurRadius = <number>g[\"blurRadius\"];\r\n\t\tf.maxBlurRadius = <number>g[\"maxBlurRadius\"];\r\n\t\tf.useBlurRadiusAdjustedForZoom = <boolean>(g[\"useBlurRadiusAdjustedForZoom\"]);\r\n\t\tf.minimumColor = Color.u(typeGetValue((<any>g[\"minimumColor\"])[\"a\"]), typeGetValue((<any>g[\"minimumColor\"])[\"r\"]), typeGetValue((<any>g[\"minimumColor\"])[\"g\"]), typeGetValue((<any>g[\"minimumColor\"])[\"b\"]));\r\n\t\tf.maximumColor = Color.u(typeGetValue((<any>g[\"maximumColor\"])[\"a\"]), typeGetValue((<any>g[\"maximumColor\"])[\"r\"]), typeGetValue((<any>g[\"maximumColor\"])[\"g\"]), typeGetValue((<any>g[\"maximumColor\"])[\"b\"]));\r\n\t\tf.tileViewport = new Rect(0, <number>(<any>g[\"tileViewport\"])[\"left\"], <number>(<any>g[\"tileViewport\"])[\"top\"], <number>(<any>g[\"tileViewport\"])[\"width\"], <number>(<any>g[\"tileViewport\"])[\"height\"]);\r\n\t\tf.yValues = HeatTileGeneratorWebWorker._yValues;\r\n\t\tf.xValues = HeatTileGeneratorWebWorker._xValues;\r\n\t\tf.values = HeatTileGeneratorWebWorker._values;\r\n\t\tf.minimumVisibleLatitude = <number>g[\"minimumVisibleLatitude\"];\r\n\t\tf.minimumVisibleLongitude = <number>g[\"minimumVisibleLongitude\"];\r\n\t\tf.maximumVisibleLatitude = <number>g[\"maximumVisibleLatitude\"];\r\n\t\tf.maximumVisibleLongitude = <number>g[\"maximumVisibleLongitude\"];\r\n\t\tf.z = typeGetValue(g[\"z\"]);\r\n\t\tf.x = typeGetValue(g[\"x\"]);\r\n\t\tf.y = typeGetValue(g[\"y\"]);\r\n\t\tf.window = new Rect(0, <number>(<any>g[\"window\"])[\"left\"], <number>(<any>g[\"window\"])[\"top\"], <number>(<any>g[\"window\"])[\"width\"], <number>(<any>g[\"window\"])[\"height\"]);\r\n\t\tf.testRun = <boolean>g[\"testRun\"];\r\n\t\tf.globalMinimum = <number>g[\"globalMinimum\"];\r\n\t\tf.globalMaximum = <number>g[\"globalMaximum\"];\r\n\t\tf.useGlobalMinMax = <boolean>g[\"useGlobalMinMax\"];\r\n\t\tf.minimumValue = <number>g[\"minimumValue\"];\r\n\t\tf.maximumValue = <number>g[\"maximumValue\"];\r\n\t\tf.scaleColorOffsets = <number[]>g[\"scaleColorOffsets\"];\r\n\t\tf.scaleColors = i;\r\n\t\tf.useLogarithmicScale = <boolean>g[\"useLogarithmicScale\"];\r\n\t\tf.logarithmBase = <number>g[\"logarithmBase\"];\r\n\t\tlet k = new HeatTileGeneratorWorker(f);\r\n\t\tk.u = typeGetValue(g[\"messageId\"]);\r\n\t\tk.h = true;\r\n\t\tk.completedSink = new CompletedSinkImpl(k);\r\n\t\tlet workersl_ = HeatTileGeneratorWebWorker.b;\r\n\t\tlet worker_ = k;\r\n\t\tworkersl_.push(worker_);\r\n\t}\r\n\tstatic start(): void {\r\n\t\tlet workers_ = HeatTileGeneratorWebWorker.b;\r\n\t\t\r\n            setInterval(function () {\r\n\t            if (workers_.length > 0) {\r\n\t\t            var worker = workers_.shift();\r\n\r\n\t\t            worker.doWork();\r\n\t\t            worker.completedSink = null;\r\n\t            }\r\n            }, 16);;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CompletedSinkImpl extends Base implements ITileWorkCompletedSink {\r\n\tstatic $t: Type = markType(CompletedSinkImpl, 'CompletedSinkImpl', (<any>Base).$, [ITileWorkCompletedSink_$type]);\r\n\tprivate a: HeatTileGeneratorWorker = null;\r\n\tconstructor(a: HeatTileGeneratorWorker) {\r\n\t\tsuper();\r\n\t\tthis.a = a;\r\n\t}\r\n\tonCompleted(a: TileImageCreatedEventArgs): void {\r\n\t\tlet b = <HeatTileImageCreatedEventArgs>a;\r\n\t\tlet c: any = <any>{};\r\n\t\tlet imageData_ = b.imageData;\r\n\t\tc[\"messageId\"] = this.a.u;\r\n\t\tc[\"imageData\"] = (b.imageData == null ? null : (<any>(new Uint8ClampedArray(imageData_)))[\"buffer\"]);\r\n\t\tc[\"z\"] = b.z;\r\n\t\tc[\"x\"] = b.x;\r\n\t\tc[\"y\"] = b.y;\r\n\t\tc[\"url\"] = b.url;\r\n\t\tc[\"globalMinimumValue\"] = b.globalMinimumValue;\r\n\t\tc[\"globalMaximumValue\"] = b.globalMaximumValue;\r\n\t\tc[\"globalMaximumValueLongitude\"] = b.globalMaximumValueLongitude;\r\n\t\tc[\"globalMaximumValueLatitude\"] = b.globalMaximumValueLatitude;\r\n\t\tc[\"globalMinimumValueLongitude\"] = b.globalMinimumValueLongitude;\r\n\t\tc[\"globalMinimumValueLatitude\"] = b.globalMinimumValueLatitude;\r\n\t\tif (this.a.h && c[\"imageData\"] != null) {\r\n\t\t\t(<(arg1: any, arg2: any[]) => void>HeatTileGeneratorWebWorker.postmessage)(c, <any[]>[ c[\"imageData\"] ]);\r\n\t\t} else {\r\n\t\t\t(<(arg1: any) => void>HeatTileGeneratorWebWorker.postmessage)(c);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { HeatTileGeneratorWebWorker } from 'igniteui-core/HeatTileGeneratorWebWorker';\r\n\r\nlet worker: Worker = self as any;\r\n\r\nworker.onmessage = HeatTileGeneratorWebWorker.onmessage;\r\nHeatTileGeneratorWebWorker.postmessage = function () { self.postMessage.apply(self, Array.prototype.slice.call(arguments)); };\r\n\r\nHeatTileGeneratorWebWorker.start();\r\n\r\nexport default {} as typeof Worker & (new () => Worker);\r\n"],"sourceRoot":""}